
SEV_SEG.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002c4c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  00002c4c  00002cc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000195c  00000000  00000000  00002ce8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d55  00000000  00000000  00004644  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00005399  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000054d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00005649  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00007292  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000817d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00008f2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000908c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00009319  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00009ae7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e4       	ldi	r30, 0x4C	; 76
      68:	fc e2       	ldi	r31, 0x2C	; 44
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 38       	cpi	r26, 0x86	; 134
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 cb 14 	call	0x2996	; 0x2996 <main>
      7a:	0c 94 24 16 	jmp	0x2c48	; 0x2c48 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 ed 15 	jmp	0x2bda	; 0x2bda <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 09 16 	jmp	0x2c12	; 0x2c12 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 f9 15 	jmp	0x2bf2	; 0x2bf2 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 15 16 	jmp	0x2c2a	; 0x2c2a <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 f9 15 	jmp	0x2bf2	; 0x2bf2 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 15 16 	jmp	0x2c2a	; 0x2c2a <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 ed 15 	jmp	0x2bda	; 0x2bda <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__stack+0x2f>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__stack+0x45>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__stack+0x1d>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__stack+0x2f>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__stack+0x25>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__stack+0x2b>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__stack+0x45>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__stack+0x1b7>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__stack+0x41>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__stack+0x1b7>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__stack+0x57>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__stack+0x1b7>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__stack+0xc3>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__stack+0xb7>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__stack+0xdf>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__stack+0xf9>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__stack+0x7f>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__stack+0x13d>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__stack+0x131>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__stack+0x10f>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__stack+0x15b>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__stack+0x143>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__stack+0x19d>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__stack+0x19d>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__stack+0x19d>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__stack+0x1a7>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 09 16 	jmp	0x2c12	; 0x2c12 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 f9 15 	jmp	0x2bf2	; 0x2bf2 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 15 16 	jmp	0x2c2a	; 0x2c2a <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 f9 15 	jmp	0x2bf2	; 0x2bf2 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 15 16 	jmp	0x2c2a	; 0x2c2a <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 f9 15 	jmp	0x2bf2	; 0x2bf2 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 15 16 	jmp	0x2c2a	; 0x2c2a <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 fd 15 	jmp	0x2bfa	; 0x2bfa <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 19 16 	jmp	0x2c32	; 0x2c32 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__pack_f+0x178>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__pack_f+0x172>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__pack_f+0x17c>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__pack_f+0x114>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__pack_f+0x76>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__pack_f+0xca>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__pack_f+0x86>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__pack_f+0x7e>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__pack_f+0x9c>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__pack_f+0x94>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__pack_f+0xbe>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__pack_f+0xee>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__pack_f+0xf6>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__pack_f+0xf6>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__pack_f+0x10e>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__pack_f+0x162>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__pack_f+0x172>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__pack_f+0x144>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__pack_f+0x154>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__pack_f+0x14c>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__pack_f+0x162>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__pack_f+0x164>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__pack_f+0x17c>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_enuSetPortDirection>:
/*                 : Arg.2: Copy_u8Dir:                                     */
/*                                        DIO_INPTU_PIN  ,   DIO_OUTPUT_PIN */
/* Return          : ERROR_STATE eum.                                       */
/****************************************************************************/
ES_t DIO_enuSetPortDirection(u8 Copy_u8PortID, u8 Copy_u8Dir)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <DIO_enuSetPortDirection+0x6>
     b3c:	00 d0       	rcall	.+0      	; 0xb3e <DIO_enuSetPortDirection+0x8>
     b3e:	0f 92       	push	r0
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	8a 83       	std	Y+2, r24	; 0x02
     b46:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuerrorState = ES_NOK ;
     b48:	19 82       	std	Y+1, r1	; 0x01

	if( (Copy_u8PortID <= DIO_PORTD )&& (Copy_u8Dir <= OUTPUT_PORT)  )
     b4a:	8a 81       	ldd	r24, Y+2	; 0x02
     b4c:	84 30       	cpi	r24, 0x04	; 4
     b4e:	a8 f5       	brcc	.+106    	; 0xbba <DIO_enuSetPortDirection+0x84>
	{
		switch( Copy_u8PortID )
     b50:	8a 81       	ldd	r24, Y+2	; 0x02
     b52:	28 2f       	mov	r18, r24
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	3d 83       	std	Y+5, r19	; 0x05
     b58:	2c 83       	std	Y+4, r18	; 0x04
     b5a:	8c 81       	ldd	r24, Y+4	; 0x04
     b5c:	9d 81       	ldd	r25, Y+5	; 0x05
     b5e:	81 30       	cpi	r24, 0x01	; 1
     b60:	91 05       	cpc	r25, r1
     b62:	d1 f0       	breq	.+52     	; 0xb98 <DIO_enuSetPortDirection+0x62>
     b64:	2c 81       	ldd	r18, Y+4	; 0x04
     b66:	3d 81       	ldd	r19, Y+5	; 0x05
     b68:	22 30       	cpi	r18, 0x02	; 2
     b6a:	31 05       	cpc	r19, r1
     b6c:	2c f4       	brge	.+10     	; 0xb78 <DIO_enuSetPortDirection+0x42>
     b6e:	8c 81       	ldd	r24, Y+4	; 0x04
     b70:	9d 81       	ldd	r25, Y+5	; 0x05
     b72:	00 97       	sbiw	r24, 0x00	; 0
     b74:	61 f0       	breq	.+24     	; 0xb8e <DIO_enuSetPortDirection+0x58>
     b76:	1e c0       	rjmp	.+60     	; 0xbb4 <DIO_enuSetPortDirection+0x7e>
     b78:	2c 81       	ldd	r18, Y+4	; 0x04
     b7a:	3d 81       	ldd	r19, Y+5	; 0x05
     b7c:	22 30       	cpi	r18, 0x02	; 2
     b7e:	31 05       	cpc	r19, r1
     b80:	81 f0       	breq	.+32     	; 0xba2 <DIO_enuSetPortDirection+0x6c>
     b82:	8c 81       	ldd	r24, Y+4	; 0x04
     b84:	9d 81       	ldd	r25, Y+5	; 0x05
     b86:	83 30       	cpi	r24, 0x03	; 3
     b88:	91 05       	cpc	r25, r1
     b8a:	81 f0       	breq	.+32     	; 0xbac <DIO_enuSetPortDirection+0x76>
     b8c:	13 c0       	rjmp	.+38     	; 0xbb4 <DIO_enuSetPortDirection+0x7e>
		{
		case DIO_PORTA :
			DDRA = Copy_u8Dir;
     b8e:	ea e3       	ldi	r30, 0x3A	; 58
     b90:	f0 e0       	ldi	r31, 0x00	; 0
     b92:	8b 81       	ldd	r24, Y+3	; 0x03
     b94:	80 83       	st	Z, r24
     b96:	0e c0       	rjmp	.+28     	; 0xbb4 <DIO_enuSetPortDirection+0x7e>
			break;

		case DIO_PORTB :
			DDRB = Copy_u8Dir;
     b98:	e7 e3       	ldi	r30, 0x37	; 55
     b9a:	f0 e0       	ldi	r31, 0x00	; 0
     b9c:	8b 81       	ldd	r24, Y+3	; 0x03
     b9e:	80 83       	st	Z, r24
     ba0:	09 c0       	rjmp	.+18     	; 0xbb4 <DIO_enuSetPortDirection+0x7e>
			break;
		case DIO_PORTC :
			DDRC = Copy_u8Dir;
     ba2:	e4 e3       	ldi	r30, 0x34	; 52
     ba4:	f0 e0       	ldi	r31, 0x00	; 0
     ba6:	8b 81       	ldd	r24, Y+3	; 0x03
     ba8:	80 83       	st	Z, r24
     baa:	04 c0       	rjmp	.+8      	; 0xbb4 <DIO_enuSetPortDirection+0x7e>
			break;
		case DIO_PORTD :
			DDRD = Copy_u8Dir;
     bac:	e1 e3       	ldi	r30, 0x31	; 49
     bae:	f0 e0       	ldi	r31, 0x00	; 0
     bb0:	8b 81       	ldd	r24, Y+3	; 0x03
     bb2:	80 83       	st	Z, r24
			break;
		}
		Local_enuerrorState = ES_OK;
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	89 83       	std	Y+1, r24	; 0x01
     bb8:	02 c0       	rjmp	.+4      	; 0xbbe <DIO_enuSetPortDirection+0x88>

	}
	else
	{
		Local_enuerrorState = ES_OUT_OF_RANGE;
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	89 83       	std	Y+1, r24	; 0x01

	}


	return Local_enuerrorState  ;
     bbe:	89 81       	ldd	r24, Y+1	; 0x01

}//End of DIO_enuSetPortDirection().
     bc0:	0f 90       	pop	r0
     bc2:	0f 90       	pop	r0
     bc4:	0f 90       	pop	r0
     bc6:	0f 90       	pop	r0
     bc8:	0f 90       	pop	r0
     bca:	cf 91       	pop	r28
     bcc:	df 91       	pop	r29
     bce:	08 95       	ret

00000bd0 <DIO_enuSetPortValue>:
/*                 : Arg.2: Copy_u8Val:                                     */
/*                                        DIO_INPTU_PIN  ,  DIO_OUTPUT_PIN  */
/* Return          : ERROR_STATE eum.                                       */
/****************************************************************************/
ES_t DIO_enuSetPortValue(u8 Copy_u8PortID, u8 Copy_u8Val)
{
     bd0:	df 93       	push	r29
     bd2:	cf 93       	push	r28
     bd4:	00 d0       	rcall	.+0      	; 0xbd6 <DIO_enuSetPortValue+0x6>
     bd6:	00 d0       	rcall	.+0      	; 0xbd8 <DIO_enuSetPortValue+0x8>
     bd8:	0f 92       	push	r0
     bda:	cd b7       	in	r28, 0x3d	; 61
     bdc:	de b7       	in	r29, 0x3e	; 62
     bde:	8a 83       	std	Y+2, r24	; 0x02
     be0:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuerrorState = ES_NOK ;
     be2:	19 82       	std	Y+1, r1	; 0x01

	if( Copy_u8PortID <= DIO_PORTD )
     be4:	8a 81       	ldd	r24, Y+2	; 0x02
     be6:	84 30       	cpi	r24, 0x04	; 4
     be8:	a8 f5       	brcc	.+106    	; 0xc54 <DIO_enuSetPortValue+0x84>
	{
		switch( Copy_u8PortID )
     bea:	8a 81       	ldd	r24, Y+2	; 0x02
     bec:	28 2f       	mov	r18, r24
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	3d 83       	std	Y+5, r19	; 0x05
     bf2:	2c 83       	std	Y+4, r18	; 0x04
     bf4:	8c 81       	ldd	r24, Y+4	; 0x04
     bf6:	9d 81       	ldd	r25, Y+5	; 0x05
     bf8:	81 30       	cpi	r24, 0x01	; 1
     bfa:	91 05       	cpc	r25, r1
     bfc:	d1 f0       	breq	.+52     	; 0xc32 <DIO_enuSetPortValue+0x62>
     bfe:	2c 81       	ldd	r18, Y+4	; 0x04
     c00:	3d 81       	ldd	r19, Y+5	; 0x05
     c02:	22 30       	cpi	r18, 0x02	; 2
     c04:	31 05       	cpc	r19, r1
     c06:	2c f4       	brge	.+10     	; 0xc12 <DIO_enuSetPortValue+0x42>
     c08:	8c 81       	ldd	r24, Y+4	; 0x04
     c0a:	9d 81       	ldd	r25, Y+5	; 0x05
     c0c:	00 97       	sbiw	r24, 0x00	; 0
     c0e:	61 f0       	breq	.+24     	; 0xc28 <DIO_enuSetPortValue+0x58>
     c10:	1e c0       	rjmp	.+60     	; 0xc4e <DIO_enuSetPortValue+0x7e>
     c12:	2c 81       	ldd	r18, Y+4	; 0x04
     c14:	3d 81       	ldd	r19, Y+5	; 0x05
     c16:	22 30       	cpi	r18, 0x02	; 2
     c18:	31 05       	cpc	r19, r1
     c1a:	81 f0       	breq	.+32     	; 0xc3c <DIO_enuSetPortValue+0x6c>
     c1c:	8c 81       	ldd	r24, Y+4	; 0x04
     c1e:	9d 81       	ldd	r25, Y+5	; 0x05
     c20:	83 30       	cpi	r24, 0x03	; 3
     c22:	91 05       	cpc	r25, r1
     c24:	81 f0       	breq	.+32     	; 0xc46 <DIO_enuSetPortValue+0x76>
     c26:	13 c0       	rjmp	.+38     	; 0xc4e <DIO_enuSetPortValue+0x7e>
		{
		case DIO_PORTA :
			PORTA = Copy_u8Val;
     c28:	eb e3       	ldi	r30, 0x3B	; 59
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	8b 81       	ldd	r24, Y+3	; 0x03
     c2e:	80 83       	st	Z, r24
     c30:	0e c0       	rjmp	.+28     	; 0xc4e <DIO_enuSetPortValue+0x7e>
			break;

		case DIO_PORTB :
			PORTB = Copy_u8Val;
     c32:	e8 e3       	ldi	r30, 0x38	; 56
     c34:	f0 e0       	ldi	r31, 0x00	; 0
     c36:	8b 81       	ldd	r24, Y+3	; 0x03
     c38:	80 83       	st	Z, r24
     c3a:	09 c0       	rjmp	.+18     	; 0xc4e <DIO_enuSetPortValue+0x7e>
			break;

		case DIO_PORTC :
			PORTC = Copy_u8Val;
     c3c:	e5 e3       	ldi	r30, 0x35	; 53
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	8b 81       	ldd	r24, Y+3	; 0x03
     c42:	80 83       	st	Z, r24
     c44:	04 c0       	rjmp	.+8      	; 0xc4e <DIO_enuSetPortValue+0x7e>
			break;

		case DIO_PORTD :
			PORTD = Copy_u8Val;
     c46:	e2 e3       	ldi	r30, 0x32	; 50
     c48:	f0 e0       	ldi	r31, 0x00	; 0
     c4a:	8b 81       	ldd	r24, Y+3	; 0x03
     c4c:	80 83       	st	Z, r24
			break;
		}

		Local_enuerrorState = ES_OK;
     c4e:	81 e0       	ldi	r24, 0x01	; 1
     c50:	89 83       	std	Y+1, r24	; 0x01
     c52:	02 c0       	rjmp	.+4      	; 0xc58 <DIO_enuSetPortValue+0x88>

	}
	else
	{
		Local_enuerrorState = ES_OUT_OF_RANGE;
     c54:	83 e0       	ldi	r24, 0x03	; 3
     c56:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuerrorState  ;
     c58:	89 81       	ldd	r24, Y+1	; 0x01
}//End of DIO_enuSetPortValue().
     c5a:	0f 90       	pop	r0
     c5c:	0f 90       	pop	r0
     c5e:	0f 90       	pop	r0
     c60:	0f 90       	pop	r0
     c62:	0f 90       	pop	r0
     c64:	cf 91       	pop	r28
     c66:	df 91       	pop	r29
     c68:	08 95       	ret

00000c6a <DIO_enuToggelPort>:
/*                                        DIO_PORTA      ,   DIO_PORTA      */
/*                                        DIO_PORTA      ,   DIO_PORTA      */
/* Return          : ERROR_STATE eum.                                       */
/****************************************************************************/
ES_t DIO_enuToggelPort(u8  Copy_u8PortID )
{
     c6a:	df 93       	push	r29
     c6c:	cf 93       	push	r28
     c6e:	00 d0       	rcall	.+0      	; 0xc70 <DIO_enuToggelPort+0x6>
     c70:	00 d0       	rcall	.+0      	; 0xc72 <DIO_enuToggelPort+0x8>
     c72:	cd b7       	in	r28, 0x3d	; 61
     c74:	de b7       	in	r29, 0x3e	; 62
     c76:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuerrorState = ES_NOK ;
     c78:	19 82       	std	Y+1, r1	; 0x01

	if( Copy_u8PortID <= DIO_PORTD )
     c7a:	8a 81       	ldd	r24, Y+2	; 0x02
     c7c:	84 30       	cpi	r24, 0x04	; 4
     c7e:	08 f0       	brcs	.+2      	; 0xc82 <DIO_enuToggelPort+0x18>
     c80:	41 c0       	rjmp	.+130    	; 0xd04 <DIO_enuToggelPort+0x9a>
	{
		switch( Copy_u8PortID )
     c82:	8a 81       	ldd	r24, Y+2	; 0x02
     c84:	28 2f       	mov	r18, r24
     c86:	30 e0       	ldi	r19, 0x00	; 0
     c88:	3c 83       	std	Y+4, r19	; 0x04
     c8a:	2b 83       	std	Y+3, r18	; 0x03
     c8c:	8b 81       	ldd	r24, Y+3	; 0x03
     c8e:	9c 81       	ldd	r25, Y+4	; 0x04
     c90:	81 30       	cpi	r24, 0x01	; 1
     c92:	91 05       	cpc	r25, r1
     c94:	e9 f0       	breq	.+58     	; 0xcd0 <DIO_enuToggelPort+0x66>
     c96:	2b 81       	ldd	r18, Y+3	; 0x03
     c98:	3c 81       	ldd	r19, Y+4	; 0x04
     c9a:	22 30       	cpi	r18, 0x02	; 2
     c9c:	31 05       	cpc	r19, r1
     c9e:	2c f4       	brge	.+10     	; 0xcaa <DIO_enuToggelPort+0x40>
     ca0:	8b 81       	ldd	r24, Y+3	; 0x03
     ca2:	9c 81       	ldd	r25, Y+4	; 0x04
     ca4:	00 97       	sbiw	r24, 0x00	; 0
     ca6:	61 f0       	breq	.+24     	; 0xcc0 <DIO_enuToggelPort+0x56>
     ca8:	2a c0       	rjmp	.+84     	; 0xcfe <DIO_enuToggelPort+0x94>
     caa:	2b 81       	ldd	r18, Y+3	; 0x03
     cac:	3c 81       	ldd	r19, Y+4	; 0x04
     cae:	22 30       	cpi	r18, 0x02	; 2
     cb0:	31 05       	cpc	r19, r1
     cb2:	b1 f0       	breq	.+44     	; 0xce0 <DIO_enuToggelPort+0x76>
     cb4:	8b 81       	ldd	r24, Y+3	; 0x03
     cb6:	9c 81       	ldd	r25, Y+4	; 0x04
     cb8:	83 30       	cpi	r24, 0x03	; 3
     cba:	91 05       	cpc	r25, r1
     cbc:	c9 f0       	breq	.+50     	; 0xcf0 <DIO_enuToggelPort+0x86>
     cbe:	1f c0       	rjmp	.+62     	; 0xcfe <DIO_enuToggelPort+0x94>
		{
		case DIO_PORTA :
			PORTA = ~PORTA;
     cc0:	ab e3       	ldi	r26, 0x3B	; 59
     cc2:	b0 e0       	ldi	r27, 0x00	; 0
     cc4:	eb e3       	ldi	r30, 0x3B	; 59
     cc6:	f0 e0       	ldi	r31, 0x00	; 0
     cc8:	80 81       	ld	r24, Z
     cca:	80 95       	com	r24
     ccc:	8c 93       	st	X, r24
     cce:	17 c0       	rjmp	.+46     	; 0xcfe <DIO_enuToggelPort+0x94>
			break;

		case DIO_PORTB :
			PORTB = ~PORTB;
     cd0:	a8 e3       	ldi	r26, 0x38	; 56
     cd2:	b0 e0       	ldi	r27, 0x00	; 0
     cd4:	e8 e3       	ldi	r30, 0x38	; 56
     cd6:	f0 e0       	ldi	r31, 0x00	; 0
     cd8:	80 81       	ld	r24, Z
     cda:	80 95       	com	r24
     cdc:	8c 93       	st	X, r24
     cde:	0f c0       	rjmp	.+30     	; 0xcfe <DIO_enuToggelPort+0x94>
			break;

		case DIO_PORTC :
			PORTC = ~PORTC;
     ce0:	a5 e3       	ldi	r26, 0x35	; 53
     ce2:	b0 e0       	ldi	r27, 0x00	; 0
     ce4:	e5 e3       	ldi	r30, 0x35	; 53
     ce6:	f0 e0       	ldi	r31, 0x00	; 0
     ce8:	80 81       	ld	r24, Z
     cea:	80 95       	com	r24
     cec:	8c 93       	st	X, r24
     cee:	07 c0       	rjmp	.+14     	; 0xcfe <DIO_enuToggelPort+0x94>
			break;

		case DIO_PORTD :
			PORTD = ~PORTD ;
     cf0:	a2 e3       	ldi	r26, 0x32	; 50
     cf2:	b0 e0       	ldi	r27, 0x00	; 0
     cf4:	e2 e3       	ldi	r30, 0x32	; 50
     cf6:	f0 e0       	ldi	r31, 0x00	; 0
     cf8:	80 81       	ld	r24, Z
     cfa:	80 95       	com	r24
     cfc:	8c 93       	st	X, r24
			break;
		}

		Local_enuerrorState = ES_OK;
     cfe:	81 e0       	ldi	r24, 0x01	; 1
     d00:	89 83       	std	Y+1, r24	; 0x01
     d02:	02 c0       	rjmp	.+4      	; 0xd08 <DIO_enuToggelPort+0x9e>

	}
	else
	{
		Local_enuerrorState = ES_OUT_OF_RANGE;
     d04:	83 e0       	ldi	r24, 0x03	; 3
     d06:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_enuerrorState  ;
     d08:	89 81       	ldd	r24, Y+1	; 0x01
}//End of DIO_enuToggelPort().
     d0a:	0f 90       	pop	r0
     d0c:	0f 90       	pop	r0
     d0e:	0f 90       	pop	r0
     d10:	0f 90       	pop	r0
     d12:	cf 91       	pop	r28
     d14:	df 91       	pop	r29
     d16:	08 95       	ret

00000d18 <DIO_enuGetPortVlaue>:
/*                                                                          */
/*                 : Arg.2: Address of u8 variable.                         */
/* Return          : ERROR_STATE eum.                                       */
/****************************************************************************/
ES_t DIO_enuGetPortVlaue(u8 Copy_u8PortID, u8* Copy_pu8PortVal)
{
     d18:	df 93       	push	r29
     d1a:	cf 93       	push	r28
     d1c:	00 d0       	rcall	.+0      	; 0xd1e <DIO_enuGetPortVlaue+0x6>
     d1e:	00 d0       	rcall	.+0      	; 0xd20 <DIO_enuGetPortVlaue+0x8>
     d20:	00 d0       	rcall	.+0      	; 0xd22 <DIO_enuGetPortVlaue+0xa>
     d22:	cd b7       	in	r28, 0x3d	; 61
     d24:	de b7       	in	r29, 0x3e	; 62
     d26:	8a 83       	std	Y+2, r24	; 0x02
     d28:	7c 83       	std	Y+4, r23	; 0x04
     d2a:	6b 83       	std	Y+3, r22	; 0x03
	//Local Variable to
	ES_t Local_enuerrorState = ES_NOK ;
     d2c:	19 82       	std	Y+1, r1	; 0x01

	// Check to ensure that the passed address is not equal Null.
	if( Copy_pu8PortVal != NULL )
     d2e:	8b 81       	ldd	r24, Y+3	; 0x03
     d30:	9c 81       	ldd	r25, Y+4	; 0x04
     d32:	00 97       	sbiw	r24, 0x00	; 0
     d34:	09 f4       	brne	.+2      	; 0xd38 <DIO_enuGetPortVlaue+0x20>
     d36:	43 c0       	rjmp	.+134    	; 0xdbe <DIO_enuGetPortVlaue+0xa6>
	{
		// Check to ensure that the passed PortID is in range.
		if( Copy_u8PortID <= DIO_PORTD )
     d38:	8a 81       	ldd	r24, Y+2	; 0x02
     d3a:	84 30       	cpi	r24, 0x04	; 4
     d3c:	e8 f5       	brcc	.+122    	; 0xdb8 <DIO_enuGetPortVlaue+0xa0>
		{

			/**********************************************************
			 * Switching for the suitable case .
			 **********************************************************/
			switch( Copy_u8PortID )
     d3e:	8a 81       	ldd	r24, Y+2	; 0x02
     d40:	28 2f       	mov	r18, r24
     d42:	30 e0       	ldi	r19, 0x00	; 0
     d44:	3e 83       	std	Y+6, r19	; 0x06
     d46:	2d 83       	std	Y+5, r18	; 0x05
     d48:	8d 81       	ldd	r24, Y+5	; 0x05
     d4a:	9e 81       	ldd	r25, Y+6	; 0x06
     d4c:	81 30       	cpi	r24, 0x01	; 1
     d4e:	91 05       	cpc	r25, r1
     d50:	e1 f0       	breq	.+56     	; 0xd8a <DIO_enuGetPortVlaue+0x72>
     d52:	2d 81       	ldd	r18, Y+5	; 0x05
     d54:	3e 81       	ldd	r19, Y+6	; 0x06
     d56:	22 30       	cpi	r18, 0x02	; 2
     d58:	31 05       	cpc	r19, r1
     d5a:	2c f4       	brge	.+10     	; 0xd66 <DIO_enuGetPortVlaue+0x4e>
     d5c:	8d 81       	ldd	r24, Y+5	; 0x05
     d5e:	9e 81       	ldd	r25, Y+6	; 0x06
     d60:	00 97       	sbiw	r24, 0x00	; 0
     d62:	61 f0       	breq	.+24     	; 0xd7c <DIO_enuGetPortVlaue+0x64>
     d64:	26 c0       	rjmp	.+76     	; 0xdb2 <DIO_enuGetPortVlaue+0x9a>
     d66:	2d 81       	ldd	r18, Y+5	; 0x05
     d68:	3e 81       	ldd	r19, Y+6	; 0x06
     d6a:	22 30       	cpi	r18, 0x02	; 2
     d6c:	31 05       	cpc	r19, r1
     d6e:	a1 f0       	breq	.+40     	; 0xd98 <DIO_enuGetPortVlaue+0x80>
     d70:	8d 81       	ldd	r24, Y+5	; 0x05
     d72:	9e 81       	ldd	r25, Y+6	; 0x06
     d74:	83 30       	cpi	r24, 0x03	; 3
     d76:	91 05       	cpc	r25, r1
     d78:	b1 f0       	breq	.+44     	; 0xda6 <DIO_enuGetPortVlaue+0x8e>
     d7a:	1b c0       	rjmp	.+54     	; 0xdb2 <DIO_enuGetPortVlaue+0x9a>
			{
			case DIO_PORTA :
				*Copy_pu8PortVal = PINA;
     d7c:	e9 e3       	ldi	r30, 0x39	; 57
     d7e:	f0 e0       	ldi	r31, 0x00	; 0
     d80:	80 81       	ld	r24, Z
     d82:	eb 81       	ldd	r30, Y+3	; 0x03
     d84:	fc 81       	ldd	r31, Y+4	; 0x04
     d86:	80 83       	st	Z, r24
     d88:	14 c0       	rjmp	.+40     	; 0xdb2 <DIO_enuGetPortVlaue+0x9a>
				break;

			case DIO_PORTB :
				*Copy_pu8PortVal = PINB;
     d8a:	e6 e3       	ldi	r30, 0x36	; 54
     d8c:	f0 e0       	ldi	r31, 0x00	; 0
     d8e:	80 81       	ld	r24, Z
     d90:	eb 81       	ldd	r30, Y+3	; 0x03
     d92:	fc 81       	ldd	r31, Y+4	; 0x04
     d94:	80 83       	st	Z, r24
     d96:	0d c0       	rjmp	.+26     	; 0xdb2 <DIO_enuGetPortVlaue+0x9a>
				break;

			case DIO_PORTC :
				*Copy_pu8PortVal = PINC;
     d98:	e3 e3       	ldi	r30, 0x33	; 51
     d9a:	f0 e0       	ldi	r31, 0x00	; 0
     d9c:	80 81       	ld	r24, Z
     d9e:	eb 81       	ldd	r30, Y+3	; 0x03
     da0:	fc 81       	ldd	r31, Y+4	; 0x04
     da2:	80 83       	st	Z, r24
     da4:	06 c0       	rjmp	.+12     	; 0xdb2 <DIO_enuGetPortVlaue+0x9a>
				break;

			case DIO_PORTD :
				*Copy_pu8PortVal = PIND ;
     da6:	e0 e3       	ldi	r30, 0x30	; 48
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	80 81       	ld	r24, Z
     dac:	eb 81       	ldd	r30, Y+3	; 0x03
     dae:	fc 81       	ldd	r31, Y+4	; 0x04
     db0:	80 83       	st	Z, r24
				break;
			}

			Local_enuerrorState = ES_OK;
     db2:	81 e0       	ldi	r24, 0x01	; 1
     db4:	89 83       	std	Y+1, r24	; 0x01
     db6:	05 c0       	rjmp	.+10     	; 0xdc2 <DIO_enuGetPortVlaue+0xaa>
		else
		{
			/**********************************************************
			 * Handle Out Of Range case.
			 **********************************************************/
			Local_enuerrorState = ES_OUT_OF_RANGE;
     db8:	83 e0       	ldi	r24, 0x03	; 3
     dba:	89 83       	std	Y+1, r24	; 0x01
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <DIO_enuGetPortVlaue+0xaa>
	else
	{
		/**********************************************************
		 * Handle null pointer case.
		 **********************************************************/
		Local_enuerrorState = ES_NULL_POINTER;
     dbe:	82 e0       	ldi	r24, 0x02	; 2
     dc0:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuerrorState  ;
     dc2:	89 81       	ldd	r24, Y+1	; 0x01

}//End of DIO_enuGetPortVlaue().
     dc4:	26 96       	adiw	r28, 0x06	; 6
     dc6:	0f b6       	in	r0, 0x3f	; 63
     dc8:	f8 94       	cli
     dca:	de bf       	out	0x3e, r29	; 62
     dcc:	0f be       	out	0x3f, r0	; 63
     dce:	cd bf       	out	0x3d, r28	; 61
     dd0:	cf 91       	pop	r28
     dd2:	df 91       	pop	r29
     dd4:	08 95       	ret

00000dd6 <DIO_enuSetPinDirection>:
/*                 : Arg.3: Copy_u8Dir.                                     */
/*                                       DIO_INPTU_PIN   ,   DIO_OUTPUT_PIN */
/* Return          : ERROR_STATE eum.                                       */
/****************************************************************************/
ES_t DIO_enuSetPinDirection(u8 Copy_u8PortID, u8 Copy_u8PinID , u8 Copy_u8Dir)
{
     dd6:	df 93       	push	r29
     dd8:	cf 93       	push	r28
     dda:	00 d0       	rcall	.+0      	; 0xddc <DIO_enuSetPinDirection+0x6>
     ddc:	00 d0       	rcall	.+0      	; 0xdde <DIO_enuSetPinDirection+0x8>
     dde:	00 d0       	rcall	.+0      	; 0xde0 <DIO_enuSetPinDirection+0xa>
     de0:	cd b7       	in	r28, 0x3d	; 61
     de2:	de b7       	in	r29, 0x3e	; 62
     de4:	8a 83       	std	Y+2, r24	; 0x02
     de6:	6b 83       	std	Y+3, r22	; 0x03
     de8:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuerrorState = ES_NOK ;
     dea:	19 82       	std	Y+1, r1	; 0x01

	if( (Copy_u8PortID <= DIO_PORTD) && (Copy_u8PinID <= DIO_PIN7) &&( Copy_u8Dir<= OUTPUT_PIN))
     dec:	8a 81       	ldd	r24, Y+2	; 0x02
     dee:	84 30       	cpi	r24, 0x04	; 4
     df0:	08 f0       	brcs	.+2      	; 0xdf4 <DIO_enuSetPinDirection+0x1e>
     df2:	dc c0       	rjmp	.+440    	; 0xfac <DIO_enuSetPinDirection+0x1d6>
     df4:	8b 81       	ldd	r24, Y+3	; 0x03
     df6:	88 30       	cpi	r24, 0x08	; 8
     df8:	08 f0       	brcs	.+2      	; 0xdfc <DIO_enuSetPinDirection+0x26>
     dfa:	d8 c0       	rjmp	.+432    	; 0xfac <DIO_enuSetPinDirection+0x1d6>
     dfc:	8c 81       	ldd	r24, Y+4	; 0x04
     dfe:	82 30       	cpi	r24, 0x02	; 2
     e00:	08 f0       	brcs	.+2      	; 0xe04 <DIO_enuSetPinDirection+0x2e>
     e02:	d4 c0       	rjmp	.+424    	; 0xfac <DIO_enuSetPinDirection+0x1d6>
	{

		/**********************************************************
		 * Switching for the suitable case .
		 **********************************************************/
		switch( Copy_u8PortID )
     e04:	8a 81       	ldd	r24, Y+2	; 0x02
     e06:	28 2f       	mov	r18, r24
     e08:	30 e0       	ldi	r19, 0x00	; 0
     e0a:	3e 83       	std	Y+6, r19	; 0x06
     e0c:	2d 83       	std	Y+5, r18	; 0x05
     e0e:	8d 81       	ldd	r24, Y+5	; 0x05
     e10:	9e 81       	ldd	r25, Y+6	; 0x06
     e12:	81 30       	cpi	r24, 0x01	; 1
     e14:	91 05       	cpc	r25, r1
     e16:	09 f4       	brne	.+2      	; 0xe1a <DIO_enuSetPinDirection+0x44>
     e18:	43 c0       	rjmp	.+134    	; 0xea0 <DIO_enuSetPinDirection+0xca>
     e1a:	2d 81       	ldd	r18, Y+5	; 0x05
     e1c:	3e 81       	ldd	r19, Y+6	; 0x06
     e1e:	22 30       	cpi	r18, 0x02	; 2
     e20:	31 05       	cpc	r19, r1
     e22:	2c f4       	brge	.+10     	; 0xe2e <DIO_enuSetPinDirection+0x58>
     e24:	8d 81       	ldd	r24, Y+5	; 0x05
     e26:	9e 81       	ldd	r25, Y+6	; 0x06
     e28:	00 97       	sbiw	r24, 0x00	; 0
     e2a:	71 f0       	breq	.+28     	; 0xe48 <DIO_enuSetPinDirection+0x72>
     e2c:	bc c0       	rjmp	.+376    	; 0xfa6 <DIO_enuSetPinDirection+0x1d0>
     e2e:	2d 81       	ldd	r18, Y+5	; 0x05
     e30:	3e 81       	ldd	r19, Y+6	; 0x06
     e32:	22 30       	cpi	r18, 0x02	; 2
     e34:	31 05       	cpc	r19, r1
     e36:	09 f4       	brne	.+2      	; 0xe3a <DIO_enuSetPinDirection+0x64>
     e38:	5f c0       	rjmp	.+190    	; 0xef8 <DIO_enuSetPinDirection+0x122>
     e3a:	8d 81       	ldd	r24, Y+5	; 0x05
     e3c:	9e 81       	ldd	r25, Y+6	; 0x06
     e3e:	83 30       	cpi	r24, 0x03	; 3
     e40:	91 05       	cpc	r25, r1
     e42:	09 f4       	brne	.+2      	; 0xe46 <DIO_enuSetPinDirection+0x70>
     e44:	85 c0       	rjmp	.+266    	; 0xf50 <DIO_enuSetPinDirection+0x17a>
     e46:	af c0       	rjmp	.+350    	; 0xfa6 <DIO_enuSetPinDirection+0x1d0>
		{
		case DIO_PORTA :
			if( Copy_u8Dir == INPTU_PIN)
     e48:	8c 81       	ldd	r24, Y+4	; 0x04
     e4a:	88 23       	and	r24, r24
     e4c:	a9 f4       	brne	.+42     	; 0xe78 <DIO_enuSetPinDirection+0xa2>
			{
				DDRA &=~(DIO_MASK_BIT<<Copy_u8PinID);
     e4e:	aa e3       	ldi	r26, 0x3A	; 58
     e50:	b0 e0       	ldi	r27, 0x00	; 0
     e52:	ea e3       	ldi	r30, 0x3A	; 58
     e54:	f0 e0       	ldi	r31, 0x00	; 0
     e56:	80 81       	ld	r24, Z
     e58:	48 2f       	mov	r20, r24
     e5a:	8b 81       	ldd	r24, Y+3	; 0x03
     e5c:	28 2f       	mov	r18, r24
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	81 e0       	ldi	r24, 0x01	; 1
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	02 2e       	mov	r0, r18
     e66:	02 c0       	rjmp	.+4      	; 0xe6c <DIO_enuSetPinDirection+0x96>
     e68:	88 0f       	add	r24, r24
     e6a:	99 1f       	adc	r25, r25
     e6c:	0a 94       	dec	r0
     e6e:	e2 f7       	brpl	.-8      	; 0xe68 <DIO_enuSetPinDirection+0x92>
     e70:	80 95       	com	r24
     e72:	84 23       	and	r24, r20
     e74:	8c 93       	st	X, r24
     e76:	97 c0       	rjmp	.+302    	; 0xfa6 <DIO_enuSetPinDirection+0x1d0>
			}
			else
			{
				DDRA |=(DIO_MASK_BIT<<Copy_u8PinID);
     e78:	aa e3       	ldi	r26, 0x3A	; 58
     e7a:	b0 e0       	ldi	r27, 0x00	; 0
     e7c:	ea e3       	ldi	r30, 0x3A	; 58
     e7e:	f0 e0       	ldi	r31, 0x00	; 0
     e80:	80 81       	ld	r24, Z
     e82:	48 2f       	mov	r20, r24
     e84:	8b 81       	ldd	r24, Y+3	; 0x03
     e86:	28 2f       	mov	r18, r24
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	81 e0       	ldi	r24, 0x01	; 1
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	02 2e       	mov	r0, r18
     e90:	02 c0       	rjmp	.+4      	; 0xe96 <DIO_enuSetPinDirection+0xc0>
     e92:	88 0f       	add	r24, r24
     e94:	99 1f       	adc	r25, r25
     e96:	0a 94       	dec	r0
     e98:	e2 f7       	brpl	.-8      	; 0xe92 <DIO_enuSetPinDirection+0xbc>
     e9a:	84 2b       	or	r24, r20
     e9c:	8c 93       	st	X, r24
     e9e:	83 c0       	rjmp	.+262    	; 0xfa6 <DIO_enuSetPinDirection+0x1d0>
			}

			break;

		case DIO_PORTB :
			if( Copy_u8Dir == INPTU_PIN)
     ea0:	8c 81       	ldd	r24, Y+4	; 0x04
     ea2:	88 23       	and	r24, r24
     ea4:	a9 f4       	brne	.+42     	; 0xed0 <DIO_enuSetPinDirection+0xfa>
			{
				DDRB &=~(DIO_MASK_BIT<<Copy_u8PinID);
     ea6:	a7 e3       	ldi	r26, 0x37	; 55
     ea8:	b0 e0       	ldi	r27, 0x00	; 0
     eaa:	e7 e3       	ldi	r30, 0x37	; 55
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	80 81       	ld	r24, Z
     eb0:	48 2f       	mov	r20, r24
     eb2:	8b 81       	ldd	r24, Y+3	; 0x03
     eb4:	28 2f       	mov	r18, r24
     eb6:	30 e0       	ldi	r19, 0x00	; 0
     eb8:	81 e0       	ldi	r24, 0x01	; 1
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	02 2e       	mov	r0, r18
     ebe:	02 c0       	rjmp	.+4      	; 0xec4 <DIO_enuSetPinDirection+0xee>
     ec0:	88 0f       	add	r24, r24
     ec2:	99 1f       	adc	r25, r25
     ec4:	0a 94       	dec	r0
     ec6:	e2 f7       	brpl	.-8      	; 0xec0 <DIO_enuSetPinDirection+0xea>
     ec8:	80 95       	com	r24
     eca:	84 23       	and	r24, r20
     ecc:	8c 93       	st	X, r24
     ece:	6b c0       	rjmp	.+214    	; 0xfa6 <DIO_enuSetPinDirection+0x1d0>
			}
			else
			{
				DDRB |=(DIO_MASK_BIT<<Copy_u8PinID);
     ed0:	a7 e3       	ldi	r26, 0x37	; 55
     ed2:	b0 e0       	ldi	r27, 0x00	; 0
     ed4:	e7 e3       	ldi	r30, 0x37	; 55
     ed6:	f0 e0       	ldi	r31, 0x00	; 0
     ed8:	80 81       	ld	r24, Z
     eda:	48 2f       	mov	r20, r24
     edc:	8b 81       	ldd	r24, Y+3	; 0x03
     ede:	28 2f       	mov	r18, r24
     ee0:	30 e0       	ldi	r19, 0x00	; 0
     ee2:	81 e0       	ldi	r24, 0x01	; 1
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	02 2e       	mov	r0, r18
     ee8:	02 c0       	rjmp	.+4      	; 0xeee <DIO_enuSetPinDirection+0x118>
     eea:	88 0f       	add	r24, r24
     eec:	99 1f       	adc	r25, r25
     eee:	0a 94       	dec	r0
     ef0:	e2 f7       	brpl	.-8      	; 0xeea <DIO_enuSetPinDirection+0x114>
     ef2:	84 2b       	or	r24, r20
     ef4:	8c 93       	st	X, r24
     ef6:	57 c0       	rjmp	.+174    	; 0xfa6 <DIO_enuSetPinDirection+0x1d0>
			}
			break;

		case DIO_PORTC :

			if( Copy_u8Dir == INPTU_PIN)
     ef8:	8c 81       	ldd	r24, Y+4	; 0x04
     efa:	88 23       	and	r24, r24
     efc:	a9 f4       	brne	.+42     	; 0xf28 <DIO_enuSetPinDirection+0x152>
			{
				DDRC &=~(DIO_MASK_BIT<<Copy_u8PinID);
     efe:	a4 e3       	ldi	r26, 0x34	; 52
     f00:	b0 e0       	ldi	r27, 0x00	; 0
     f02:	e4 e3       	ldi	r30, 0x34	; 52
     f04:	f0 e0       	ldi	r31, 0x00	; 0
     f06:	80 81       	ld	r24, Z
     f08:	48 2f       	mov	r20, r24
     f0a:	8b 81       	ldd	r24, Y+3	; 0x03
     f0c:	28 2f       	mov	r18, r24
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	81 e0       	ldi	r24, 0x01	; 1
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	02 2e       	mov	r0, r18
     f16:	02 c0       	rjmp	.+4      	; 0xf1c <DIO_enuSetPinDirection+0x146>
     f18:	88 0f       	add	r24, r24
     f1a:	99 1f       	adc	r25, r25
     f1c:	0a 94       	dec	r0
     f1e:	e2 f7       	brpl	.-8      	; 0xf18 <DIO_enuSetPinDirection+0x142>
     f20:	80 95       	com	r24
     f22:	84 23       	and	r24, r20
     f24:	8c 93       	st	X, r24
     f26:	3f c0       	rjmp	.+126    	; 0xfa6 <DIO_enuSetPinDirection+0x1d0>
			}
			else
			{
				DDRC |=(DIO_MASK_BIT<<Copy_u8PinID);
     f28:	a4 e3       	ldi	r26, 0x34	; 52
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	e4 e3       	ldi	r30, 0x34	; 52
     f2e:	f0 e0       	ldi	r31, 0x00	; 0
     f30:	80 81       	ld	r24, Z
     f32:	48 2f       	mov	r20, r24
     f34:	8b 81       	ldd	r24, Y+3	; 0x03
     f36:	28 2f       	mov	r18, r24
     f38:	30 e0       	ldi	r19, 0x00	; 0
     f3a:	81 e0       	ldi	r24, 0x01	; 1
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	02 2e       	mov	r0, r18
     f40:	02 c0       	rjmp	.+4      	; 0xf46 <DIO_enuSetPinDirection+0x170>
     f42:	88 0f       	add	r24, r24
     f44:	99 1f       	adc	r25, r25
     f46:	0a 94       	dec	r0
     f48:	e2 f7       	brpl	.-8      	; 0xf42 <DIO_enuSetPinDirection+0x16c>
     f4a:	84 2b       	or	r24, r20
     f4c:	8c 93       	st	X, r24
     f4e:	2b c0       	rjmp	.+86     	; 0xfa6 <DIO_enuSetPinDirection+0x1d0>
			}
			break;

		case DIO_PORTD :
			if( Copy_u8Dir == INPTU_PIN)
     f50:	8c 81       	ldd	r24, Y+4	; 0x04
     f52:	88 23       	and	r24, r24
     f54:	a9 f4       	brne	.+42     	; 0xf80 <DIO_enuSetPinDirection+0x1aa>
			{
				DDRD &=~(DIO_MASK_BIT<<Copy_u8PinID);
     f56:	a1 e3       	ldi	r26, 0x31	; 49
     f58:	b0 e0       	ldi	r27, 0x00	; 0
     f5a:	e1 e3       	ldi	r30, 0x31	; 49
     f5c:	f0 e0       	ldi	r31, 0x00	; 0
     f5e:	80 81       	ld	r24, Z
     f60:	48 2f       	mov	r20, r24
     f62:	8b 81       	ldd	r24, Y+3	; 0x03
     f64:	28 2f       	mov	r18, r24
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	02 2e       	mov	r0, r18
     f6e:	02 c0       	rjmp	.+4      	; 0xf74 <DIO_enuSetPinDirection+0x19e>
     f70:	88 0f       	add	r24, r24
     f72:	99 1f       	adc	r25, r25
     f74:	0a 94       	dec	r0
     f76:	e2 f7       	brpl	.-8      	; 0xf70 <DIO_enuSetPinDirection+0x19a>
     f78:	80 95       	com	r24
     f7a:	84 23       	and	r24, r20
     f7c:	8c 93       	st	X, r24
     f7e:	13 c0       	rjmp	.+38     	; 0xfa6 <DIO_enuSetPinDirection+0x1d0>
			}
			else
			{
				DDRD |=(DIO_MASK_BIT<<Copy_u8PinID);
     f80:	a1 e3       	ldi	r26, 0x31	; 49
     f82:	b0 e0       	ldi	r27, 0x00	; 0
     f84:	e1 e3       	ldi	r30, 0x31	; 49
     f86:	f0 e0       	ldi	r31, 0x00	; 0
     f88:	80 81       	ld	r24, Z
     f8a:	48 2f       	mov	r20, r24
     f8c:	8b 81       	ldd	r24, Y+3	; 0x03
     f8e:	28 2f       	mov	r18, r24
     f90:	30 e0       	ldi	r19, 0x00	; 0
     f92:	81 e0       	ldi	r24, 0x01	; 1
     f94:	90 e0       	ldi	r25, 0x00	; 0
     f96:	02 2e       	mov	r0, r18
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <DIO_enuSetPinDirection+0x1c8>
     f9a:	88 0f       	add	r24, r24
     f9c:	99 1f       	adc	r25, r25
     f9e:	0a 94       	dec	r0
     fa0:	e2 f7       	brpl	.-8      	; 0xf9a <DIO_enuSetPinDirection+0x1c4>
     fa2:	84 2b       	or	r24, r20
     fa4:	8c 93       	st	X, r24
			}
			break;

		}
		Local_enuerrorState = ES_OK;
     fa6:	81 e0       	ldi	r24, 0x01	; 1
     fa8:	89 83       	std	Y+1, r24	; 0x01
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <DIO_enuSetPinDirection+0x1da>
	}
	else
	{
		Local_enuerrorState = ES_OUT_OF_RANGE;
     fac:	83 e0       	ldi	r24, 0x03	; 3
     fae:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuerrorState  ;
     fb0:	89 81       	ldd	r24, Y+1	; 0x01

}//End of DIO_enuSetPinDirection().
     fb2:	26 96       	adiw	r28, 0x06	; 6
     fb4:	0f b6       	in	r0, 0x3f	; 63
     fb6:	f8 94       	cli
     fb8:	de bf       	out	0x3e, r29	; 62
     fba:	0f be       	out	0x3f, r0	; 63
     fbc:	cd bf       	out	0x3d, r28	; 61
     fbe:	cf 91       	pop	r28
     fc0:	df 91       	pop	r29
     fc2:	08 95       	ret

00000fc4 <DIO_enuSetPinValue>:
/*                 : Arg.3: Copy_u8Val.                                     */
/*                                        DIO_LOW        ,   DIO_HIGH       */
/* Return          : ERROR_STATE eum.                                       */
/****************************************************************************/
ES_t DIO_enuSetPinValue(u8 Copy_u8PortID, u8 Copy_u8PinID ,u8 Copy_u8Val)
{
     fc4:	df 93       	push	r29
     fc6:	cf 93       	push	r28
     fc8:	00 d0       	rcall	.+0      	; 0xfca <DIO_enuSetPinValue+0x6>
     fca:	00 d0       	rcall	.+0      	; 0xfcc <DIO_enuSetPinValue+0x8>
     fcc:	00 d0       	rcall	.+0      	; 0xfce <DIO_enuSetPinValue+0xa>
     fce:	cd b7       	in	r28, 0x3d	; 61
     fd0:	de b7       	in	r29, 0x3e	; 62
     fd2:	8a 83       	std	Y+2, r24	; 0x02
     fd4:	6b 83       	std	Y+3, r22	; 0x03
     fd6:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuerrorState = ES_NOK ;
     fd8:	19 82       	std	Y+1, r1	; 0x01

	if( (Copy_u8PortID <= DIO_PORTD) && (Copy_u8PinID <= DIO_PIN7) &&( Copy_u8Val<=DIO_HIGH))
     fda:	8a 81       	ldd	r24, Y+2	; 0x02
     fdc:	84 30       	cpi	r24, 0x04	; 4
     fde:	08 f0       	brcs	.+2      	; 0xfe2 <DIO_enuSetPinValue+0x1e>
     fe0:	dc c0       	rjmp	.+440    	; 0x119a <DIO_enuSetPinValue+0x1d6>
     fe2:	8b 81       	ldd	r24, Y+3	; 0x03
     fe4:	88 30       	cpi	r24, 0x08	; 8
     fe6:	08 f0       	brcs	.+2      	; 0xfea <DIO_enuSetPinValue+0x26>
     fe8:	d8 c0       	rjmp	.+432    	; 0x119a <DIO_enuSetPinValue+0x1d6>
     fea:	8c 81       	ldd	r24, Y+4	; 0x04
     fec:	82 30       	cpi	r24, 0x02	; 2
     fee:	08 f0       	brcs	.+2      	; 0xff2 <DIO_enuSetPinValue+0x2e>
     ff0:	d4 c0       	rjmp	.+424    	; 0x119a <DIO_enuSetPinValue+0x1d6>
	{

		/**********************************************************
		 * Switching for the suitable case .
		 **********************************************************/
		switch( Copy_u8PortID )
     ff2:	8a 81       	ldd	r24, Y+2	; 0x02
     ff4:	28 2f       	mov	r18, r24
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	3e 83       	std	Y+6, r19	; 0x06
     ffa:	2d 83       	std	Y+5, r18	; 0x05
     ffc:	8d 81       	ldd	r24, Y+5	; 0x05
     ffe:	9e 81       	ldd	r25, Y+6	; 0x06
    1000:	81 30       	cpi	r24, 0x01	; 1
    1002:	91 05       	cpc	r25, r1
    1004:	09 f4       	brne	.+2      	; 0x1008 <DIO_enuSetPinValue+0x44>
    1006:	43 c0       	rjmp	.+134    	; 0x108e <DIO_enuSetPinValue+0xca>
    1008:	2d 81       	ldd	r18, Y+5	; 0x05
    100a:	3e 81       	ldd	r19, Y+6	; 0x06
    100c:	22 30       	cpi	r18, 0x02	; 2
    100e:	31 05       	cpc	r19, r1
    1010:	2c f4       	brge	.+10     	; 0x101c <DIO_enuSetPinValue+0x58>
    1012:	8d 81       	ldd	r24, Y+5	; 0x05
    1014:	9e 81       	ldd	r25, Y+6	; 0x06
    1016:	00 97       	sbiw	r24, 0x00	; 0
    1018:	71 f0       	breq	.+28     	; 0x1036 <DIO_enuSetPinValue+0x72>
    101a:	bc c0       	rjmp	.+376    	; 0x1194 <DIO_enuSetPinValue+0x1d0>
    101c:	2d 81       	ldd	r18, Y+5	; 0x05
    101e:	3e 81       	ldd	r19, Y+6	; 0x06
    1020:	22 30       	cpi	r18, 0x02	; 2
    1022:	31 05       	cpc	r19, r1
    1024:	09 f4       	brne	.+2      	; 0x1028 <DIO_enuSetPinValue+0x64>
    1026:	5f c0       	rjmp	.+190    	; 0x10e6 <DIO_enuSetPinValue+0x122>
    1028:	8d 81       	ldd	r24, Y+5	; 0x05
    102a:	9e 81       	ldd	r25, Y+6	; 0x06
    102c:	83 30       	cpi	r24, 0x03	; 3
    102e:	91 05       	cpc	r25, r1
    1030:	09 f4       	brne	.+2      	; 0x1034 <DIO_enuSetPinValue+0x70>
    1032:	85 c0       	rjmp	.+266    	; 0x113e <DIO_enuSetPinValue+0x17a>
    1034:	af c0       	rjmp	.+350    	; 0x1194 <DIO_enuSetPinValue+0x1d0>
		{
		case DIO_PORTA :
			if( Copy_u8Val == DIO_LOW)
    1036:	8c 81       	ldd	r24, Y+4	; 0x04
    1038:	88 23       	and	r24, r24
    103a:	a9 f4       	brne	.+42     	; 0x1066 <DIO_enuSetPinValue+0xa2>
			{
				PORTA &=~(DIO_MASK_BIT<<Copy_u8PinID);
    103c:	ab e3       	ldi	r26, 0x3B	; 59
    103e:	b0 e0       	ldi	r27, 0x00	; 0
    1040:	eb e3       	ldi	r30, 0x3B	; 59
    1042:	f0 e0       	ldi	r31, 0x00	; 0
    1044:	80 81       	ld	r24, Z
    1046:	48 2f       	mov	r20, r24
    1048:	8b 81       	ldd	r24, Y+3	; 0x03
    104a:	28 2f       	mov	r18, r24
    104c:	30 e0       	ldi	r19, 0x00	; 0
    104e:	81 e0       	ldi	r24, 0x01	; 1
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	02 2e       	mov	r0, r18
    1054:	02 c0       	rjmp	.+4      	; 0x105a <DIO_enuSetPinValue+0x96>
    1056:	88 0f       	add	r24, r24
    1058:	99 1f       	adc	r25, r25
    105a:	0a 94       	dec	r0
    105c:	e2 f7       	brpl	.-8      	; 0x1056 <DIO_enuSetPinValue+0x92>
    105e:	80 95       	com	r24
    1060:	84 23       	and	r24, r20
    1062:	8c 93       	st	X, r24
    1064:	97 c0       	rjmp	.+302    	; 0x1194 <DIO_enuSetPinValue+0x1d0>
			}
			else
			{
				PORTA |=(DIO_MASK_BIT<<Copy_u8PinID);
    1066:	ab e3       	ldi	r26, 0x3B	; 59
    1068:	b0 e0       	ldi	r27, 0x00	; 0
    106a:	eb e3       	ldi	r30, 0x3B	; 59
    106c:	f0 e0       	ldi	r31, 0x00	; 0
    106e:	80 81       	ld	r24, Z
    1070:	48 2f       	mov	r20, r24
    1072:	8b 81       	ldd	r24, Y+3	; 0x03
    1074:	28 2f       	mov	r18, r24
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	02 2e       	mov	r0, r18
    107e:	02 c0       	rjmp	.+4      	; 0x1084 <DIO_enuSetPinValue+0xc0>
    1080:	88 0f       	add	r24, r24
    1082:	99 1f       	adc	r25, r25
    1084:	0a 94       	dec	r0
    1086:	e2 f7       	brpl	.-8      	; 0x1080 <DIO_enuSetPinValue+0xbc>
    1088:	84 2b       	or	r24, r20
    108a:	8c 93       	st	X, r24
    108c:	83 c0       	rjmp	.+262    	; 0x1194 <DIO_enuSetPinValue+0x1d0>
			}

			break;

		case DIO_PORTB :
			if( Copy_u8Val == DIO_LOW)
    108e:	8c 81       	ldd	r24, Y+4	; 0x04
    1090:	88 23       	and	r24, r24
    1092:	a9 f4       	brne	.+42     	; 0x10be <DIO_enuSetPinValue+0xfa>
			{
				PORTB &=~(DIO_MASK_BIT<<Copy_u8PinID);
    1094:	a8 e3       	ldi	r26, 0x38	; 56
    1096:	b0 e0       	ldi	r27, 0x00	; 0
    1098:	e8 e3       	ldi	r30, 0x38	; 56
    109a:	f0 e0       	ldi	r31, 0x00	; 0
    109c:	80 81       	ld	r24, Z
    109e:	48 2f       	mov	r20, r24
    10a0:	8b 81       	ldd	r24, Y+3	; 0x03
    10a2:	28 2f       	mov	r18, r24
    10a4:	30 e0       	ldi	r19, 0x00	; 0
    10a6:	81 e0       	ldi	r24, 0x01	; 1
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	02 2e       	mov	r0, r18
    10ac:	02 c0       	rjmp	.+4      	; 0x10b2 <DIO_enuSetPinValue+0xee>
    10ae:	88 0f       	add	r24, r24
    10b0:	99 1f       	adc	r25, r25
    10b2:	0a 94       	dec	r0
    10b4:	e2 f7       	brpl	.-8      	; 0x10ae <DIO_enuSetPinValue+0xea>
    10b6:	80 95       	com	r24
    10b8:	84 23       	and	r24, r20
    10ba:	8c 93       	st	X, r24
    10bc:	6b c0       	rjmp	.+214    	; 0x1194 <DIO_enuSetPinValue+0x1d0>
			}
			else
			{
				PORTB |=(DIO_MASK_BIT<<Copy_u8PinID);
    10be:	a8 e3       	ldi	r26, 0x38	; 56
    10c0:	b0 e0       	ldi	r27, 0x00	; 0
    10c2:	e8 e3       	ldi	r30, 0x38	; 56
    10c4:	f0 e0       	ldi	r31, 0x00	; 0
    10c6:	80 81       	ld	r24, Z
    10c8:	48 2f       	mov	r20, r24
    10ca:	8b 81       	ldd	r24, Y+3	; 0x03
    10cc:	28 2f       	mov	r18, r24
    10ce:	30 e0       	ldi	r19, 0x00	; 0
    10d0:	81 e0       	ldi	r24, 0x01	; 1
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	02 2e       	mov	r0, r18
    10d6:	02 c0       	rjmp	.+4      	; 0x10dc <DIO_enuSetPinValue+0x118>
    10d8:	88 0f       	add	r24, r24
    10da:	99 1f       	adc	r25, r25
    10dc:	0a 94       	dec	r0
    10de:	e2 f7       	brpl	.-8      	; 0x10d8 <DIO_enuSetPinValue+0x114>
    10e0:	84 2b       	or	r24, r20
    10e2:	8c 93       	st	X, r24
    10e4:	57 c0       	rjmp	.+174    	; 0x1194 <DIO_enuSetPinValue+0x1d0>

			break;

		case DIO_PORTC :

			if( Copy_u8Val == DIO_LOW)
    10e6:	8c 81       	ldd	r24, Y+4	; 0x04
    10e8:	88 23       	and	r24, r24
    10ea:	a9 f4       	brne	.+42     	; 0x1116 <DIO_enuSetPinValue+0x152>
			{
				PORTC &=~(DIO_MASK_BIT<<Copy_u8PinID);
    10ec:	a5 e3       	ldi	r26, 0x35	; 53
    10ee:	b0 e0       	ldi	r27, 0x00	; 0
    10f0:	e5 e3       	ldi	r30, 0x35	; 53
    10f2:	f0 e0       	ldi	r31, 0x00	; 0
    10f4:	80 81       	ld	r24, Z
    10f6:	48 2f       	mov	r20, r24
    10f8:	8b 81       	ldd	r24, Y+3	; 0x03
    10fa:	28 2f       	mov	r18, r24
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	81 e0       	ldi	r24, 0x01	; 1
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	02 2e       	mov	r0, r18
    1104:	02 c0       	rjmp	.+4      	; 0x110a <DIO_enuSetPinValue+0x146>
    1106:	88 0f       	add	r24, r24
    1108:	99 1f       	adc	r25, r25
    110a:	0a 94       	dec	r0
    110c:	e2 f7       	brpl	.-8      	; 0x1106 <DIO_enuSetPinValue+0x142>
    110e:	80 95       	com	r24
    1110:	84 23       	and	r24, r20
    1112:	8c 93       	st	X, r24
    1114:	3f c0       	rjmp	.+126    	; 0x1194 <DIO_enuSetPinValue+0x1d0>
			}
			else
			{
				PORTC |=(DIO_MASK_BIT<<Copy_u8PinID);
    1116:	a5 e3       	ldi	r26, 0x35	; 53
    1118:	b0 e0       	ldi	r27, 0x00	; 0
    111a:	e5 e3       	ldi	r30, 0x35	; 53
    111c:	f0 e0       	ldi	r31, 0x00	; 0
    111e:	80 81       	ld	r24, Z
    1120:	48 2f       	mov	r20, r24
    1122:	8b 81       	ldd	r24, Y+3	; 0x03
    1124:	28 2f       	mov	r18, r24
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	81 e0       	ldi	r24, 0x01	; 1
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	02 2e       	mov	r0, r18
    112e:	02 c0       	rjmp	.+4      	; 0x1134 <DIO_enuSetPinValue+0x170>
    1130:	88 0f       	add	r24, r24
    1132:	99 1f       	adc	r25, r25
    1134:	0a 94       	dec	r0
    1136:	e2 f7       	brpl	.-8      	; 0x1130 <DIO_enuSetPinValue+0x16c>
    1138:	84 2b       	or	r24, r20
    113a:	8c 93       	st	X, r24
    113c:	2b c0       	rjmp	.+86     	; 0x1194 <DIO_enuSetPinValue+0x1d0>
			}

			break;

		case DIO_PORTD :
			if( Copy_u8Val == DIO_LOW)
    113e:	8c 81       	ldd	r24, Y+4	; 0x04
    1140:	88 23       	and	r24, r24
    1142:	a9 f4       	brne	.+42     	; 0x116e <DIO_enuSetPinValue+0x1aa>
			{
				PORTD &=~(DIO_MASK_BIT<<Copy_u8PinID);
    1144:	a2 e3       	ldi	r26, 0x32	; 50
    1146:	b0 e0       	ldi	r27, 0x00	; 0
    1148:	e2 e3       	ldi	r30, 0x32	; 50
    114a:	f0 e0       	ldi	r31, 0x00	; 0
    114c:	80 81       	ld	r24, Z
    114e:	48 2f       	mov	r20, r24
    1150:	8b 81       	ldd	r24, Y+3	; 0x03
    1152:	28 2f       	mov	r18, r24
    1154:	30 e0       	ldi	r19, 0x00	; 0
    1156:	81 e0       	ldi	r24, 0x01	; 1
    1158:	90 e0       	ldi	r25, 0x00	; 0
    115a:	02 2e       	mov	r0, r18
    115c:	02 c0       	rjmp	.+4      	; 0x1162 <DIO_enuSetPinValue+0x19e>
    115e:	88 0f       	add	r24, r24
    1160:	99 1f       	adc	r25, r25
    1162:	0a 94       	dec	r0
    1164:	e2 f7       	brpl	.-8      	; 0x115e <DIO_enuSetPinValue+0x19a>
    1166:	80 95       	com	r24
    1168:	84 23       	and	r24, r20
    116a:	8c 93       	st	X, r24
    116c:	13 c0       	rjmp	.+38     	; 0x1194 <DIO_enuSetPinValue+0x1d0>
			}
			else
			{
				PORTD |=(DIO_MASK_BIT<<Copy_u8PinID);
    116e:	a2 e3       	ldi	r26, 0x32	; 50
    1170:	b0 e0       	ldi	r27, 0x00	; 0
    1172:	e2 e3       	ldi	r30, 0x32	; 50
    1174:	f0 e0       	ldi	r31, 0x00	; 0
    1176:	80 81       	ld	r24, Z
    1178:	48 2f       	mov	r20, r24
    117a:	8b 81       	ldd	r24, Y+3	; 0x03
    117c:	28 2f       	mov	r18, r24
    117e:	30 e0       	ldi	r19, 0x00	; 0
    1180:	81 e0       	ldi	r24, 0x01	; 1
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	02 2e       	mov	r0, r18
    1186:	02 c0       	rjmp	.+4      	; 0x118c <DIO_enuSetPinValue+0x1c8>
    1188:	88 0f       	add	r24, r24
    118a:	99 1f       	adc	r25, r25
    118c:	0a 94       	dec	r0
    118e:	e2 f7       	brpl	.-8      	; 0x1188 <DIO_enuSetPinValue+0x1c4>
    1190:	84 2b       	or	r24, r20
    1192:	8c 93       	st	X, r24
			}

			break;

		}
		Local_enuerrorState = ES_OK;
    1194:	81 e0       	ldi	r24, 0x01	; 1
    1196:	89 83       	std	Y+1, r24	; 0x01
    1198:	02 c0       	rjmp	.+4      	; 0x119e <DIO_enuSetPinValue+0x1da>
	}
	else
	{
		Local_enuerrorState = ES_OUT_OF_RANGE;
    119a:	83 e0       	ldi	r24, 0x03	; 3
    119c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuerrorState  ;
    119e:	89 81       	ldd	r24, Y+1	; 0x01
}//End of DIO_enuSetPinValue().
    11a0:	26 96       	adiw	r28, 0x06	; 6
    11a2:	0f b6       	in	r0, 0x3f	; 63
    11a4:	f8 94       	cli
    11a6:	de bf       	out	0x3e, r29	; 62
    11a8:	0f be       	out	0x3f, r0	; 63
    11aa:	cd bf       	out	0x3d, r28	; 61
    11ac:	cf 91       	pop	r28
    11ae:	df 91       	pop	r29
    11b0:	08 95       	ret

000011b2 <DIO_enuToggelPin>:
/*                                        DIO_PIN2       ,   DIO_PIN6       */
/*                                        DIO_PIN3       ,   DIO_PIN7       */
/* Return          : ERROR_STATE eum.                                       */
/****************************************************************************/
ES_t DIO_enuToggelPin(u8  Copy_u8PortID, u8 Copy_u8PinID  )
{
    11b2:	df 93       	push	r29
    11b4:	cf 93       	push	r28
    11b6:	00 d0       	rcall	.+0      	; 0x11b8 <DIO_enuToggelPin+0x6>
    11b8:	00 d0       	rcall	.+0      	; 0x11ba <DIO_enuToggelPin+0x8>
    11ba:	0f 92       	push	r0
    11bc:	cd b7       	in	r28, 0x3d	; 61
    11be:	de b7       	in	r29, 0x3e	; 62
    11c0:	8a 83       	std	Y+2, r24	; 0x02
    11c2:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuerrorState = ES_NOK ;
    11c4:	19 82       	std	Y+1, r1	; 0x01

	if( (Copy_u8PortID <= DIO_PORTD) &&  (Copy_u8PinID <= DIO_PIN7) )
    11c6:	8a 81       	ldd	r24, Y+2	; 0x02
    11c8:	84 30       	cpi	r24, 0x04	; 4
    11ca:	08 f0       	brcs	.+2      	; 0x11ce <DIO_enuToggelPin+0x1c>
    11cc:	75 c0       	rjmp	.+234    	; 0x12b8 <DIO_enuToggelPin+0x106>
    11ce:	8b 81       	ldd	r24, Y+3	; 0x03
    11d0:	88 30       	cpi	r24, 0x08	; 8
    11d2:	08 f0       	brcs	.+2      	; 0x11d6 <DIO_enuToggelPin+0x24>
    11d4:	71 c0       	rjmp	.+226    	; 0x12b8 <DIO_enuToggelPin+0x106>
	{
		/**********************************************************
		 * Switching for the suitable case .
		 **********************************************************/
		switch( Copy_u8PortID )
    11d6:	8a 81       	ldd	r24, Y+2	; 0x02
    11d8:	28 2f       	mov	r18, r24
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	3d 83       	std	Y+5, r19	; 0x05
    11de:	2c 83       	std	Y+4, r18	; 0x04
    11e0:	8c 81       	ldd	r24, Y+4	; 0x04
    11e2:	9d 81       	ldd	r25, Y+5	; 0x05
    11e4:	81 30       	cpi	r24, 0x01	; 1
    11e6:	91 05       	cpc	r25, r1
    11e8:	49 f1       	breq	.+82     	; 0x123c <DIO_enuToggelPin+0x8a>
    11ea:	2c 81       	ldd	r18, Y+4	; 0x04
    11ec:	3d 81       	ldd	r19, Y+5	; 0x05
    11ee:	22 30       	cpi	r18, 0x02	; 2
    11f0:	31 05       	cpc	r19, r1
    11f2:	2c f4       	brge	.+10     	; 0x11fe <DIO_enuToggelPin+0x4c>
    11f4:	8c 81       	ldd	r24, Y+4	; 0x04
    11f6:	9d 81       	ldd	r25, Y+5	; 0x05
    11f8:	00 97       	sbiw	r24, 0x00	; 0
    11fa:	61 f0       	breq	.+24     	; 0x1214 <DIO_enuToggelPin+0x62>
    11fc:	5a c0       	rjmp	.+180    	; 0x12b2 <DIO_enuToggelPin+0x100>
    11fe:	2c 81       	ldd	r18, Y+4	; 0x04
    1200:	3d 81       	ldd	r19, Y+5	; 0x05
    1202:	22 30       	cpi	r18, 0x02	; 2
    1204:	31 05       	cpc	r19, r1
    1206:	71 f1       	breq	.+92     	; 0x1264 <DIO_enuToggelPin+0xb2>
    1208:	8c 81       	ldd	r24, Y+4	; 0x04
    120a:	9d 81       	ldd	r25, Y+5	; 0x05
    120c:	83 30       	cpi	r24, 0x03	; 3
    120e:	91 05       	cpc	r25, r1
    1210:	e9 f1       	breq	.+122    	; 0x128c <DIO_enuToggelPin+0xda>
    1212:	4f c0       	rjmp	.+158    	; 0x12b2 <DIO_enuToggelPin+0x100>
		{
		case DIO_PORTA :
			PORTA ^=(DIO_MASK_BIT<<Copy_u8PinID);
    1214:	ab e3       	ldi	r26, 0x3B	; 59
    1216:	b0 e0       	ldi	r27, 0x00	; 0
    1218:	eb e3       	ldi	r30, 0x3B	; 59
    121a:	f0 e0       	ldi	r31, 0x00	; 0
    121c:	80 81       	ld	r24, Z
    121e:	48 2f       	mov	r20, r24
    1220:	8b 81       	ldd	r24, Y+3	; 0x03
    1222:	28 2f       	mov	r18, r24
    1224:	30 e0       	ldi	r19, 0x00	; 0
    1226:	81 e0       	ldi	r24, 0x01	; 1
    1228:	90 e0       	ldi	r25, 0x00	; 0
    122a:	02 2e       	mov	r0, r18
    122c:	02 c0       	rjmp	.+4      	; 0x1232 <DIO_enuToggelPin+0x80>
    122e:	88 0f       	add	r24, r24
    1230:	99 1f       	adc	r25, r25
    1232:	0a 94       	dec	r0
    1234:	e2 f7       	brpl	.-8      	; 0x122e <DIO_enuToggelPin+0x7c>
    1236:	84 27       	eor	r24, r20
    1238:	8c 93       	st	X, r24
    123a:	3b c0       	rjmp	.+118    	; 0x12b2 <DIO_enuToggelPin+0x100>
			break;

		case DIO_PORTB :
			PORTB ^=(DIO_MASK_BIT<<Copy_u8PinID);
    123c:	a8 e3       	ldi	r26, 0x38	; 56
    123e:	b0 e0       	ldi	r27, 0x00	; 0
    1240:	e8 e3       	ldi	r30, 0x38	; 56
    1242:	f0 e0       	ldi	r31, 0x00	; 0
    1244:	80 81       	ld	r24, Z
    1246:	48 2f       	mov	r20, r24
    1248:	8b 81       	ldd	r24, Y+3	; 0x03
    124a:	28 2f       	mov	r18, r24
    124c:	30 e0       	ldi	r19, 0x00	; 0
    124e:	81 e0       	ldi	r24, 0x01	; 1
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	02 2e       	mov	r0, r18
    1254:	02 c0       	rjmp	.+4      	; 0x125a <DIO_enuToggelPin+0xa8>
    1256:	88 0f       	add	r24, r24
    1258:	99 1f       	adc	r25, r25
    125a:	0a 94       	dec	r0
    125c:	e2 f7       	brpl	.-8      	; 0x1256 <DIO_enuToggelPin+0xa4>
    125e:	84 27       	eor	r24, r20
    1260:	8c 93       	st	X, r24
    1262:	27 c0       	rjmp	.+78     	; 0x12b2 <DIO_enuToggelPin+0x100>
			break;

		case DIO_PORTC :
			PORTC ^=(DIO_MASK_BIT<<Copy_u8PinID);
    1264:	a5 e3       	ldi	r26, 0x35	; 53
    1266:	b0 e0       	ldi	r27, 0x00	; 0
    1268:	e5 e3       	ldi	r30, 0x35	; 53
    126a:	f0 e0       	ldi	r31, 0x00	; 0
    126c:	80 81       	ld	r24, Z
    126e:	48 2f       	mov	r20, r24
    1270:	8b 81       	ldd	r24, Y+3	; 0x03
    1272:	28 2f       	mov	r18, r24
    1274:	30 e0       	ldi	r19, 0x00	; 0
    1276:	81 e0       	ldi	r24, 0x01	; 1
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	02 2e       	mov	r0, r18
    127c:	02 c0       	rjmp	.+4      	; 0x1282 <DIO_enuToggelPin+0xd0>
    127e:	88 0f       	add	r24, r24
    1280:	99 1f       	adc	r25, r25
    1282:	0a 94       	dec	r0
    1284:	e2 f7       	brpl	.-8      	; 0x127e <DIO_enuToggelPin+0xcc>
    1286:	84 27       	eor	r24, r20
    1288:	8c 93       	st	X, r24
    128a:	13 c0       	rjmp	.+38     	; 0x12b2 <DIO_enuToggelPin+0x100>
			break;

		case DIO_PORTD :
			PORTD ^=(DIO_MASK_BIT<<Copy_u8PinID);
    128c:	a2 e3       	ldi	r26, 0x32	; 50
    128e:	b0 e0       	ldi	r27, 0x00	; 0
    1290:	e2 e3       	ldi	r30, 0x32	; 50
    1292:	f0 e0       	ldi	r31, 0x00	; 0
    1294:	80 81       	ld	r24, Z
    1296:	48 2f       	mov	r20, r24
    1298:	8b 81       	ldd	r24, Y+3	; 0x03
    129a:	28 2f       	mov	r18, r24
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	81 e0       	ldi	r24, 0x01	; 1
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	02 2e       	mov	r0, r18
    12a4:	02 c0       	rjmp	.+4      	; 0x12aa <DIO_enuToggelPin+0xf8>
    12a6:	88 0f       	add	r24, r24
    12a8:	99 1f       	adc	r25, r25
    12aa:	0a 94       	dec	r0
    12ac:	e2 f7       	brpl	.-8      	; 0x12a6 <DIO_enuToggelPin+0xf4>
    12ae:	84 27       	eor	r24, r20
    12b0:	8c 93       	st	X, r24
			break;
		}

		Local_enuerrorState = ES_OK;
    12b2:	81 e0       	ldi	r24, 0x01	; 1
    12b4:	89 83       	std	Y+1, r24	; 0x01
    12b6:	02 c0       	rjmp	.+4      	; 0x12bc <DIO_enuToggelPin+0x10a>

	}
	else
	{
		Local_enuerrorState = ES_OUT_OF_RANGE;
    12b8:	83 e0       	ldi	r24, 0x03	; 3
    12ba:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_enuerrorState  ;
    12bc:	89 81       	ldd	r24, Y+1	; 0x01
}//End of DIO_enuToggelPin().
    12be:	0f 90       	pop	r0
    12c0:	0f 90       	pop	r0
    12c2:	0f 90       	pop	r0
    12c4:	0f 90       	pop	r0
    12c6:	0f 90       	pop	r0
    12c8:	cf 91       	pop	r28
    12ca:	df 91       	pop	r29
    12cc:	08 95       	ret

000012ce <DIO_enuGetPinVlaue>:
/*                 : Arg.3: Address of u8 variable.                              */
/*                                                                               */
/* Return          : ERROR_STATE eum.                                            */
/*********************************************************************************/
ES_t DIO_enuGetPinVlaue(u8 Copy_u8PortID , u8 Copy_u8PinID , u8* Copy_pu8PinVal)
{
    12ce:	df 93       	push	r29
    12d0:	cf 93       	push	r28
    12d2:	cd b7       	in	r28, 0x3d	; 61
    12d4:	de b7       	in	r29, 0x3e	; 62
    12d6:	27 97       	sbiw	r28, 0x07	; 7
    12d8:	0f b6       	in	r0, 0x3f	; 63
    12da:	f8 94       	cli
    12dc:	de bf       	out	0x3e, r29	; 62
    12de:	0f be       	out	0x3f, r0	; 63
    12e0:	cd bf       	out	0x3d, r28	; 61
    12e2:	8a 83       	std	Y+2, r24	; 0x02
    12e4:	6b 83       	std	Y+3, r22	; 0x03
    12e6:	5d 83       	std	Y+5, r21	; 0x05
    12e8:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuerrorState = ES_NOK ;
    12ea:	19 82       	std	Y+1, r1	; 0x01

	// Check to ensure that the passed address is not equal Null.
	if( Copy_pu8PinVal != NULL )
    12ec:	8c 81       	ldd	r24, Y+4	; 0x04
    12ee:	9d 81       	ldd	r25, Y+5	; 0x05
    12f0:	00 97       	sbiw	r24, 0x00	; 0
    12f2:	09 f4       	brne	.+2      	; 0x12f6 <DIO_enuGetPinVlaue+0x28>
    12f4:	7e c0       	rjmp	.+252    	; 0x13f2 <DIO_enuGetPinVlaue+0x124>
	{
		if( (Copy_u8PortID <= DIO_PORTD) &&  (Copy_u8PinID <= DIO_PIN7) )
    12f6:	8a 81       	ldd	r24, Y+2	; 0x02
    12f8:	84 30       	cpi	r24, 0x04	; 4
    12fa:	08 f0       	brcs	.+2      	; 0x12fe <DIO_enuGetPinVlaue+0x30>
    12fc:	77 c0       	rjmp	.+238    	; 0x13ec <DIO_enuGetPinVlaue+0x11e>
    12fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1300:	88 30       	cpi	r24, 0x08	; 8
    1302:	08 f0       	brcs	.+2      	; 0x1306 <DIO_enuGetPinVlaue+0x38>
    1304:	73 c0       	rjmp	.+230    	; 0x13ec <DIO_enuGetPinVlaue+0x11e>
		{
			/**********************************************************
			 * Switching for the suitable case .
			 **********************************************************/
			switch( Copy_u8PortID )
    1306:	8a 81       	ldd	r24, Y+2	; 0x02
    1308:	28 2f       	mov	r18, r24
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	3f 83       	std	Y+7, r19	; 0x07
    130e:	2e 83       	std	Y+6, r18	; 0x06
    1310:	4e 81       	ldd	r20, Y+6	; 0x06
    1312:	5f 81       	ldd	r21, Y+7	; 0x07
    1314:	41 30       	cpi	r20, 0x01	; 1
    1316:	51 05       	cpc	r21, r1
    1318:	59 f1       	breq	.+86     	; 0x1370 <DIO_enuGetPinVlaue+0xa2>
    131a:	8e 81       	ldd	r24, Y+6	; 0x06
    131c:	9f 81       	ldd	r25, Y+7	; 0x07
    131e:	82 30       	cpi	r24, 0x02	; 2
    1320:	91 05       	cpc	r25, r1
    1322:	34 f4       	brge	.+12     	; 0x1330 <DIO_enuGetPinVlaue+0x62>
    1324:	2e 81       	ldd	r18, Y+6	; 0x06
    1326:	3f 81       	ldd	r19, Y+7	; 0x07
    1328:	21 15       	cp	r18, r1
    132a:	31 05       	cpc	r19, r1
    132c:	69 f0       	breq	.+26     	; 0x1348 <DIO_enuGetPinVlaue+0x7a>
    132e:	5b c0       	rjmp	.+182    	; 0x13e6 <DIO_enuGetPinVlaue+0x118>
    1330:	4e 81       	ldd	r20, Y+6	; 0x06
    1332:	5f 81       	ldd	r21, Y+7	; 0x07
    1334:	42 30       	cpi	r20, 0x02	; 2
    1336:	51 05       	cpc	r21, r1
    1338:	79 f1       	breq	.+94     	; 0x1398 <DIO_enuGetPinVlaue+0xca>
    133a:	8e 81       	ldd	r24, Y+6	; 0x06
    133c:	9f 81       	ldd	r25, Y+7	; 0x07
    133e:	83 30       	cpi	r24, 0x03	; 3
    1340:	91 05       	cpc	r25, r1
    1342:	09 f4       	brne	.+2      	; 0x1346 <DIO_enuGetPinVlaue+0x78>
    1344:	3d c0       	rjmp	.+122    	; 0x13c0 <DIO_enuGetPinVlaue+0xf2>
    1346:	4f c0       	rjmp	.+158    	; 0x13e6 <DIO_enuGetPinVlaue+0x118>
			{
			case DIO_PORTA :
				*Copy_pu8PinVal = (PINA>>Copy_u8PinID)&DIO_MASK_BIT;
    1348:	e9 e3       	ldi	r30, 0x39	; 57
    134a:	f0 e0       	ldi	r31, 0x00	; 0
    134c:	80 81       	ld	r24, Z
    134e:	28 2f       	mov	r18, r24
    1350:	30 e0       	ldi	r19, 0x00	; 0
    1352:	8b 81       	ldd	r24, Y+3	; 0x03
    1354:	88 2f       	mov	r24, r24
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	a9 01       	movw	r20, r18
    135a:	02 c0       	rjmp	.+4      	; 0x1360 <DIO_enuGetPinVlaue+0x92>
    135c:	55 95       	asr	r21
    135e:	47 95       	ror	r20
    1360:	8a 95       	dec	r24
    1362:	e2 f7       	brpl	.-8      	; 0x135c <DIO_enuGetPinVlaue+0x8e>
    1364:	ca 01       	movw	r24, r20
    1366:	81 70       	andi	r24, 0x01	; 1
    1368:	ec 81       	ldd	r30, Y+4	; 0x04
    136a:	fd 81       	ldd	r31, Y+5	; 0x05
    136c:	80 83       	st	Z, r24
    136e:	3b c0       	rjmp	.+118    	; 0x13e6 <DIO_enuGetPinVlaue+0x118>
				break;

			case DIO_PORTB :
				*Copy_pu8PinVal = (PINB>>Copy_u8PinID)&DIO_MASK_BIT;
    1370:	e6 e3       	ldi	r30, 0x36	; 54
    1372:	f0 e0       	ldi	r31, 0x00	; 0
    1374:	80 81       	ld	r24, Z
    1376:	28 2f       	mov	r18, r24
    1378:	30 e0       	ldi	r19, 0x00	; 0
    137a:	8b 81       	ldd	r24, Y+3	; 0x03
    137c:	88 2f       	mov	r24, r24
    137e:	90 e0       	ldi	r25, 0x00	; 0
    1380:	a9 01       	movw	r20, r18
    1382:	02 c0       	rjmp	.+4      	; 0x1388 <DIO_enuGetPinVlaue+0xba>
    1384:	55 95       	asr	r21
    1386:	47 95       	ror	r20
    1388:	8a 95       	dec	r24
    138a:	e2 f7       	brpl	.-8      	; 0x1384 <DIO_enuGetPinVlaue+0xb6>
    138c:	ca 01       	movw	r24, r20
    138e:	81 70       	andi	r24, 0x01	; 1
    1390:	ec 81       	ldd	r30, Y+4	; 0x04
    1392:	fd 81       	ldd	r31, Y+5	; 0x05
    1394:	80 83       	st	Z, r24
    1396:	27 c0       	rjmp	.+78     	; 0x13e6 <DIO_enuGetPinVlaue+0x118>
				break;

			case DIO_PORTC :
				*Copy_pu8PinVal = (PINC>>Copy_u8PinID)&DIO_MASK_BIT;
    1398:	e3 e3       	ldi	r30, 0x33	; 51
    139a:	f0 e0       	ldi	r31, 0x00	; 0
    139c:	80 81       	ld	r24, Z
    139e:	28 2f       	mov	r18, r24
    13a0:	30 e0       	ldi	r19, 0x00	; 0
    13a2:	8b 81       	ldd	r24, Y+3	; 0x03
    13a4:	88 2f       	mov	r24, r24
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	a9 01       	movw	r20, r18
    13aa:	02 c0       	rjmp	.+4      	; 0x13b0 <DIO_enuGetPinVlaue+0xe2>
    13ac:	55 95       	asr	r21
    13ae:	47 95       	ror	r20
    13b0:	8a 95       	dec	r24
    13b2:	e2 f7       	brpl	.-8      	; 0x13ac <DIO_enuGetPinVlaue+0xde>
    13b4:	ca 01       	movw	r24, r20
    13b6:	81 70       	andi	r24, 0x01	; 1
    13b8:	ec 81       	ldd	r30, Y+4	; 0x04
    13ba:	fd 81       	ldd	r31, Y+5	; 0x05
    13bc:	80 83       	st	Z, r24
    13be:	13 c0       	rjmp	.+38     	; 0x13e6 <DIO_enuGetPinVlaue+0x118>
				break;

			case DIO_PORTD :
				*Copy_pu8PinVal = (PIND>>Copy_u8PinID)&DIO_MASK_BIT;
    13c0:	e0 e3       	ldi	r30, 0x30	; 48
    13c2:	f0 e0       	ldi	r31, 0x00	; 0
    13c4:	80 81       	ld	r24, Z
    13c6:	28 2f       	mov	r18, r24
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	8b 81       	ldd	r24, Y+3	; 0x03
    13cc:	88 2f       	mov	r24, r24
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	a9 01       	movw	r20, r18
    13d2:	02 c0       	rjmp	.+4      	; 0x13d8 <DIO_enuGetPinVlaue+0x10a>
    13d4:	55 95       	asr	r21
    13d6:	47 95       	ror	r20
    13d8:	8a 95       	dec	r24
    13da:	e2 f7       	brpl	.-8      	; 0x13d4 <DIO_enuGetPinVlaue+0x106>
    13dc:	ca 01       	movw	r24, r20
    13de:	81 70       	andi	r24, 0x01	; 1
    13e0:	ec 81       	ldd	r30, Y+4	; 0x04
    13e2:	fd 81       	ldd	r31, Y+5	; 0x05
    13e4:	80 83       	st	Z, r24
				break;
			}

			Local_enuerrorState = ES_OK;
    13e6:	81 e0       	ldi	r24, 0x01	; 1
    13e8:	89 83       	std	Y+1, r24	; 0x01
    13ea:	05 c0       	rjmp	.+10     	; 0x13f6 <DIO_enuGetPinVlaue+0x128>

		}
		else
		{
			Local_enuerrorState = ES_OUT_OF_RANGE;
    13ec:	83 e0       	ldi	r24, 0x03	; 3
    13ee:	89 83       	std	Y+1, r24	; 0x01
    13f0:	02 c0       	rjmp	.+4      	; 0x13f6 <DIO_enuGetPinVlaue+0x128>
	else
	{
		/**********************************************************
		 * Handle null pointer case.
		 **********************************************************/
		Local_enuerrorState = ES_NULL_POINTER;
    13f2:	82 e0       	ldi	r24, 0x02	; 2
    13f4:	89 83       	std	Y+1, r24	; 0x01
	}



	return Local_enuerrorState  ;
    13f6:	89 81       	ldd	r24, Y+1	; 0x01
}//End of DIO_enuGetPinVlaue().
    13f8:	27 96       	adiw	r28, 0x07	; 7
    13fa:	0f b6       	in	r0, 0x3f	; 63
    13fc:	f8 94       	cli
    13fe:	de bf       	out	0x3e, r29	; 62
    1400:	0f be       	out	0x3f, r0	; 63
    1402:	cd bf       	out	0x3d, r28	; 61
    1404:	cf 91       	pop	r28
    1406:	df 91       	pop	r29
    1408:	08 95       	ret

0000140a <Seven_Segment_enuInit>:
#include "SEV_SEG_Cnfg.h"



ES_t Seven_Segment_enuInit( SEG_t*  Cpy_pstrSegCnfg )
{
    140a:	df 93       	push	r29
    140c:	cf 93       	push	r28
    140e:	00 d0       	rcall	.+0      	; 0x1410 <Seven_Segment_enuInit+0x6>
    1410:	00 d0       	rcall	.+0      	; 0x1412 <Seven_Segment_enuInit+0x8>
    1412:	00 d0       	rcall	.+0      	; 0x1414 <Seven_Segment_enuInit+0xa>
    1414:	cd b7       	in	r28, 0x3d	; 61
    1416:	de b7       	in	r29, 0x3e	; 62
    1418:	9c 83       	std	Y+4, r25	; 0x04
    141a:	8b 83       	std	Y+3, r24	; 0x03
	ES_t  Local_enuErrorState   = ES_NOK ;
    141c:	1a 82       	std	Y+2, r1	; 0x02

	// Make sure that the passed address is not equal NULL .
	if(Cpy_pstrSegCnfg !=NULL )
    141e:	8b 81       	ldd	r24, Y+3	; 0x03
    1420:	9c 81       	ldd	r25, Y+4	; 0x04
    1422:	00 97       	sbiw	r24, 0x00	; 0
    1424:	09 f4       	brne	.+2      	; 0x1428 <Seven_Segment_enuInit+0x1e>
    1426:	e4 c6       	rjmp	.+3528   	; 0x21f0 <Seven_Segment_enuInit+0xde6>
	{
		u8 Local_u8Iterator = 0 ;
    1428:	19 82       	std	Y+1, r1	; 0x01

		for( Local_u8Iterator = 0 ; Local_u8Iterator < SEG_NUM  ; Local_u8Iterator++)
    142a:	19 82       	std	Y+1, r1	; 0x01
    142c:	dd c6       	rjmp	.+3514   	; 0x21e8 <Seven_Segment_enuInit+0xdde>
		{

			/********************************************************************************************************************************************/
			/* Configure all pins that connected to the seven segments legs as output pinS.                                                             */
			/********************************************************************************************************************************************/
			DIO_enuSetPinDirection( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegA_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegA_Pin,DIO_OUTPUT_PIN);
    142e:	89 81       	ldd	r24, Y+1	; 0x01
    1430:	48 2f       	mov	r20, r24
    1432:	50 e0       	ldi	r21, 0x00	; 0
    1434:	ca 01       	movw	r24, r20
    1436:	88 0f       	add	r24, r24
    1438:	99 1f       	adc	r25, r25
    143a:	9c 01       	movw	r18, r24
    143c:	22 0f       	add	r18, r18
    143e:	33 1f       	adc	r19, r19
    1440:	22 0f       	add	r18, r18
    1442:	33 1f       	adc	r19, r19
    1444:	22 0f       	add	r18, r18
    1446:	33 1f       	adc	r19, r19
    1448:	82 0f       	add	r24, r18
    144a:	93 1f       	adc	r25, r19
    144c:	9c 01       	movw	r18, r24
    144e:	24 0f       	add	r18, r20
    1450:	35 1f       	adc	r19, r21
    1452:	8b 81       	ldd	r24, Y+3	; 0x03
    1454:	9c 81       	ldd	r25, Y+4	; 0x04
    1456:	fc 01       	movw	r30, r24
    1458:	e2 0f       	add	r30, r18
    145a:	f3 1f       	adc	r31, r19
    145c:	61 81       	ldd	r22, Z+1	; 0x01
    145e:	89 81       	ldd	r24, Y+1	; 0x01
    1460:	48 2f       	mov	r20, r24
    1462:	50 e0       	ldi	r21, 0x00	; 0
    1464:	ca 01       	movw	r24, r20
    1466:	88 0f       	add	r24, r24
    1468:	99 1f       	adc	r25, r25
    146a:	9c 01       	movw	r18, r24
    146c:	22 0f       	add	r18, r18
    146e:	33 1f       	adc	r19, r19
    1470:	22 0f       	add	r18, r18
    1472:	33 1f       	adc	r19, r19
    1474:	22 0f       	add	r18, r18
    1476:	33 1f       	adc	r19, r19
    1478:	82 0f       	add	r24, r18
    147a:	93 1f       	adc	r25, r19
    147c:	9c 01       	movw	r18, r24
    147e:	24 0f       	add	r18, r20
    1480:	35 1f       	adc	r19, r21
    1482:	8b 81       	ldd	r24, Y+3	; 0x03
    1484:	9c 81       	ldd	r25, Y+4	; 0x04
    1486:	fc 01       	movw	r30, r24
    1488:	e2 0f       	add	r30, r18
    148a:	f3 1f       	adc	r31, r19
    148c:	92 81       	ldd	r25, Z+2	; 0x02
    148e:	86 2f       	mov	r24, r22
    1490:	69 2f       	mov	r22, r25
    1492:	41 e0       	ldi	r20, 0x01	; 1
    1494:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <DIO_enuSetPinDirection>
			DIO_enuSetPinDirection( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegB_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegB_Pin,DIO_OUTPUT_PIN);
    1498:	89 81       	ldd	r24, Y+1	; 0x01
    149a:	48 2f       	mov	r20, r24
    149c:	50 e0       	ldi	r21, 0x00	; 0
    149e:	ca 01       	movw	r24, r20
    14a0:	88 0f       	add	r24, r24
    14a2:	99 1f       	adc	r25, r25
    14a4:	9c 01       	movw	r18, r24
    14a6:	22 0f       	add	r18, r18
    14a8:	33 1f       	adc	r19, r19
    14aa:	22 0f       	add	r18, r18
    14ac:	33 1f       	adc	r19, r19
    14ae:	22 0f       	add	r18, r18
    14b0:	33 1f       	adc	r19, r19
    14b2:	82 0f       	add	r24, r18
    14b4:	93 1f       	adc	r25, r19
    14b6:	9c 01       	movw	r18, r24
    14b8:	24 0f       	add	r18, r20
    14ba:	35 1f       	adc	r19, r21
    14bc:	8b 81       	ldd	r24, Y+3	; 0x03
    14be:	9c 81       	ldd	r25, Y+4	; 0x04
    14c0:	fc 01       	movw	r30, r24
    14c2:	e2 0f       	add	r30, r18
    14c4:	f3 1f       	adc	r31, r19
    14c6:	63 81       	ldd	r22, Z+3	; 0x03
    14c8:	89 81       	ldd	r24, Y+1	; 0x01
    14ca:	48 2f       	mov	r20, r24
    14cc:	50 e0       	ldi	r21, 0x00	; 0
    14ce:	ca 01       	movw	r24, r20
    14d0:	88 0f       	add	r24, r24
    14d2:	99 1f       	adc	r25, r25
    14d4:	9c 01       	movw	r18, r24
    14d6:	22 0f       	add	r18, r18
    14d8:	33 1f       	adc	r19, r19
    14da:	22 0f       	add	r18, r18
    14dc:	33 1f       	adc	r19, r19
    14de:	22 0f       	add	r18, r18
    14e0:	33 1f       	adc	r19, r19
    14e2:	82 0f       	add	r24, r18
    14e4:	93 1f       	adc	r25, r19
    14e6:	9c 01       	movw	r18, r24
    14e8:	24 0f       	add	r18, r20
    14ea:	35 1f       	adc	r19, r21
    14ec:	8b 81       	ldd	r24, Y+3	; 0x03
    14ee:	9c 81       	ldd	r25, Y+4	; 0x04
    14f0:	fc 01       	movw	r30, r24
    14f2:	e2 0f       	add	r30, r18
    14f4:	f3 1f       	adc	r31, r19
    14f6:	94 81       	ldd	r25, Z+4	; 0x04
    14f8:	86 2f       	mov	r24, r22
    14fa:	69 2f       	mov	r22, r25
    14fc:	41 e0       	ldi	r20, 0x01	; 1
    14fe:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <DIO_enuSetPinDirection>
			DIO_enuSetPinDirection( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegC_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegC_Pin,DIO_OUTPUT_PIN);
    1502:	89 81       	ldd	r24, Y+1	; 0x01
    1504:	48 2f       	mov	r20, r24
    1506:	50 e0       	ldi	r21, 0x00	; 0
    1508:	ca 01       	movw	r24, r20
    150a:	88 0f       	add	r24, r24
    150c:	99 1f       	adc	r25, r25
    150e:	9c 01       	movw	r18, r24
    1510:	22 0f       	add	r18, r18
    1512:	33 1f       	adc	r19, r19
    1514:	22 0f       	add	r18, r18
    1516:	33 1f       	adc	r19, r19
    1518:	22 0f       	add	r18, r18
    151a:	33 1f       	adc	r19, r19
    151c:	82 0f       	add	r24, r18
    151e:	93 1f       	adc	r25, r19
    1520:	9c 01       	movw	r18, r24
    1522:	24 0f       	add	r18, r20
    1524:	35 1f       	adc	r19, r21
    1526:	8b 81       	ldd	r24, Y+3	; 0x03
    1528:	9c 81       	ldd	r25, Y+4	; 0x04
    152a:	fc 01       	movw	r30, r24
    152c:	e2 0f       	add	r30, r18
    152e:	f3 1f       	adc	r31, r19
    1530:	65 81       	ldd	r22, Z+5	; 0x05
    1532:	89 81       	ldd	r24, Y+1	; 0x01
    1534:	48 2f       	mov	r20, r24
    1536:	50 e0       	ldi	r21, 0x00	; 0
    1538:	ca 01       	movw	r24, r20
    153a:	88 0f       	add	r24, r24
    153c:	99 1f       	adc	r25, r25
    153e:	9c 01       	movw	r18, r24
    1540:	22 0f       	add	r18, r18
    1542:	33 1f       	adc	r19, r19
    1544:	22 0f       	add	r18, r18
    1546:	33 1f       	adc	r19, r19
    1548:	22 0f       	add	r18, r18
    154a:	33 1f       	adc	r19, r19
    154c:	82 0f       	add	r24, r18
    154e:	93 1f       	adc	r25, r19
    1550:	9c 01       	movw	r18, r24
    1552:	24 0f       	add	r18, r20
    1554:	35 1f       	adc	r19, r21
    1556:	8b 81       	ldd	r24, Y+3	; 0x03
    1558:	9c 81       	ldd	r25, Y+4	; 0x04
    155a:	fc 01       	movw	r30, r24
    155c:	e2 0f       	add	r30, r18
    155e:	f3 1f       	adc	r31, r19
    1560:	96 81       	ldd	r25, Z+6	; 0x06
    1562:	86 2f       	mov	r24, r22
    1564:	69 2f       	mov	r22, r25
    1566:	41 e0       	ldi	r20, 0x01	; 1
    1568:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <DIO_enuSetPinDirection>
			DIO_enuSetPinDirection( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegD_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegD_Pin,DIO_OUTPUT_PIN);
    156c:	89 81       	ldd	r24, Y+1	; 0x01
    156e:	48 2f       	mov	r20, r24
    1570:	50 e0       	ldi	r21, 0x00	; 0
    1572:	ca 01       	movw	r24, r20
    1574:	88 0f       	add	r24, r24
    1576:	99 1f       	adc	r25, r25
    1578:	9c 01       	movw	r18, r24
    157a:	22 0f       	add	r18, r18
    157c:	33 1f       	adc	r19, r19
    157e:	22 0f       	add	r18, r18
    1580:	33 1f       	adc	r19, r19
    1582:	22 0f       	add	r18, r18
    1584:	33 1f       	adc	r19, r19
    1586:	82 0f       	add	r24, r18
    1588:	93 1f       	adc	r25, r19
    158a:	9c 01       	movw	r18, r24
    158c:	24 0f       	add	r18, r20
    158e:	35 1f       	adc	r19, r21
    1590:	8b 81       	ldd	r24, Y+3	; 0x03
    1592:	9c 81       	ldd	r25, Y+4	; 0x04
    1594:	fc 01       	movw	r30, r24
    1596:	e2 0f       	add	r30, r18
    1598:	f3 1f       	adc	r31, r19
    159a:	67 81       	ldd	r22, Z+7	; 0x07
    159c:	89 81       	ldd	r24, Y+1	; 0x01
    159e:	48 2f       	mov	r20, r24
    15a0:	50 e0       	ldi	r21, 0x00	; 0
    15a2:	ca 01       	movw	r24, r20
    15a4:	88 0f       	add	r24, r24
    15a6:	99 1f       	adc	r25, r25
    15a8:	9c 01       	movw	r18, r24
    15aa:	22 0f       	add	r18, r18
    15ac:	33 1f       	adc	r19, r19
    15ae:	22 0f       	add	r18, r18
    15b0:	33 1f       	adc	r19, r19
    15b2:	22 0f       	add	r18, r18
    15b4:	33 1f       	adc	r19, r19
    15b6:	82 0f       	add	r24, r18
    15b8:	93 1f       	adc	r25, r19
    15ba:	9c 01       	movw	r18, r24
    15bc:	24 0f       	add	r18, r20
    15be:	35 1f       	adc	r19, r21
    15c0:	8b 81       	ldd	r24, Y+3	; 0x03
    15c2:	9c 81       	ldd	r25, Y+4	; 0x04
    15c4:	fc 01       	movw	r30, r24
    15c6:	e2 0f       	add	r30, r18
    15c8:	f3 1f       	adc	r31, r19
    15ca:	90 85       	ldd	r25, Z+8	; 0x08
    15cc:	86 2f       	mov	r24, r22
    15ce:	69 2f       	mov	r22, r25
    15d0:	41 e0       	ldi	r20, 0x01	; 1
    15d2:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <DIO_enuSetPinDirection>
			DIO_enuSetPinDirection( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegE_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegE_Pin,DIO_OUTPUT_PIN);
    15d6:	89 81       	ldd	r24, Y+1	; 0x01
    15d8:	48 2f       	mov	r20, r24
    15da:	50 e0       	ldi	r21, 0x00	; 0
    15dc:	ca 01       	movw	r24, r20
    15de:	88 0f       	add	r24, r24
    15e0:	99 1f       	adc	r25, r25
    15e2:	9c 01       	movw	r18, r24
    15e4:	22 0f       	add	r18, r18
    15e6:	33 1f       	adc	r19, r19
    15e8:	22 0f       	add	r18, r18
    15ea:	33 1f       	adc	r19, r19
    15ec:	22 0f       	add	r18, r18
    15ee:	33 1f       	adc	r19, r19
    15f0:	82 0f       	add	r24, r18
    15f2:	93 1f       	adc	r25, r19
    15f4:	9c 01       	movw	r18, r24
    15f6:	24 0f       	add	r18, r20
    15f8:	35 1f       	adc	r19, r21
    15fa:	8b 81       	ldd	r24, Y+3	; 0x03
    15fc:	9c 81       	ldd	r25, Y+4	; 0x04
    15fe:	fc 01       	movw	r30, r24
    1600:	e2 0f       	add	r30, r18
    1602:	f3 1f       	adc	r31, r19
    1604:	61 85       	ldd	r22, Z+9	; 0x09
    1606:	89 81       	ldd	r24, Y+1	; 0x01
    1608:	48 2f       	mov	r20, r24
    160a:	50 e0       	ldi	r21, 0x00	; 0
    160c:	ca 01       	movw	r24, r20
    160e:	88 0f       	add	r24, r24
    1610:	99 1f       	adc	r25, r25
    1612:	9c 01       	movw	r18, r24
    1614:	22 0f       	add	r18, r18
    1616:	33 1f       	adc	r19, r19
    1618:	22 0f       	add	r18, r18
    161a:	33 1f       	adc	r19, r19
    161c:	22 0f       	add	r18, r18
    161e:	33 1f       	adc	r19, r19
    1620:	82 0f       	add	r24, r18
    1622:	93 1f       	adc	r25, r19
    1624:	9c 01       	movw	r18, r24
    1626:	24 0f       	add	r18, r20
    1628:	35 1f       	adc	r19, r21
    162a:	8b 81       	ldd	r24, Y+3	; 0x03
    162c:	9c 81       	ldd	r25, Y+4	; 0x04
    162e:	fc 01       	movw	r30, r24
    1630:	e2 0f       	add	r30, r18
    1632:	f3 1f       	adc	r31, r19
    1634:	92 85       	ldd	r25, Z+10	; 0x0a
    1636:	86 2f       	mov	r24, r22
    1638:	69 2f       	mov	r22, r25
    163a:	41 e0       	ldi	r20, 0x01	; 1
    163c:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <DIO_enuSetPinDirection>
			DIO_enuSetPinDirection( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegF_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegF_Pin,DIO_OUTPUT_PIN);
    1640:	89 81       	ldd	r24, Y+1	; 0x01
    1642:	48 2f       	mov	r20, r24
    1644:	50 e0       	ldi	r21, 0x00	; 0
    1646:	ca 01       	movw	r24, r20
    1648:	88 0f       	add	r24, r24
    164a:	99 1f       	adc	r25, r25
    164c:	9c 01       	movw	r18, r24
    164e:	22 0f       	add	r18, r18
    1650:	33 1f       	adc	r19, r19
    1652:	22 0f       	add	r18, r18
    1654:	33 1f       	adc	r19, r19
    1656:	22 0f       	add	r18, r18
    1658:	33 1f       	adc	r19, r19
    165a:	82 0f       	add	r24, r18
    165c:	93 1f       	adc	r25, r19
    165e:	9c 01       	movw	r18, r24
    1660:	24 0f       	add	r18, r20
    1662:	35 1f       	adc	r19, r21
    1664:	8b 81       	ldd	r24, Y+3	; 0x03
    1666:	9c 81       	ldd	r25, Y+4	; 0x04
    1668:	fc 01       	movw	r30, r24
    166a:	e2 0f       	add	r30, r18
    166c:	f3 1f       	adc	r31, r19
    166e:	63 85       	ldd	r22, Z+11	; 0x0b
    1670:	89 81       	ldd	r24, Y+1	; 0x01
    1672:	48 2f       	mov	r20, r24
    1674:	50 e0       	ldi	r21, 0x00	; 0
    1676:	ca 01       	movw	r24, r20
    1678:	88 0f       	add	r24, r24
    167a:	99 1f       	adc	r25, r25
    167c:	9c 01       	movw	r18, r24
    167e:	22 0f       	add	r18, r18
    1680:	33 1f       	adc	r19, r19
    1682:	22 0f       	add	r18, r18
    1684:	33 1f       	adc	r19, r19
    1686:	22 0f       	add	r18, r18
    1688:	33 1f       	adc	r19, r19
    168a:	82 0f       	add	r24, r18
    168c:	93 1f       	adc	r25, r19
    168e:	9c 01       	movw	r18, r24
    1690:	24 0f       	add	r18, r20
    1692:	35 1f       	adc	r19, r21
    1694:	8b 81       	ldd	r24, Y+3	; 0x03
    1696:	9c 81       	ldd	r25, Y+4	; 0x04
    1698:	fc 01       	movw	r30, r24
    169a:	e2 0f       	add	r30, r18
    169c:	f3 1f       	adc	r31, r19
    169e:	94 85       	ldd	r25, Z+12	; 0x0c
    16a0:	86 2f       	mov	r24, r22
    16a2:	69 2f       	mov	r22, r25
    16a4:	41 e0       	ldi	r20, 0x01	; 1
    16a6:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <DIO_enuSetPinDirection>
			DIO_enuSetPinDirection( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegG_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegG_Pin,DIO_OUTPUT_PIN);
    16aa:	89 81       	ldd	r24, Y+1	; 0x01
    16ac:	48 2f       	mov	r20, r24
    16ae:	50 e0       	ldi	r21, 0x00	; 0
    16b0:	ca 01       	movw	r24, r20
    16b2:	88 0f       	add	r24, r24
    16b4:	99 1f       	adc	r25, r25
    16b6:	9c 01       	movw	r18, r24
    16b8:	22 0f       	add	r18, r18
    16ba:	33 1f       	adc	r19, r19
    16bc:	22 0f       	add	r18, r18
    16be:	33 1f       	adc	r19, r19
    16c0:	22 0f       	add	r18, r18
    16c2:	33 1f       	adc	r19, r19
    16c4:	82 0f       	add	r24, r18
    16c6:	93 1f       	adc	r25, r19
    16c8:	9c 01       	movw	r18, r24
    16ca:	24 0f       	add	r18, r20
    16cc:	35 1f       	adc	r19, r21
    16ce:	8b 81       	ldd	r24, Y+3	; 0x03
    16d0:	9c 81       	ldd	r25, Y+4	; 0x04
    16d2:	fc 01       	movw	r30, r24
    16d4:	e2 0f       	add	r30, r18
    16d6:	f3 1f       	adc	r31, r19
    16d8:	65 85       	ldd	r22, Z+13	; 0x0d
    16da:	89 81       	ldd	r24, Y+1	; 0x01
    16dc:	48 2f       	mov	r20, r24
    16de:	50 e0       	ldi	r21, 0x00	; 0
    16e0:	ca 01       	movw	r24, r20
    16e2:	88 0f       	add	r24, r24
    16e4:	99 1f       	adc	r25, r25
    16e6:	9c 01       	movw	r18, r24
    16e8:	22 0f       	add	r18, r18
    16ea:	33 1f       	adc	r19, r19
    16ec:	22 0f       	add	r18, r18
    16ee:	33 1f       	adc	r19, r19
    16f0:	22 0f       	add	r18, r18
    16f2:	33 1f       	adc	r19, r19
    16f4:	82 0f       	add	r24, r18
    16f6:	93 1f       	adc	r25, r19
    16f8:	9c 01       	movw	r18, r24
    16fa:	24 0f       	add	r18, r20
    16fc:	35 1f       	adc	r19, r21
    16fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1700:	9c 81       	ldd	r25, Y+4	; 0x04
    1702:	fc 01       	movw	r30, r24
    1704:	e2 0f       	add	r30, r18
    1706:	f3 1f       	adc	r31, r19
    1708:	96 85       	ldd	r25, Z+14	; 0x0e
    170a:	86 2f       	mov	r24, r22
    170c:	69 2f       	mov	r22, r25
    170e:	41 e0       	ldi	r20, 0x01	; 1
    1710:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <DIO_enuSetPinDirection>


			if ( (Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8Type) == COMMON_ANODE )
    1714:	89 81       	ldd	r24, Y+1	; 0x01
    1716:	48 2f       	mov	r20, r24
    1718:	50 e0       	ldi	r21, 0x00	; 0
    171a:	ca 01       	movw	r24, r20
    171c:	88 0f       	add	r24, r24
    171e:	99 1f       	adc	r25, r25
    1720:	9c 01       	movw	r18, r24
    1722:	22 0f       	add	r18, r18
    1724:	33 1f       	adc	r19, r19
    1726:	22 0f       	add	r18, r18
    1728:	33 1f       	adc	r19, r19
    172a:	22 0f       	add	r18, r18
    172c:	33 1f       	adc	r19, r19
    172e:	82 0f       	add	r24, r18
    1730:	93 1f       	adc	r25, r19
    1732:	9c 01       	movw	r18, r24
    1734:	24 0f       	add	r18, r20
    1736:	35 1f       	adc	r19, r21
    1738:	8b 81       	ldd	r24, Y+3	; 0x03
    173a:	9c 81       	ldd	r25, Y+4	; 0x04
    173c:	fc 01       	movw	r30, r24
    173e:	e2 0f       	add	r30, r18
    1740:	f3 1f       	adc	r31, r19
    1742:	80 81       	ld	r24, Z
    1744:	81 30       	cpi	r24, 0x01	; 1
    1746:	09 f0       	breq	.+2      	; 0x174a <Seven_Segment_enuInit+0x340>
    1748:	af c2       	rjmp	.+1374   	; 0x1ca8 <Seven_Segment_enuInit+0x89e>
			{

				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegA_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegA_Pin,DIO_HIGH);
    174a:	89 81       	ldd	r24, Y+1	; 0x01
    174c:	48 2f       	mov	r20, r24
    174e:	50 e0       	ldi	r21, 0x00	; 0
    1750:	ca 01       	movw	r24, r20
    1752:	88 0f       	add	r24, r24
    1754:	99 1f       	adc	r25, r25
    1756:	9c 01       	movw	r18, r24
    1758:	22 0f       	add	r18, r18
    175a:	33 1f       	adc	r19, r19
    175c:	22 0f       	add	r18, r18
    175e:	33 1f       	adc	r19, r19
    1760:	22 0f       	add	r18, r18
    1762:	33 1f       	adc	r19, r19
    1764:	82 0f       	add	r24, r18
    1766:	93 1f       	adc	r25, r19
    1768:	9c 01       	movw	r18, r24
    176a:	24 0f       	add	r18, r20
    176c:	35 1f       	adc	r19, r21
    176e:	8b 81       	ldd	r24, Y+3	; 0x03
    1770:	9c 81       	ldd	r25, Y+4	; 0x04
    1772:	fc 01       	movw	r30, r24
    1774:	e2 0f       	add	r30, r18
    1776:	f3 1f       	adc	r31, r19
    1778:	61 81       	ldd	r22, Z+1	; 0x01
    177a:	89 81       	ldd	r24, Y+1	; 0x01
    177c:	48 2f       	mov	r20, r24
    177e:	50 e0       	ldi	r21, 0x00	; 0
    1780:	ca 01       	movw	r24, r20
    1782:	88 0f       	add	r24, r24
    1784:	99 1f       	adc	r25, r25
    1786:	9c 01       	movw	r18, r24
    1788:	22 0f       	add	r18, r18
    178a:	33 1f       	adc	r19, r19
    178c:	22 0f       	add	r18, r18
    178e:	33 1f       	adc	r19, r19
    1790:	22 0f       	add	r18, r18
    1792:	33 1f       	adc	r19, r19
    1794:	82 0f       	add	r24, r18
    1796:	93 1f       	adc	r25, r19
    1798:	9c 01       	movw	r18, r24
    179a:	24 0f       	add	r18, r20
    179c:	35 1f       	adc	r19, r21
    179e:	8b 81       	ldd	r24, Y+3	; 0x03
    17a0:	9c 81       	ldd	r25, Y+4	; 0x04
    17a2:	fc 01       	movw	r30, r24
    17a4:	e2 0f       	add	r30, r18
    17a6:	f3 1f       	adc	r31, r19
    17a8:	92 81       	ldd	r25, Z+2	; 0x02
    17aa:	86 2f       	mov	r24, r22
    17ac:	69 2f       	mov	r22, r25
    17ae:	41 e0       	ldi	r20, 0x01	; 1
    17b0:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegB_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegB_Pin,DIO_HIGH);
    17b4:	89 81       	ldd	r24, Y+1	; 0x01
    17b6:	48 2f       	mov	r20, r24
    17b8:	50 e0       	ldi	r21, 0x00	; 0
    17ba:	ca 01       	movw	r24, r20
    17bc:	88 0f       	add	r24, r24
    17be:	99 1f       	adc	r25, r25
    17c0:	9c 01       	movw	r18, r24
    17c2:	22 0f       	add	r18, r18
    17c4:	33 1f       	adc	r19, r19
    17c6:	22 0f       	add	r18, r18
    17c8:	33 1f       	adc	r19, r19
    17ca:	22 0f       	add	r18, r18
    17cc:	33 1f       	adc	r19, r19
    17ce:	82 0f       	add	r24, r18
    17d0:	93 1f       	adc	r25, r19
    17d2:	9c 01       	movw	r18, r24
    17d4:	24 0f       	add	r18, r20
    17d6:	35 1f       	adc	r19, r21
    17d8:	8b 81       	ldd	r24, Y+3	; 0x03
    17da:	9c 81       	ldd	r25, Y+4	; 0x04
    17dc:	fc 01       	movw	r30, r24
    17de:	e2 0f       	add	r30, r18
    17e0:	f3 1f       	adc	r31, r19
    17e2:	63 81       	ldd	r22, Z+3	; 0x03
    17e4:	89 81       	ldd	r24, Y+1	; 0x01
    17e6:	48 2f       	mov	r20, r24
    17e8:	50 e0       	ldi	r21, 0x00	; 0
    17ea:	ca 01       	movw	r24, r20
    17ec:	88 0f       	add	r24, r24
    17ee:	99 1f       	adc	r25, r25
    17f0:	9c 01       	movw	r18, r24
    17f2:	22 0f       	add	r18, r18
    17f4:	33 1f       	adc	r19, r19
    17f6:	22 0f       	add	r18, r18
    17f8:	33 1f       	adc	r19, r19
    17fa:	22 0f       	add	r18, r18
    17fc:	33 1f       	adc	r19, r19
    17fe:	82 0f       	add	r24, r18
    1800:	93 1f       	adc	r25, r19
    1802:	9c 01       	movw	r18, r24
    1804:	24 0f       	add	r18, r20
    1806:	35 1f       	adc	r19, r21
    1808:	8b 81       	ldd	r24, Y+3	; 0x03
    180a:	9c 81       	ldd	r25, Y+4	; 0x04
    180c:	fc 01       	movw	r30, r24
    180e:	e2 0f       	add	r30, r18
    1810:	f3 1f       	adc	r31, r19
    1812:	94 81       	ldd	r25, Z+4	; 0x04
    1814:	86 2f       	mov	r24, r22
    1816:	69 2f       	mov	r22, r25
    1818:	41 e0       	ldi	r20, 0x01	; 1
    181a:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegC_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegC_Pin,DIO_HIGH);
    181e:	89 81       	ldd	r24, Y+1	; 0x01
    1820:	48 2f       	mov	r20, r24
    1822:	50 e0       	ldi	r21, 0x00	; 0
    1824:	ca 01       	movw	r24, r20
    1826:	88 0f       	add	r24, r24
    1828:	99 1f       	adc	r25, r25
    182a:	9c 01       	movw	r18, r24
    182c:	22 0f       	add	r18, r18
    182e:	33 1f       	adc	r19, r19
    1830:	22 0f       	add	r18, r18
    1832:	33 1f       	adc	r19, r19
    1834:	22 0f       	add	r18, r18
    1836:	33 1f       	adc	r19, r19
    1838:	82 0f       	add	r24, r18
    183a:	93 1f       	adc	r25, r19
    183c:	9c 01       	movw	r18, r24
    183e:	24 0f       	add	r18, r20
    1840:	35 1f       	adc	r19, r21
    1842:	8b 81       	ldd	r24, Y+3	; 0x03
    1844:	9c 81       	ldd	r25, Y+4	; 0x04
    1846:	fc 01       	movw	r30, r24
    1848:	e2 0f       	add	r30, r18
    184a:	f3 1f       	adc	r31, r19
    184c:	65 81       	ldd	r22, Z+5	; 0x05
    184e:	89 81       	ldd	r24, Y+1	; 0x01
    1850:	48 2f       	mov	r20, r24
    1852:	50 e0       	ldi	r21, 0x00	; 0
    1854:	ca 01       	movw	r24, r20
    1856:	88 0f       	add	r24, r24
    1858:	99 1f       	adc	r25, r25
    185a:	9c 01       	movw	r18, r24
    185c:	22 0f       	add	r18, r18
    185e:	33 1f       	adc	r19, r19
    1860:	22 0f       	add	r18, r18
    1862:	33 1f       	adc	r19, r19
    1864:	22 0f       	add	r18, r18
    1866:	33 1f       	adc	r19, r19
    1868:	82 0f       	add	r24, r18
    186a:	93 1f       	adc	r25, r19
    186c:	9c 01       	movw	r18, r24
    186e:	24 0f       	add	r18, r20
    1870:	35 1f       	adc	r19, r21
    1872:	8b 81       	ldd	r24, Y+3	; 0x03
    1874:	9c 81       	ldd	r25, Y+4	; 0x04
    1876:	fc 01       	movw	r30, r24
    1878:	e2 0f       	add	r30, r18
    187a:	f3 1f       	adc	r31, r19
    187c:	96 81       	ldd	r25, Z+6	; 0x06
    187e:	86 2f       	mov	r24, r22
    1880:	69 2f       	mov	r22, r25
    1882:	41 e0       	ldi	r20, 0x01	; 1
    1884:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegD_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegD_Pin,DIO_HIGH);
    1888:	89 81       	ldd	r24, Y+1	; 0x01
    188a:	48 2f       	mov	r20, r24
    188c:	50 e0       	ldi	r21, 0x00	; 0
    188e:	ca 01       	movw	r24, r20
    1890:	88 0f       	add	r24, r24
    1892:	99 1f       	adc	r25, r25
    1894:	9c 01       	movw	r18, r24
    1896:	22 0f       	add	r18, r18
    1898:	33 1f       	adc	r19, r19
    189a:	22 0f       	add	r18, r18
    189c:	33 1f       	adc	r19, r19
    189e:	22 0f       	add	r18, r18
    18a0:	33 1f       	adc	r19, r19
    18a2:	82 0f       	add	r24, r18
    18a4:	93 1f       	adc	r25, r19
    18a6:	9c 01       	movw	r18, r24
    18a8:	24 0f       	add	r18, r20
    18aa:	35 1f       	adc	r19, r21
    18ac:	8b 81       	ldd	r24, Y+3	; 0x03
    18ae:	9c 81       	ldd	r25, Y+4	; 0x04
    18b0:	fc 01       	movw	r30, r24
    18b2:	e2 0f       	add	r30, r18
    18b4:	f3 1f       	adc	r31, r19
    18b6:	67 81       	ldd	r22, Z+7	; 0x07
    18b8:	89 81       	ldd	r24, Y+1	; 0x01
    18ba:	48 2f       	mov	r20, r24
    18bc:	50 e0       	ldi	r21, 0x00	; 0
    18be:	ca 01       	movw	r24, r20
    18c0:	88 0f       	add	r24, r24
    18c2:	99 1f       	adc	r25, r25
    18c4:	9c 01       	movw	r18, r24
    18c6:	22 0f       	add	r18, r18
    18c8:	33 1f       	adc	r19, r19
    18ca:	22 0f       	add	r18, r18
    18cc:	33 1f       	adc	r19, r19
    18ce:	22 0f       	add	r18, r18
    18d0:	33 1f       	adc	r19, r19
    18d2:	82 0f       	add	r24, r18
    18d4:	93 1f       	adc	r25, r19
    18d6:	9c 01       	movw	r18, r24
    18d8:	24 0f       	add	r18, r20
    18da:	35 1f       	adc	r19, r21
    18dc:	8b 81       	ldd	r24, Y+3	; 0x03
    18de:	9c 81       	ldd	r25, Y+4	; 0x04
    18e0:	fc 01       	movw	r30, r24
    18e2:	e2 0f       	add	r30, r18
    18e4:	f3 1f       	adc	r31, r19
    18e6:	90 85       	ldd	r25, Z+8	; 0x08
    18e8:	86 2f       	mov	r24, r22
    18ea:	69 2f       	mov	r22, r25
    18ec:	41 e0       	ldi	r20, 0x01	; 1
    18ee:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegE_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegE_Pin,DIO_HIGH);
    18f2:	89 81       	ldd	r24, Y+1	; 0x01
    18f4:	48 2f       	mov	r20, r24
    18f6:	50 e0       	ldi	r21, 0x00	; 0
    18f8:	ca 01       	movw	r24, r20
    18fa:	88 0f       	add	r24, r24
    18fc:	99 1f       	adc	r25, r25
    18fe:	9c 01       	movw	r18, r24
    1900:	22 0f       	add	r18, r18
    1902:	33 1f       	adc	r19, r19
    1904:	22 0f       	add	r18, r18
    1906:	33 1f       	adc	r19, r19
    1908:	22 0f       	add	r18, r18
    190a:	33 1f       	adc	r19, r19
    190c:	82 0f       	add	r24, r18
    190e:	93 1f       	adc	r25, r19
    1910:	9c 01       	movw	r18, r24
    1912:	24 0f       	add	r18, r20
    1914:	35 1f       	adc	r19, r21
    1916:	8b 81       	ldd	r24, Y+3	; 0x03
    1918:	9c 81       	ldd	r25, Y+4	; 0x04
    191a:	fc 01       	movw	r30, r24
    191c:	e2 0f       	add	r30, r18
    191e:	f3 1f       	adc	r31, r19
    1920:	61 85       	ldd	r22, Z+9	; 0x09
    1922:	89 81       	ldd	r24, Y+1	; 0x01
    1924:	48 2f       	mov	r20, r24
    1926:	50 e0       	ldi	r21, 0x00	; 0
    1928:	ca 01       	movw	r24, r20
    192a:	88 0f       	add	r24, r24
    192c:	99 1f       	adc	r25, r25
    192e:	9c 01       	movw	r18, r24
    1930:	22 0f       	add	r18, r18
    1932:	33 1f       	adc	r19, r19
    1934:	22 0f       	add	r18, r18
    1936:	33 1f       	adc	r19, r19
    1938:	22 0f       	add	r18, r18
    193a:	33 1f       	adc	r19, r19
    193c:	82 0f       	add	r24, r18
    193e:	93 1f       	adc	r25, r19
    1940:	9c 01       	movw	r18, r24
    1942:	24 0f       	add	r18, r20
    1944:	35 1f       	adc	r19, r21
    1946:	8b 81       	ldd	r24, Y+3	; 0x03
    1948:	9c 81       	ldd	r25, Y+4	; 0x04
    194a:	fc 01       	movw	r30, r24
    194c:	e2 0f       	add	r30, r18
    194e:	f3 1f       	adc	r31, r19
    1950:	92 85       	ldd	r25, Z+10	; 0x0a
    1952:	86 2f       	mov	r24, r22
    1954:	69 2f       	mov	r22, r25
    1956:	41 e0       	ldi	r20, 0x01	; 1
    1958:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegF_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegF_Pin,DIO_HIGH);
    195c:	89 81       	ldd	r24, Y+1	; 0x01
    195e:	48 2f       	mov	r20, r24
    1960:	50 e0       	ldi	r21, 0x00	; 0
    1962:	ca 01       	movw	r24, r20
    1964:	88 0f       	add	r24, r24
    1966:	99 1f       	adc	r25, r25
    1968:	9c 01       	movw	r18, r24
    196a:	22 0f       	add	r18, r18
    196c:	33 1f       	adc	r19, r19
    196e:	22 0f       	add	r18, r18
    1970:	33 1f       	adc	r19, r19
    1972:	22 0f       	add	r18, r18
    1974:	33 1f       	adc	r19, r19
    1976:	82 0f       	add	r24, r18
    1978:	93 1f       	adc	r25, r19
    197a:	9c 01       	movw	r18, r24
    197c:	24 0f       	add	r18, r20
    197e:	35 1f       	adc	r19, r21
    1980:	8b 81       	ldd	r24, Y+3	; 0x03
    1982:	9c 81       	ldd	r25, Y+4	; 0x04
    1984:	fc 01       	movw	r30, r24
    1986:	e2 0f       	add	r30, r18
    1988:	f3 1f       	adc	r31, r19
    198a:	63 85       	ldd	r22, Z+11	; 0x0b
    198c:	89 81       	ldd	r24, Y+1	; 0x01
    198e:	48 2f       	mov	r20, r24
    1990:	50 e0       	ldi	r21, 0x00	; 0
    1992:	ca 01       	movw	r24, r20
    1994:	88 0f       	add	r24, r24
    1996:	99 1f       	adc	r25, r25
    1998:	9c 01       	movw	r18, r24
    199a:	22 0f       	add	r18, r18
    199c:	33 1f       	adc	r19, r19
    199e:	22 0f       	add	r18, r18
    19a0:	33 1f       	adc	r19, r19
    19a2:	22 0f       	add	r18, r18
    19a4:	33 1f       	adc	r19, r19
    19a6:	82 0f       	add	r24, r18
    19a8:	93 1f       	adc	r25, r19
    19aa:	9c 01       	movw	r18, r24
    19ac:	24 0f       	add	r18, r20
    19ae:	35 1f       	adc	r19, r21
    19b0:	8b 81       	ldd	r24, Y+3	; 0x03
    19b2:	9c 81       	ldd	r25, Y+4	; 0x04
    19b4:	fc 01       	movw	r30, r24
    19b6:	e2 0f       	add	r30, r18
    19b8:	f3 1f       	adc	r31, r19
    19ba:	94 85       	ldd	r25, Z+12	; 0x0c
    19bc:	86 2f       	mov	r24, r22
    19be:	69 2f       	mov	r22, r25
    19c0:	41 e0       	ldi	r20, 0x01	; 1
    19c2:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegG_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegG_Pin,DIO_HIGH);
    19c6:	89 81       	ldd	r24, Y+1	; 0x01
    19c8:	48 2f       	mov	r20, r24
    19ca:	50 e0       	ldi	r21, 0x00	; 0
    19cc:	ca 01       	movw	r24, r20
    19ce:	88 0f       	add	r24, r24
    19d0:	99 1f       	adc	r25, r25
    19d2:	9c 01       	movw	r18, r24
    19d4:	22 0f       	add	r18, r18
    19d6:	33 1f       	adc	r19, r19
    19d8:	22 0f       	add	r18, r18
    19da:	33 1f       	adc	r19, r19
    19dc:	22 0f       	add	r18, r18
    19de:	33 1f       	adc	r19, r19
    19e0:	82 0f       	add	r24, r18
    19e2:	93 1f       	adc	r25, r19
    19e4:	9c 01       	movw	r18, r24
    19e6:	24 0f       	add	r18, r20
    19e8:	35 1f       	adc	r19, r21
    19ea:	8b 81       	ldd	r24, Y+3	; 0x03
    19ec:	9c 81       	ldd	r25, Y+4	; 0x04
    19ee:	fc 01       	movw	r30, r24
    19f0:	e2 0f       	add	r30, r18
    19f2:	f3 1f       	adc	r31, r19
    19f4:	65 85       	ldd	r22, Z+13	; 0x0d
    19f6:	89 81       	ldd	r24, Y+1	; 0x01
    19f8:	48 2f       	mov	r20, r24
    19fa:	50 e0       	ldi	r21, 0x00	; 0
    19fc:	ca 01       	movw	r24, r20
    19fe:	88 0f       	add	r24, r24
    1a00:	99 1f       	adc	r25, r25
    1a02:	9c 01       	movw	r18, r24
    1a04:	22 0f       	add	r18, r18
    1a06:	33 1f       	adc	r19, r19
    1a08:	22 0f       	add	r18, r18
    1a0a:	33 1f       	adc	r19, r19
    1a0c:	22 0f       	add	r18, r18
    1a0e:	33 1f       	adc	r19, r19
    1a10:	82 0f       	add	r24, r18
    1a12:	93 1f       	adc	r25, r19
    1a14:	9c 01       	movw	r18, r24
    1a16:	24 0f       	add	r18, r20
    1a18:	35 1f       	adc	r19, r21
    1a1a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a1c:	9c 81       	ldd	r25, Y+4	; 0x04
    1a1e:	fc 01       	movw	r30, r24
    1a20:	e2 0f       	add	r30, r18
    1a22:	f3 1f       	adc	r31, r19
    1a24:	96 85       	ldd	r25, Z+14	; 0x0e
    1a26:	86 2f       	mov	r24, r22
    1a28:	69 2f       	mov	r22, r25
    1a2a:	41 e0       	ldi	r20, 0x01	; 1
    1a2c:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				/**************************************************** Common Pin Scenarios Handling *********************************************************/

				/********************************************************************************************************************************************/
				/* Checking and Handling if there a dedicated pin to Common line scenario .                                                                 */
				/********************************************************************************************************************************************/
				if( ( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Port  <= DIO_PORTD ) && (Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Pin  <= DIO_PIN7) )
    1a30:	89 81       	ldd	r24, Y+1	; 0x01
    1a32:	48 2f       	mov	r20, r24
    1a34:	50 e0       	ldi	r21, 0x00	; 0
    1a36:	ca 01       	movw	r24, r20
    1a38:	88 0f       	add	r24, r24
    1a3a:	99 1f       	adc	r25, r25
    1a3c:	9c 01       	movw	r18, r24
    1a3e:	22 0f       	add	r18, r18
    1a40:	33 1f       	adc	r19, r19
    1a42:	22 0f       	add	r18, r18
    1a44:	33 1f       	adc	r19, r19
    1a46:	22 0f       	add	r18, r18
    1a48:	33 1f       	adc	r19, r19
    1a4a:	82 0f       	add	r24, r18
    1a4c:	93 1f       	adc	r25, r19
    1a4e:	9c 01       	movw	r18, r24
    1a50:	24 0f       	add	r18, r20
    1a52:	35 1f       	adc	r19, r21
    1a54:	8b 81       	ldd	r24, Y+3	; 0x03
    1a56:	9c 81       	ldd	r25, Y+4	; 0x04
    1a58:	fc 01       	movw	r30, r24
    1a5a:	e2 0f       	add	r30, r18
    1a5c:	f3 1f       	adc	r31, r19
    1a5e:	87 85       	ldd	r24, Z+15	; 0x0f
    1a60:	84 30       	cpi	r24, 0x04	; 4
    1a62:	08 f0       	brcs	.+2      	; 0x1a66 <Seven_Segment_enuInit+0x65c>
    1a64:	be c3       	rjmp	.+1916   	; 0x21e2 <Seven_Segment_enuInit+0xdd8>
    1a66:	89 81       	ldd	r24, Y+1	; 0x01
    1a68:	48 2f       	mov	r20, r24
    1a6a:	50 e0       	ldi	r21, 0x00	; 0
    1a6c:	ca 01       	movw	r24, r20
    1a6e:	88 0f       	add	r24, r24
    1a70:	99 1f       	adc	r25, r25
    1a72:	9c 01       	movw	r18, r24
    1a74:	22 0f       	add	r18, r18
    1a76:	33 1f       	adc	r19, r19
    1a78:	22 0f       	add	r18, r18
    1a7a:	33 1f       	adc	r19, r19
    1a7c:	22 0f       	add	r18, r18
    1a7e:	33 1f       	adc	r19, r19
    1a80:	82 0f       	add	r24, r18
    1a82:	93 1f       	adc	r25, r19
    1a84:	9c 01       	movw	r18, r24
    1a86:	24 0f       	add	r18, r20
    1a88:	35 1f       	adc	r19, r21
    1a8a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a8c:	9c 81       	ldd	r25, Y+4	; 0x04
    1a8e:	fc 01       	movw	r30, r24
    1a90:	e2 0f       	add	r30, r18
    1a92:	f3 1f       	adc	r31, r19
    1a94:	80 89       	ldd	r24, Z+16	; 0x10
    1a96:	88 30       	cpi	r24, 0x08	; 8
    1a98:	08 f0       	brcs	.+2      	; 0x1a9c <Seven_Segment_enuInit+0x692>
    1a9a:	d6 c0       	rjmp	.+428    	; 0x1c48 <Seven_Segment_enuInit+0x83e>
				{

					/****************************************************************************************************************************************/
					/* Configure the common pin as output pin.                                                                                              */
					/****************************************************************************************************************************************/
					DIO_enuSetPinDirection( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Port,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Pin, DIO_OUTPUT_PIN);
    1a9c:	89 81       	ldd	r24, Y+1	; 0x01
    1a9e:	48 2f       	mov	r20, r24
    1aa0:	50 e0       	ldi	r21, 0x00	; 0
    1aa2:	ca 01       	movw	r24, r20
    1aa4:	88 0f       	add	r24, r24
    1aa6:	99 1f       	adc	r25, r25
    1aa8:	9c 01       	movw	r18, r24
    1aaa:	22 0f       	add	r18, r18
    1aac:	33 1f       	adc	r19, r19
    1aae:	22 0f       	add	r18, r18
    1ab0:	33 1f       	adc	r19, r19
    1ab2:	22 0f       	add	r18, r18
    1ab4:	33 1f       	adc	r19, r19
    1ab6:	82 0f       	add	r24, r18
    1ab8:	93 1f       	adc	r25, r19
    1aba:	9c 01       	movw	r18, r24
    1abc:	24 0f       	add	r18, r20
    1abe:	35 1f       	adc	r19, r21
    1ac0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ac2:	9c 81       	ldd	r25, Y+4	; 0x04
    1ac4:	fc 01       	movw	r30, r24
    1ac6:	e2 0f       	add	r30, r18
    1ac8:	f3 1f       	adc	r31, r19
    1aca:	67 85       	ldd	r22, Z+15	; 0x0f
    1acc:	89 81       	ldd	r24, Y+1	; 0x01
    1ace:	48 2f       	mov	r20, r24
    1ad0:	50 e0       	ldi	r21, 0x00	; 0
    1ad2:	ca 01       	movw	r24, r20
    1ad4:	88 0f       	add	r24, r24
    1ad6:	99 1f       	adc	r25, r25
    1ad8:	9c 01       	movw	r18, r24
    1ada:	22 0f       	add	r18, r18
    1adc:	33 1f       	adc	r19, r19
    1ade:	22 0f       	add	r18, r18
    1ae0:	33 1f       	adc	r19, r19
    1ae2:	22 0f       	add	r18, r18
    1ae4:	33 1f       	adc	r19, r19
    1ae6:	82 0f       	add	r24, r18
    1ae8:	93 1f       	adc	r25, r19
    1aea:	9c 01       	movw	r18, r24
    1aec:	24 0f       	add	r18, r20
    1aee:	35 1f       	adc	r19, r21
    1af0:	8b 81       	ldd	r24, Y+3	; 0x03
    1af2:	9c 81       	ldd	r25, Y+4	; 0x04
    1af4:	fc 01       	movw	r30, r24
    1af6:	e2 0f       	add	r30, r18
    1af8:	f3 1f       	adc	r31, r19
    1afa:	90 89       	ldd	r25, Z+16	; 0x10
    1afc:	86 2f       	mov	r24, r22
    1afe:	69 2f       	mov	r22, r25
    1b00:	41 e0       	ldi	r20, 0x01	; 1
    1b02:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <DIO_enuSetPinDirection>


					/****************************************************************************************************************************************/
					/* Configure the common pin Logic State as HIGH or LOW according to Seven Segment Type.                                                 */
					/****************************************************************************************************************************************/
					if ( (Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8Type) == COMMON_ANODE )
    1b06:	89 81       	ldd	r24, Y+1	; 0x01
    1b08:	48 2f       	mov	r20, r24
    1b0a:	50 e0       	ldi	r21, 0x00	; 0
    1b0c:	ca 01       	movw	r24, r20
    1b0e:	88 0f       	add	r24, r24
    1b10:	99 1f       	adc	r25, r25
    1b12:	9c 01       	movw	r18, r24
    1b14:	22 0f       	add	r18, r18
    1b16:	33 1f       	adc	r19, r19
    1b18:	22 0f       	add	r18, r18
    1b1a:	33 1f       	adc	r19, r19
    1b1c:	22 0f       	add	r18, r18
    1b1e:	33 1f       	adc	r19, r19
    1b20:	82 0f       	add	r24, r18
    1b22:	93 1f       	adc	r25, r19
    1b24:	9c 01       	movw	r18, r24
    1b26:	24 0f       	add	r18, r20
    1b28:	35 1f       	adc	r19, r21
    1b2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1b2c:	9c 81       	ldd	r25, Y+4	; 0x04
    1b2e:	fc 01       	movw	r30, r24
    1b30:	e2 0f       	add	r30, r18
    1b32:	f3 1f       	adc	r31, r19
    1b34:	80 81       	ld	r24, Z
    1b36:	81 30       	cpi	r24, 0x01	; 1
    1b38:	b1 f5       	brne	.+108    	; 0x1ba6 <Seven_Segment_enuInit+0x79c>
					{
						DIO_enuSetPinValue(Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Port,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Pin,DIO_HIGH);
    1b3a:	89 81       	ldd	r24, Y+1	; 0x01
    1b3c:	48 2f       	mov	r20, r24
    1b3e:	50 e0       	ldi	r21, 0x00	; 0
    1b40:	ca 01       	movw	r24, r20
    1b42:	88 0f       	add	r24, r24
    1b44:	99 1f       	adc	r25, r25
    1b46:	9c 01       	movw	r18, r24
    1b48:	22 0f       	add	r18, r18
    1b4a:	33 1f       	adc	r19, r19
    1b4c:	22 0f       	add	r18, r18
    1b4e:	33 1f       	adc	r19, r19
    1b50:	22 0f       	add	r18, r18
    1b52:	33 1f       	adc	r19, r19
    1b54:	82 0f       	add	r24, r18
    1b56:	93 1f       	adc	r25, r19
    1b58:	9c 01       	movw	r18, r24
    1b5a:	24 0f       	add	r18, r20
    1b5c:	35 1f       	adc	r19, r21
    1b5e:	8b 81       	ldd	r24, Y+3	; 0x03
    1b60:	9c 81       	ldd	r25, Y+4	; 0x04
    1b62:	fc 01       	movw	r30, r24
    1b64:	e2 0f       	add	r30, r18
    1b66:	f3 1f       	adc	r31, r19
    1b68:	67 85       	ldd	r22, Z+15	; 0x0f
    1b6a:	89 81       	ldd	r24, Y+1	; 0x01
    1b6c:	48 2f       	mov	r20, r24
    1b6e:	50 e0       	ldi	r21, 0x00	; 0
    1b70:	ca 01       	movw	r24, r20
    1b72:	88 0f       	add	r24, r24
    1b74:	99 1f       	adc	r25, r25
    1b76:	9c 01       	movw	r18, r24
    1b78:	22 0f       	add	r18, r18
    1b7a:	33 1f       	adc	r19, r19
    1b7c:	22 0f       	add	r18, r18
    1b7e:	33 1f       	adc	r19, r19
    1b80:	22 0f       	add	r18, r18
    1b82:	33 1f       	adc	r19, r19
    1b84:	82 0f       	add	r24, r18
    1b86:	93 1f       	adc	r25, r19
    1b88:	9c 01       	movw	r18, r24
    1b8a:	24 0f       	add	r18, r20
    1b8c:	35 1f       	adc	r19, r21
    1b8e:	8b 81       	ldd	r24, Y+3	; 0x03
    1b90:	9c 81       	ldd	r25, Y+4	; 0x04
    1b92:	fc 01       	movw	r30, r24
    1b94:	e2 0f       	add	r30, r18
    1b96:	f3 1f       	adc	r31, r19
    1b98:	90 89       	ldd	r25, Z+16	; 0x10
    1b9a:	86 2f       	mov	r24, r22
    1b9c:	69 2f       	mov	r22, r25
    1b9e:	41 e0       	ldi	r20, 0x01	; 1
    1ba0:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    1ba4:	1e c3       	rjmp	.+1596   	; 0x21e2 <Seven_Segment_enuInit+0xdd8>
					}
					else if ( (Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8Type) == COMMON_CATHOD )
    1ba6:	89 81       	ldd	r24, Y+1	; 0x01
    1ba8:	48 2f       	mov	r20, r24
    1baa:	50 e0       	ldi	r21, 0x00	; 0
    1bac:	ca 01       	movw	r24, r20
    1bae:	88 0f       	add	r24, r24
    1bb0:	99 1f       	adc	r25, r25
    1bb2:	9c 01       	movw	r18, r24
    1bb4:	22 0f       	add	r18, r18
    1bb6:	33 1f       	adc	r19, r19
    1bb8:	22 0f       	add	r18, r18
    1bba:	33 1f       	adc	r19, r19
    1bbc:	22 0f       	add	r18, r18
    1bbe:	33 1f       	adc	r19, r19
    1bc0:	82 0f       	add	r24, r18
    1bc2:	93 1f       	adc	r25, r19
    1bc4:	9c 01       	movw	r18, r24
    1bc6:	24 0f       	add	r18, r20
    1bc8:	35 1f       	adc	r19, r21
    1bca:	8b 81       	ldd	r24, Y+3	; 0x03
    1bcc:	9c 81       	ldd	r25, Y+4	; 0x04
    1bce:	fc 01       	movw	r30, r24
    1bd0:	e2 0f       	add	r30, r18
    1bd2:	f3 1f       	adc	r31, r19
    1bd4:	80 81       	ld	r24, Z
    1bd6:	88 23       	and	r24, r24
    1bd8:	09 f0       	breq	.+2      	; 0x1bdc <Seven_Segment_enuInit+0x7d2>
    1bda:	03 c3       	rjmp	.+1542   	; 0x21e2 <Seven_Segment_enuInit+0xdd8>
					{
						DIO_enuSetPinValue(Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Port,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Pin,DIO_LOW);
    1bdc:	89 81       	ldd	r24, Y+1	; 0x01
    1bde:	48 2f       	mov	r20, r24
    1be0:	50 e0       	ldi	r21, 0x00	; 0
    1be2:	ca 01       	movw	r24, r20
    1be4:	88 0f       	add	r24, r24
    1be6:	99 1f       	adc	r25, r25
    1be8:	9c 01       	movw	r18, r24
    1bea:	22 0f       	add	r18, r18
    1bec:	33 1f       	adc	r19, r19
    1bee:	22 0f       	add	r18, r18
    1bf0:	33 1f       	adc	r19, r19
    1bf2:	22 0f       	add	r18, r18
    1bf4:	33 1f       	adc	r19, r19
    1bf6:	82 0f       	add	r24, r18
    1bf8:	93 1f       	adc	r25, r19
    1bfa:	9c 01       	movw	r18, r24
    1bfc:	24 0f       	add	r18, r20
    1bfe:	35 1f       	adc	r19, r21
    1c00:	8b 81       	ldd	r24, Y+3	; 0x03
    1c02:	9c 81       	ldd	r25, Y+4	; 0x04
    1c04:	fc 01       	movw	r30, r24
    1c06:	e2 0f       	add	r30, r18
    1c08:	f3 1f       	adc	r31, r19
    1c0a:	67 85       	ldd	r22, Z+15	; 0x0f
    1c0c:	89 81       	ldd	r24, Y+1	; 0x01
    1c0e:	48 2f       	mov	r20, r24
    1c10:	50 e0       	ldi	r21, 0x00	; 0
    1c12:	ca 01       	movw	r24, r20
    1c14:	88 0f       	add	r24, r24
    1c16:	99 1f       	adc	r25, r25
    1c18:	9c 01       	movw	r18, r24
    1c1a:	22 0f       	add	r18, r18
    1c1c:	33 1f       	adc	r19, r19
    1c1e:	22 0f       	add	r18, r18
    1c20:	33 1f       	adc	r19, r19
    1c22:	22 0f       	add	r18, r18
    1c24:	33 1f       	adc	r19, r19
    1c26:	82 0f       	add	r24, r18
    1c28:	93 1f       	adc	r25, r19
    1c2a:	9c 01       	movw	r18, r24
    1c2c:	24 0f       	add	r18, r20
    1c2e:	35 1f       	adc	r19, r21
    1c30:	8b 81       	ldd	r24, Y+3	; 0x03
    1c32:	9c 81       	ldd	r25, Y+4	; 0x04
    1c34:	fc 01       	movw	r30, r24
    1c36:	e2 0f       	add	r30, r18
    1c38:	f3 1f       	adc	r31, r19
    1c3a:	90 89       	ldd	r25, Z+16	; 0x10
    1c3c:	86 2f       	mov	r24, r22
    1c3e:	69 2f       	mov	r22, r25
    1c40:	40 e0       	ldi	r20, 0x00	; 0
    1c42:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    1c46:	cd c2       	rjmp	.+1434   	; 0x21e2 <Seven_Segment_enuInit+0xdd8>
				}

				/************************************************************************************************************************************************************/
				/* The mcu Does not support pin to to Seven segment common pin .                                                                                            */
				/************************************************************************************************************************************************************/
				else if ( ( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Port == NOT_CONNECTED  ) || (Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Pin  == NOT_CONNECTED) )
    1c48:	89 81       	ldd	r24, Y+1	; 0x01
    1c4a:	48 2f       	mov	r20, r24
    1c4c:	50 e0       	ldi	r21, 0x00	; 0
    1c4e:	ca 01       	movw	r24, r20
    1c50:	88 0f       	add	r24, r24
    1c52:	99 1f       	adc	r25, r25
    1c54:	9c 01       	movw	r18, r24
    1c56:	22 0f       	add	r18, r18
    1c58:	33 1f       	adc	r19, r19
    1c5a:	22 0f       	add	r18, r18
    1c5c:	33 1f       	adc	r19, r19
    1c5e:	22 0f       	add	r18, r18
    1c60:	33 1f       	adc	r19, r19
    1c62:	82 0f       	add	r24, r18
    1c64:	93 1f       	adc	r25, r19
    1c66:	9c 01       	movw	r18, r24
    1c68:	24 0f       	add	r18, r20
    1c6a:	35 1f       	adc	r19, r21
    1c6c:	8b 81       	ldd	r24, Y+3	; 0x03
    1c6e:	9c 81       	ldd	r25, Y+4	; 0x04
    1c70:	fc 01       	movw	r30, r24
    1c72:	e2 0f       	add	r30, r18
    1c74:	f3 1f       	adc	r31, r19
    1c76:	87 85       	ldd	r24, Z+15	; 0x0f
    1c78:	81 30       	cpi	r24, 0x01	; 1
    1c7a:	09 f4       	brne	.+2      	; 0x1c7e <Seven_Segment_enuInit+0x874>
    1c7c:	b2 c2       	rjmp	.+1380   	; 0x21e2 <Seven_Segment_enuInit+0xdd8>
    1c7e:	89 81       	ldd	r24, Y+1	; 0x01
    1c80:	88 2f       	mov	r24, r24
    1c82:	90 e0       	ldi	r25, 0x00	; 0
    1c84:	9c 01       	movw	r18, r24
    1c86:	22 0f       	add	r18, r18
    1c88:	33 1f       	adc	r19, r19
    1c8a:	3e 83       	std	Y+6, r19	; 0x06
    1c8c:	2d 83       	std	Y+5, r18	; 0x05
    1c8e:	8d 81       	ldd	r24, Y+5	; 0x05
    1c90:	9e 81       	ldd	r25, Y+6	; 0x06
    1c92:	88 0f       	add	r24, r24
    1c94:	99 1f       	adc	r25, r25
    1c96:	88 0f       	add	r24, r24
    1c98:	99 1f       	adc	r25, r25
    1c9a:	88 0f       	add	r24, r24
    1c9c:	99 1f       	adc	r25, r25
    1c9e:	2d 81       	ldd	r18, Y+5	; 0x05
    1ca0:	3e 81       	ldd	r19, Y+6	; 0x06
    1ca2:	28 0f       	add	r18, r24
    1ca4:	39 1f       	adc	r19, r25
    1ca6:	9d c2       	rjmp	.+1338   	; 0x21e2 <Seven_Segment_enuInit+0xdd8>




			}
			else if ((Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8Type) == COMMON_CATHOD)
    1ca8:	89 81       	ldd	r24, Y+1	; 0x01
    1caa:	48 2f       	mov	r20, r24
    1cac:	50 e0       	ldi	r21, 0x00	; 0
    1cae:	ca 01       	movw	r24, r20
    1cb0:	88 0f       	add	r24, r24
    1cb2:	99 1f       	adc	r25, r25
    1cb4:	9c 01       	movw	r18, r24
    1cb6:	22 0f       	add	r18, r18
    1cb8:	33 1f       	adc	r19, r19
    1cba:	22 0f       	add	r18, r18
    1cbc:	33 1f       	adc	r19, r19
    1cbe:	22 0f       	add	r18, r18
    1cc0:	33 1f       	adc	r19, r19
    1cc2:	82 0f       	add	r24, r18
    1cc4:	93 1f       	adc	r25, r19
    1cc6:	9c 01       	movw	r18, r24
    1cc8:	24 0f       	add	r18, r20
    1cca:	35 1f       	adc	r19, r21
    1ccc:	8b 81       	ldd	r24, Y+3	; 0x03
    1cce:	9c 81       	ldd	r25, Y+4	; 0x04
    1cd0:	fc 01       	movw	r30, r24
    1cd2:	e2 0f       	add	r30, r18
    1cd4:	f3 1f       	adc	r31, r19
    1cd6:	80 81       	ld	r24, Z
    1cd8:	88 23       	and	r24, r24
    1cda:	09 f0       	breq	.+2      	; 0x1cde <Seven_Segment_enuInit+0x8d4>
    1cdc:	80 c2       	rjmp	.+1280   	; 0x21de <Seven_Segment_enuInit+0xdd4>
			{



				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegA_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegA_Pin,DIO_LOW);
    1cde:	89 81       	ldd	r24, Y+1	; 0x01
    1ce0:	48 2f       	mov	r20, r24
    1ce2:	50 e0       	ldi	r21, 0x00	; 0
    1ce4:	ca 01       	movw	r24, r20
    1ce6:	88 0f       	add	r24, r24
    1ce8:	99 1f       	adc	r25, r25
    1cea:	9c 01       	movw	r18, r24
    1cec:	22 0f       	add	r18, r18
    1cee:	33 1f       	adc	r19, r19
    1cf0:	22 0f       	add	r18, r18
    1cf2:	33 1f       	adc	r19, r19
    1cf4:	22 0f       	add	r18, r18
    1cf6:	33 1f       	adc	r19, r19
    1cf8:	82 0f       	add	r24, r18
    1cfa:	93 1f       	adc	r25, r19
    1cfc:	9c 01       	movw	r18, r24
    1cfe:	24 0f       	add	r18, r20
    1d00:	35 1f       	adc	r19, r21
    1d02:	8b 81       	ldd	r24, Y+3	; 0x03
    1d04:	9c 81       	ldd	r25, Y+4	; 0x04
    1d06:	fc 01       	movw	r30, r24
    1d08:	e2 0f       	add	r30, r18
    1d0a:	f3 1f       	adc	r31, r19
    1d0c:	61 81       	ldd	r22, Z+1	; 0x01
    1d0e:	89 81       	ldd	r24, Y+1	; 0x01
    1d10:	48 2f       	mov	r20, r24
    1d12:	50 e0       	ldi	r21, 0x00	; 0
    1d14:	ca 01       	movw	r24, r20
    1d16:	88 0f       	add	r24, r24
    1d18:	99 1f       	adc	r25, r25
    1d1a:	9c 01       	movw	r18, r24
    1d1c:	22 0f       	add	r18, r18
    1d1e:	33 1f       	adc	r19, r19
    1d20:	22 0f       	add	r18, r18
    1d22:	33 1f       	adc	r19, r19
    1d24:	22 0f       	add	r18, r18
    1d26:	33 1f       	adc	r19, r19
    1d28:	82 0f       	add	r24, r18
    1d2a:	93 1f       	adc	r25, r19
    1d2c:	9c 01       	movw	r18, r24
    1d2e:	24 0f       	add	r18, r20
    1d30:	35 1f       	adc	r19, r21
    1d32:	8b 81       	ldd	r24, Y+3	; 0x03
    1d34:	9c 81       	ldd	r25, Y+4	; 0x04
    1d36:	fc 01       	movw	r30, r24
    1d38:	e2 0f       	add	r30, r18
    1d3a:	f3 1f       	adc	r31, r19
    1d3c:	92 81       	ldd	r25, Z+2	; 0x02
    1d3e:	86 2f       	mov	r24, r22
    1d40:	69 2f       	mov	r22, r25
    1d42:	40 e0       	ldi	r20, 0x00	; 0
    1d44:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegB_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegB_Pin,DIO_LOW);
    1d48:	89 81       	ldd	r24, Y+1	; 0x01
    1d4a:	48 2f       	mov	r20, r24
    1d4c:	50 e0       	ldi	r21, 0x00	; 0
    1d4e:	ca 01       	movw	r24, r20
    1d50:	88 0f       	add	r24, r24
    1d52:	99 1f       	adc	r25, r25
    1d54:	9c 01       	movw	r18, r24
    1d56:	22 0f       	add	r18, r18
    1d58:	33 1f       	adc	r19, r19
    1d5a:	22 0f       	add	r18, r18
    1d5c:	33 1f       	adc	r19, r19
    1d5e:	22 0f       	add	r18, r18
    1d60:	33 1f       	adc	r19, r19
    1d62:	82 0f       	add	r24, r18
    1d64:	93 1f       	adc	r25, r19
    1d66:	9c 01       	movw	r18, r24
    1d68:	24 0f       	add	r18, r20
    1d6a:	35 1f       	adc	r19, r21
    1d6c:	8b 81       	ldd	r24, Y+3	; 0x03
    1d6e:	9c 81       	ldd	r25, Y+4	; 0x04
    1d70:	fc 01       	movw	r30, r24
    1d72:	e2 0f       	add	r30, r18
    1d74:	f3 1f       	adc	r31, r19
    1d76:	63 81       	ldd	r22, Z+3	; 0x03
    1d78:	89 81       	ldd	r24, Y+1	; 0x01
    1d7a:	48 2f       	mov	r20, r24
    1d7c:	50 e0       	ldi	r21, 0x00	; 0
    1d7e:	ca 01       	movw	r24, r20
    1d80:	88 0f       	add	r24, r24
    1d82:	99 1f       	adc	r25, r25
    1d84:	9c 01       	movw	r18, r24
    1d86:	22 0f       	add	r18, r18
    1d88:	33 1f       	adc	r19, r19
    1d8a:	22 0f       	add	r18, r18
    1d8c:	33 1f       	adc	r19, r19
    1d8e:	22 0f       	add	r18, r18
    1d90:	33 1f       	adc	r19, r19
    1d92:	82 0f       	add	r24, r18
    1d94:	93 1f       	adc	r25, r19
    1d96:	9c 01       	movw	r18, r24
    1d98:	24 0f       	add	r18, r20
    1d9a:	35 1f       	adc	r19, r21
    1d9c:	8b 81       	ldd	r24, Y+3	; 0x03
    1d9e:	9c 81       	ldd	r25, Y+4	; 0x04
    1da0:	fc 01       	movw	r30, r24
    1da2:	e2 0f       	add	r30, r18
    1da4:	f3 1f       	adc	r31, r19
    1da6:	94 81       	ldd	r25, Z+4	; 0x04
    1da8:	86 2f       	mov	r24, r22
    1daa:	69 2f       	mov	r22, r25
    1dac:	40 e0       	ldi	r20, 0x00	; 0
    1dae:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegC_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegC_Pin,DIO_LOW);
    1db2:	89 81       	ldd	r24, Y+1	; 0x01
    1db4:	48 2f       	mov	r20, r24
    1db6:	50 e0       	ldi	r21, 0x00	; 0
    1db8:	ca 01       	movw	r24, r20
    1dba:	88 0f       	add	r24, r24
    1dbc:	99 1f       	adc	r25, r25
    1dbe:	9c 01       	movw	r18, r24
    1dc0:	22 0f       	add	r18, r18
    1dc2:	33 1f       	adc	r19, r19
    1dc4:	22 0f       	add	r18, r18
    1dc6:	33 1f       	adc	r19, r19
    1dc8:	22 0f       	add	r18, r18
    1dca:	33 1f       	adc	r19, r19
    1dcc:	82 0f       	add	r24, r18
    1dce:	93 1f       	adc	r25, r19
    1dd0:	9c 01       	movw	r18, r24
    1dd2:	24 0f       	add	r18, r20
    1dd4:	35 1f       	adc	r19, r21
    1dd6:	8b 81       	ldd	r24, Y+3	; 0x03
    1dd8:	9c 81       	ldd	r25, Y+4	; 0x04
    1dda:	fc 01       	movw	r30, r24
    1ddc:	e2 0f       	add	r30, r18
    1dde:	f3 1f       	adc	r31, r19
    1de0:	65 81       	ldd	r22, Z+5	; 0x05
    1de2:	89 81       	ldd	r24, Y+1	; 0x01
    1de4:	48 2f       	mov	r20, r24
    1de6:	50 e0       	ldi	r21, 0x00	; 0
    1de8:	ca 01       	movw	r24, r20
    1dea:	88 0f       	add	r24, r24
    1dec:	99 1f       	adc	r25, r25
    1dee:	9c 01       	movw	r18, r24
    1df0:	22 0f       	add	r18, r18
    1df2:	33 1f       	adc	r19, r19
    1df4:	22 0f       	add	r18, r18
    1df6:	33 1f       	adc	r19, r19
    1df8:	22 0f       	add	r18, r18
    1dfa:	33 1f       	adc	r19, r19
    1dfc:	82 0f       	add	r24, r18
    1dfe:	93 1f       	adc	r25, r19
    1e00:	9c 01       	movw	r18, r24
    1e02:	24 0f       	add	r18, r20
    1e04:	35 1f       	adc	r19, r21
    1e06:	8b 81       	ldd	r24, Y+3	; 0x03
    1e08:	9c 81       	ldd	r25, Y+4	; 0x04
    1e0a:	fc 01       	movw	r30, r24
    1e0c:	e2 0f       	add	r30, r18
    1e0e:	f3 1f       	adc	r31, r19
    1e10:	96 81       	ldd	r25, Z+6	; 0x06
    1e12:	86 2f       	mov	r24, r22
    1e14:	69 2f       	mov	r22, r25
    1e16:	40 e0       	ldi	r20, 0x00	; 0
    1e18:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegD_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegD_Pin,DIO_LOW);
    1e1c:	89 81       	ldd	r24, Y+1	; 0x01
    1e1e:	48 2f       	mov	r20, r24
    1e20:	50 e0       	ldi	r21, 0x00	; 0
    1e22:	ca 01       	movw	r24, r20
    1e24:	88 0f       	add	r24, r24
    1e26:	99 1f       	adc	r25, r25
    1e28:	9c 01       	movw	r18, r24
    1e2a:	22 0f       	add	r18, r18
    1e2c:	33 1f       	adc	r19, r19
    1e2e:	22 0f       	add	r18, r18
    1e30:	33 1f       	adc	r19, r19
    1e32:	22 0f       	add	r18, r18
    1e34:	33 1f       	adc	r19, r19
    1e36:	82 0f       	add	r24, r18
    1e38:	93 1f       	adc	r25, r19
    1e3a:	9c 01       	movw	r18, r24
    1e3c:	24 0f       	add	r18, r20
    1e3e:	35 1f       	adc	r19, r21
    1e40:	8b 81       	ldd	r24, Y+3	; 0x03
    1e42:	9c 81       	ldd	r25, Y+4	; 0x04
    1e44:	fc 01       	movw	r30, r24
    1e46:	e2 0f       	add	r30, r18
    1e48:	f3 1f       	adc	r31, r19
    1e4a:	67 81       	ldd	r22, Z+7	; 0x07
    1e4c:	89 81       	ldd	r24, Y+1	; 0x01
    1e4e:	48 2f       	mov	r20, r24
    1e50:	50 e0       	ldi	r21, 0x00	; 0
    1e52:	ca 01       	movw	r24, r20
    1e54:	88 0f       	add	r24, r24
    1e56:	99 1f       	adc	r25, r25
    1e58:	9c 01       	movw	r18, r24
    1e5a:	22 0f       	add	r18, r18
    1e5c:	33 1f       	adc	r19, r19
    1e5e:	22 0f       	add	r18, r18
    1e60:	33 1f       	adc	r19, r19
    1e62:	22 0f       	add	r18, r18
    1e64:	33 1f       	adc	r19, r19
    1e66:	82 0f       	add	r24, r18
    1e68:	93 1f       	adc	r25, r19
    1e6a:	9c 01       	movw	r18, r24
    1e6c:	24 0f       	add	r18, r20
    1e6e:	35 1f       	adc	r19, r21
    1e70:	8b 81       	ldd	r24, Y+3	; 0x03
    1e72:	9c 81       	ldd	r25, Y+4	; 0x04
    1e74:	fc 01       	movw	r30, r24
    1e76:	e2 0f       	add	r30, r18
    1e78:	f3 1f       	adc	r31, r19
    1e7a:	90 85       	ldd	r25, Z+8	; 0x08
    1e7c:	86 2f       	mov	r24, r22
    1e7e:	69 2f       	mov	r22, r25
    1e80:	40 e0       	ldi	r20, 0x00	; 0
    1e82:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegE_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegE_Pin,DIO_LOW);
    1e86:	89 81       	ldd	r24, Y+1	; 0x01
    1e88:	48 2f       	mov	r20, r24
    1e8a:	50 e0       	ldi	r21, 0x00	; 0
    1e8c:	ca 01       	movw	r24, r20
    1e8e:	88 0f       	add	r24, r24
    1e90:	99 1f       	adc	r25, r25
    1e92:	9c 01       	movw	r18, r24
    1e94:	22 0f       	add	r18, r18
    1e96:	33 1f       	adc	r19, r19
    1e98:	22 0f       	add	r18, r18
    1e9a:	33 1f       	adc	r19, r19
    1e9c:	22 0f       	add	r18, r18
    1e9e:	33 1f       	adc	r19, r19
    1ea0:	82 0f       	add	r24, r18
    1ea2:	93 1f       	adc	r25, r19
    1ea4:	9c 01       	movw	r18, r24
    1ea6:	24 0f       	add	r18, r20
    1ea8:	35 1f       	adc	r19, r21
    1eaa:	8b 81       	ldd	r24, Y+3	; 0x03
    1eac:	9c 81       	ldd	r25, Y+4	; 0x04
    1eae:	fc 01       	movw	r30, r24
    1eb0:	e2 0f       	add	r30, r18
    1eb2:	f3 1f       	adc	r31, r19
    1eb4:	61 85       	ldd	r22, Z+9	; 0x09
    1eb6:	89 81       	ldd	r24, Y+1	; 0x01
    1eb8:	48 2f       	mov	r20, r24
    1eba:	50 e0       	ldi	r21, 0x00	; 0
    1ebc:	ca 01       	movw	r24, r20
    1ebe:	88 0f       	add	r24, r24
    1ec0:	99 1f       	adc	r25, r25
    1ec2:	9c 01       	movw	r18, r24
    1ec4:	22 0f       	add	r18, r18
    1ec6:	33 1f       	adc	r19, r19
    1ec8:	22 0f       	add	r18, r18
    1eca:	33 1f       	adc	r19, r19
    1ecc:	22 0f       	add	r18, r18
    1ece:	33 1f       	adc	r19, r19
    1ed0:	82 0f       	add	r24, r18
    1ed2:	93 1f       	adc	r25, r19
    1ed4:	9c 01       	movw	r18, r24
    1ed6:	24 0f       	add	r18, r20
    1ed8:	35 1f       	adc	r19, r21
    1eda:	8b 81       	ldd	r24, Y+3	; 0x03
    1edc:	9c 81       	ldd	r25, Y+4	; 0x04
    1ede:	fc 01       	movw	r30, r24
    1ee0:	e2 0f       	add	r30, r18
    1ee2:	f3 1f       	adc	r31, r19
    1ee4:	92 85       	ldd	r25, Z+10	; 0x0a
    1ee6:	86 2f       	mov	r24, r22
    1ee8:	69 2f       	mov	r22, r25
    1eea:	40 e0       	ldi	r20, 0x00	; 0
    1eec:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegF_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegF_Pin,DIO_LOW);
    1ef0:	89 81       	ldd	r24, Y+1	; 0x01
    1ef2:	48 2f       	mov	r20, r24
    1ef4:	50 e0       	ldi	r21, 0x00	; 0
    1ef6:	ca 01       	movw	r24, r20
    1ef8:	88 0f       	add	r24, r24
    1efa:	99 1f       	adc	r25, r25
    1efc:	9c 01       	movw	r18, r24
    1efe:	22 0f       	add	r18, r18
    1f00:	33 1f       	adc	r19, r19
    1f02:	22 0f       	add	r18, r18
    1f04:	33 1f       	adc	r19, r19
    1f06:	22 0f       	add	r18, r18
    1f08:	33 1f       	adc	r19, r19
    1f0a:	82 0f       	add	r24, r18
    1f0c:	93 1f       	adc	r25, r19
    1f0e:	9c 01       	movw	r18, r24
    1f10:	24 0f       	add	r18, r20
    1f12:	35 1f       	adc	r19, r21
    1f14:	8b 81       	ldd	r24, Y+3	; 0x03
    1f16:	9c 81       	ldd	r25, Y+4	; 0x04
    1f18:	fc 01       	movw	r30, r24
    1f1a:	e2 0f       	add	r30, r18
    1f1c:	f3 1f       	adc	r31, r19
    1f1e:	63 85       	ldd	r22, Z+11	; 0x0b
    1f20:	89 81       	ldd	r24, Y+1	; 0x01
    1f22:	48 2f       	mov	r20, r24
    1f24:	50 e0       	ldi	r21, 0x00	; 0
    1f26:	ca 01       	movw	r24, r20
    1f28:	88 0f       	add	r24, r24
    1f2a:	99 1f       	adc	r25, r25
    1f2c:	9c 01       	movw	r18, r24
    1f2e:	22 0f       	add	r18, r18
    1f30:	33 1f       	adc	r19, r19
    1f32:	22 0f       	add	r18, r18
    1f34:	33 1f       	adc	r19, r19
    1f36:	22 0f       	add	r18, r18
    1f38:	33 1f       	adc	r19, r19
    1f3a:	82 0f       	add	r24, r18
    1f3c:	93 1f       	adc	r25, r19
    1f3e:	9c 01       	movw	r18, r24
    1f40:	24 0f       	add	r18, r20
    1f42:	35 1f       	adc	r19, r21
    1f44:	8b 81       	ldd	r24, Y+3	; 0x03
    1f46:	9c 81       	ldd	r25, Y+4	; 0x04
    1f48:	fc 01       	movw	r30, r24
    1f4a:	e2 0f       	add	r30, r18
    1f4c:	f3 1f       	adc	r31, r19
    1f4e:	94 85       	ldd	r25, Z+12	; 0x0c
    1f50:	86 2f       	mov	r24, r22
    1f52:	69 2f       	mov	r22, r25
    1f54:	40 e0       	ldi	r20, 0x00	; 0
    1f56:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegG_Port ,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegG_Pin,DIO_LOW);
    1f5a:	89 81       	ldd	r24, Y+1	; 0x01
    1f5c:	48 2f       	mov	r20, r24
    1f5e:	50 e0       	ldi	r21, 0x00	; 0
    1f60:	ca 01       	movw	r24, r20
    1f62:	88 0f       	add	r24, r24
    1f64:	99 1f       	adc	r25, r25
    1f66:	9c 01       	movw	r18, r24
    1f68:	22 0f       	add	r18, r18
    1f6a:	33 1f       	adc	r19, r19
    1f6c:	22 0f       	add	r18, r18
    1f6e:	33 1f       	adc	r19, r19
    1f70:	22 0f       	add	r18, r18
    1f72:	33 1f       	adc	r19, r19
    1f74:	82 0f       	add	r24, r18
    1f76:	93 1f       	adc	r25, r19
    1f78:	9c 01       	movw	r18, r24
    1f7a:	24 0f       	add	r18, r20
    1f7c:	35 1f       	adc	r19, r21
    1f7e:	8b 81       	ldd	r24, Y+3	; 0x03
    1f80:	9c 81       	ldd	r25, Y+4	; 0x04
    1f82:	fc 01       	movw	r30, r24
    1f84:	e2 0f       	add	r30, r18
    1f86:	f3 1f       	adc	r31, r19
    1f88:	65 85       	ldd	r22, Z+13	; 0x0d
    1f8a:	89 81       	ldd	r24, Y+1	; 0x01
    1f8c:	48 2f       	mov	r20, r24
    1f8e:	50 e0       	ldi	r21, 0x00	; 0
    1f90:	ca 01       	movw	r24, r20
    1f92:	88 0f       	add	r24, r24
    1f94:	99 1f       	adc	r25, r25
    1f96:	9c 01       	movw	r18, r24
    1f98:	22 0f       	add	r18, r18
    1f9a:	33 1f       	adc	r19, r19
    1f9c:	22 0f       	add	r18, r18
    1f9e:	33 1f       	adc	r19, r19
    1fa0:	22 0f       	add	r18, r18
    1fa2:	33 1f       	adc	r19, r19
    1fa4:	82 0f       	add	r24, r18
    1fa6:	93 1f       	adc	r25, r19
    1fa8:	9c 01       	movw	r18, r24
    1faa:	24 0f       	add	r18, r20
    1fac:	35 1f       	adc	r19, r21
    1fae:	8b 81       	ldd	r24, Y+3	; 0x03
    1fb0:	9c 81       	ldd	r25, Y+4	; 0x04
    1fb2:	fc 01       	movw	r30, r24
    1fb4:	e2 0f       	add	r30, r18
    1fb6:	f3 1f       	adc	r31, r19
    1fb8:	96 85       	ldd	r25, Z+14	; 0x0e
    1fba:	86 2f       	mov	r24, r22
    1fbc:	69 2f       	mov	r22, r25
    1fbe:	40 e0       	ldi	r20, 0x00	; 0
    1fc0:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				/**************************************************** Common Pin Scenarios Handling *********************************************************/

				/********************************************************************************************************************************************/
				/* Checking and Handling if there a dedicated pin to Common line scenario .                                                                 */
				/********************************************************************************************************************************************/
				if( ( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Port  <= DIO_PORTD ) && (Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Pin  <= DIO_PIN7) )
    1fc4:	89 81       	ldd	r24, Y+1	; 0x01
    1fc6:	48 2f       	mov	r20, r24
    1fc8:	50 e0       	ldi	r21, 0x00	; 0
    1fca:	ca 01       	movw	r24, r20
    1fcc:	88 0f       	add	r24, r24
    1fce:	99 1f       	adc	r25, r25
    1fd0:	9c 01       	movw	r18, r24
    1fd2:	22 0f       	add	r18, r18
    1fd4:	33 1f       	adc	r19, r19
    1fd6:	22 0f       	add	r18, r18
    1fd8:	33 1f       	adc	r19, r19
    1fda:	22 0f       	add	r18, r18
    1fdc:	33 1f       	adc	r19, r19
    1fde:	82 0f       	add	r24, r18
    1fe0:	93 1f       	adc	r25, r19
    1fe2:	9c 01       	movw	r18, r24
    1fe4:	24 0f       	add	r18, r20
    1fe6:	35 1f       	adc	r19, r21
    1fe8:	8b 81       	ldd	r24, Y+3	; 0x03
    1fea:	9c 81       	ldd	r25, Y+4	; 0x04
    1fec:	fc 01       	movw	r30, r24
    1fee:	e2 0f       	add	r30, r18
    1ff0:	f3 1f       	adc	r31, r19
    1ff2:	87 85       	ldd	r24, Z+15	; 0x0f
    1ff4:	84 30       	cpi	r24, 0x04	; 4
    1ff6:	08 f0       	brcs	.+2      	; 0x1ffa <Seven_Segment_enuInit+0xbf0>
    1ff8:	ef c0       	rjmp	.+478    	; 0x21d8 <Seven_Segment_enuInit+0xdce>
    1ffa:	89 81       	ldd	r24, Y+1	; 0x01
    1ffc:	48 2f       	mov	r20, r24
    1ffe:	50 e0       	ldi	r21, 0x00	; 0
    2000:	ca 01       	movw	r24, r20
    2002:	88 0f       	add	r24, r24
    2004:	99 1f       	adc	r25, r25
    2006:	9c 01       	movw	r18, r24
    2008:	22 0f       	add	r18, r18
    200a:	33 1f       	adc	r19, r19
    200c:	22 0f       	add	r18, r18
    200e:	33 1f       	adc	r19, r19
    2010:	22 0f       	add	r18, r18
    2012:	33 1f       	adc	r19, r19
    2014:	82 0f       	add	r24, r18
    2016:	93 1f       	adc	r25, r19
    2018:	9c 01       	movw	r18, r24
    201a:	24 0f       	add	r18, r20
    201c:	35 1f       	adc	r19, r21
    201e:	8b 81       	ldd	r24, Y+3	; 0x03
    2020:	9c 81       	ldd	r25, Y+4	; 0x04
    2022:	fc 01       	movw	r30, r24
    2024:	e2 0f       	add	r30, r18
    2026:	f3 1f       	adc	r31, r19
    2028:	80 89       	ldd	r24, Z+16	; 0x10
    202a:	88 30       	cpi	r24, 0x08	; 8
    202c:	08 f0       	brcs	.+2      	; 0x2030 <Seven_Segment_enuInit+0xc26>
    202e:	d4 c0       	rjmp	.+424    	; 0x21d8 <Seven_Segment_enuInit+0xdce>
				{

					/****************************************************************************************************************************************/
					/* Configure the common pin as output pin.                                                                                              */
					/****************************************************************************************************************************************/
					DIO_enuSetPinDirection( Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Port,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Pin, DIO_OUTPUT_PIN);
    2030:	89 81       	ldd	r24, Y+1	; 0x01
    2032:	48 2f       	mov	r20, r24
    2034:	50 e0       	ldi	r21, 0x00	; 0
    2036:	ca 01       	movw	r24, r20
    2038:	88 0f       	add	r24, r24
    203a:	99 1f       	adc	r25, r25
    203c:	9c 01       	movw	r18, r24
    203e:	22 0f       	add	r18, r18
    2040:	33 1f       	adc	r19, r19
    2042:	22 0f       	add	r18, r18
    2044:	33 1f       	adc	r19, r19
    2046:	22 0f       	add	r18, r18
    2048:	33 1f       	adc	r19, r19
    204a:	82 0f       	add	r24, r18
    204c:	93 1f       	adc	r25, r19
    204e:	9c 01       	movw	r18, r24
    2050:	24 0f       	add	r18, r20
    2052:	35 1f       	adc	r19, r21
    2054:	8b 81       	ldd	r24, Y+3	; 0x03
    2056:	9c 81       	ldd	r25, Y+4	; 0x04
    2058:	fc 01       	movw	r30, r24
    205a:	e2 0f       	add	r30, r18
    205c:	f3 1f       	adc	r31, r19
    205e:	67 85       	ldd	r22, Z+15	; 0x0f
    2060:	89 81       	ldd	r24, Y+1	; 0x01
    2062:	48 2f       	mov	r20, r24
    2064:	50 e0       	ldi	r21, 0x00	; 0
    2066:	ca 01       	movw	r24, r20
    2068:	88 0f       	add	r24, r24
    206a:	99 1f       	adc	r25, r25
    206c:	9c 01       	movw	r18, r24
    206e:	22 0f       	add	r18, r18
    2070:	33 1f       	adc	r19, r19
    2072:	22 0f       	add	r18, r18
    2074:	33 1f       	adc	r19, r19
    2076:	22 0f       	add	r18, r18
    2078:	33 1f       	adc	r19, r19
    207a:	82 0f       	add	r24, r18
    207c:	93 1f       	adc	r25, r19
    207e:	9c 01       	movw	r18, r24
    2080:	24 0f       	add	r18, r20
    2082:	35 1f       	adc	r19, r21
    2084:	8b 81       	ldd	r24, Y+3	; 0x03
    2086:	9c 81       	ldd	r25, Y+4	; 0x04
    2088:	fc 01       	movw	r30, r24
    208a:	e2 0f       	add	r30, r18
    208c:	f3 1f       	adc	r31, r19
    208e:	90 89       	ldd	r25, Z+16	; 0x10
    2090:	86 2f       	mov	r24, r22
    2092:	69 2f       	mov	r22, r25
    2094:	41 e0       	ldi	r20, 0x01	; 1
    2096:	0e 94 eb 06 	call	0xdd6	; 0xdd6 <DIO_enuSetPinDirection>


					/****************************************************************************************************************************************/
					/* Configure the common pin Logic State as HIGH or LOW according to Seven Segment Type.                                                 */
					/****************************************************************************************************************************************/
					if ( (Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8Type) == COMMON_ANODE )
    209a:	89 81       	ldd	r24, Y+1	; 0x01
    209c:	48 2f       	mov	r20, r24
    209e:	50 e0       	ldi	r21, 0x00	; 0
    20a0:	ca 01       	movw	r24, r20
    20a2:	88 0f       	add	r24, r24
    20a4:	99 1f       	adc	r25, r25
    20a6:	9c 01       	movw	r18, r24
    20a8:	22 0f       	add	r18, r18
    20aa:	33 1f       	adc	r19, r19
    20ac:	22 0f       	add	r18, r18
    20ae:	33 1f       	adc	r19, r19
    20b0:	22 0f       	add	r18, r18
    20b2:	33 1f       	adc	r19, r19
    20b4:	82 0f       	add	r24, r18
    20b6:	93 1f       	adc	r25, r19
    20b8:	9c 01       	movw	r18, r24
    20ba:	24 0f       	add	r18, r20
    20bc:	35 1f       	adc	r19, r21
    20be:	8b 81       	ldd	r24, Y+3	; 0x03
    20c0:	9c 81       	ldd	r25, Y+4	; 0x04
    20c2:	fc 01       	movw	r30, r24
    20c4:	e2 0f       	add	r30, r18
    20c6:	f3 1f       	adc	r31, r19
    20c8:	80 81       	ld	r24, Z
    20ca:	81 30       	cpi	r24, 0x01	; 1
    20cc:	b1 f5       	brne	.+108    	; 0x213a <Seven_Segment_enuInit+0xd30>
					{
						DIO_enuSetPinValue(Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Port,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Pin,DIO_HIGH);
    20ce:	89 81       	ldd	r24, Y+1	; 0x01
    20d0:	48 2f       	mov	r20, r24
    20d2:	50 e0       	ldi	r21, 0x00	; 0
    20d4:	ca 01       	movw	r24, r20
    20d6:	88 0f       	add	r24, r24
    20d8:	99 1f       	adc	r25, r25
    20da:	9c 01       	movw	r18, r24
    20dc:	22 0f       	add	r18, r18
    20de:	33 1f       	adc	r19, r19
    20e0:	22 0f       	add	r18, r18
    20e2:	33 1f       	adc	r19, r19
    20e4:	22 0f       	add	r18, r18
    20e6:	33 1f       	adc	r19, r19
    20e8:	82 0f       	add	r24, r18
    20ea:	93 1f       	adc	r25, r19
    20ec:	9c 01       	movw	r18, r24
    20ee:	24 0f       	add	r18, r20
    20f0:	35 1f       	adc	r19, r21
    20f2:	8b 81       	ldd	r24, Y+3	; 0x03
    20f4:	9c 81       	ldd	r25, Y+4	; 0x04
    20f6:	fc 01       	movw	r30, r24
    20f8:	e2 0f       	add	r30, r18
    20fa:	f3 1f       	adc	r31, r19
    20fc:	67 85       	ldd	r22, Z+15	; 0x0f
    20fe:	89 81       	ldd	r24, Y+1	; 0x01
    2100:	48 2f       	mov	r20, r24
    2102:	50 e0       	ldi	r21, 0x00	; 0
    2104:	ca 01       	movw	r24, r20
    2106:	88 0f       	add	r24, r24
    2108:	99 1f       	adc	r25, r25
    210a:	9c 01       	movw	r18, r24
    210c:	22 0f       	add	r18, r18
    210e:	33 1f       	adc	r19, r19
    2110:	22 0f       	add	r18, r18
    2112:	33 1f       	adc	r19, r19
    2114:	22 0f       	add	r18, r18
    2116:	33 1f       	adc	r19, r19
    2118:	82 0f       	add	r24, r18
    211a:	93 1f       	adc	r25, r19
    211c:	9c 01       	movw	r18, r24
    211e:	24 0f       	add	r18, r20
    2120:	35 1f       	adc	r19, r21
    2122:	8b 81       	ldd	r24, Y+3	; 0x03
    2124:	9c 81       	ldd	r25, Y+4	; 0x04
    2126:	fc 01       	movw	r30, r24
    2128:	e2 0f       	add	r30, r18
    212a:	f3 1f       	adc	r31, r19
    212c:	90 89       	ldd	r25, Z+16	; 0x10
    212e:	86 2f       	mov	r24, r22
    2130:	69 2f       	mov	r22, r25
    2132:	41 e0       	ldi	r20, 0x01	; 1
    2134:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    2138:	4f c0       	rjmp	.+158    	; 0x21d8 <Seven_Segment_enuInit+0xdce>
					}
					else if ( (Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8Type) == COMMON_CATHOD )
    213a:	89 81       	ldd	r24, Y+1	; 0x01
    213c:	48 2f       	mov	r20, r24
    213e:	50 e0       	ldi	r21, 0x00	; 0
    2140:	ca 01       	movw	r24, r20
    2142:	88 0f       	add	r24, r24
    2144:	99 1f       	adc	r25, r25
    2146:	9c 01       	movw	r18, r24
    2148:	22 0f       	add	r18, r18
    214a:	33 1f       	adc	r19, r19
    214c:	22 0f       	add	r18, r18
    214e:	33 1f       	adc	r19, r19
    2150:	22 0f       	add	r18, r18
    2152:	33 1f       	adc	r19, r19
    2154:	82 0f       	add	r24, r18
    2156:	93 1f       	adc	r25, r19
    2158:	9c 01       	movw	r18, r24
    215a:	24 0f       	add	r18, r20
    215c:	35 1f       	adc	r19, r21
    215e:	8b 81       	ldd	r24, Y+3	; 0x03
    2160:	9c 81       	ldd	r25, Y+4	; 0x04
    2162:	fc 01       	movw	r30, r24
    2164:	e2 0f       	add	r30, r18
    2166:	f3 1f       	adc	r31, r19
    2168:	80 81       	ld	r24, Z
    216a:	88 23       	and	r24, r24
    216c:	a9 f5       	brne	.+106    	; 0x21d8 <Seven_Segment_enuInit+0xdce>
					{
						DIO_enuSetPinValue(Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Port,  Cpy_pstrSegCnfg[Local_u8Iterator].SEG_u8LegCMN_Pin,DIO_LOW);
    216e:	89 81       	ldd	r24, Y+1	; 0x01
    2170:	48 2f       	mov	r20, r24
    2172:	50 e0       	ldi	r21, 0x00	; 0
    2174:	ca 01       	movw	r24, r20
    2176:	88 0f       	add	r24, r24
    2178:	99 1f       	adc	r25, r25
    217a:	9c 01       	movw	r18, r24
    217c:	22 0f       	add	r18, r18
    217e:	33 1f       	adc	r19, r19
    2180:	22 0f       	add	r18, r18
    2182:	33 1f       	adc	r19, r19
    2184:	22 0f       	add	r18, r18
    2186:	33 1f       	adc	r19, r19
    2188:	82 0f       	add	r24, r18
    218a:	93 1f       	adc	r25, r19
    218c:	9c 01       	movw	r18, r24
    218e:	24 0f       	add	r18, r20
    2190:	35 1f       	adc	r19, r21
    2192:	8b 81       	ldd	r24, Y+3	; 0x03
    2194:	9c 81       	ldd	r25, Y+4	; 0x04
    2196:	fc 01       	movw	r30, r24
    2198:	e2 0f       	add	r30, r18
    219a:	f3 1f       	adc	r31, r19
    219c:	67 85       	ldd	r22, Z+15	; 0x0f
    219e:	89 81       	ldd	r24, Y+1	; 0x01
    21a0:	48 2f       	mov	r20, r24
    21a2:	50 e0       	ldi	r21, 0x00	; 0
    21a4:	ca 01       	movw	r24, r20
    21a6:	88 0f       	add	r24, r24
    21a8:	99 1f       	adc	r25, r25
    21aa:	9c 01       	movw	r18, r24
    21ac:	22 0f       	add	r18, r18
    21ae:	33 1f       	adc	r19, r19
    21b0:	22 0f       	add	r18, r18
    21b2:	33 1f       	adc	r19, r19
    21b4:	22 0f       	add	r18, r18
    21b6:	33 1f       	adc	r19, r19
    21b8:	82 0f       	add	r24, r18
    21ba:	93 1f       	adc	r25, r19
    21bc:	9c 01       	movw	r18, r24
    21be:	24 0f       	add	r18, r20
    21c0:	35 1f       	adc	r19, r21
    21c2:	8b 81       	ldd	r24, Y+3	; 0x03
    21c4:	9c 81       	ldd	r25, Y+4	; 0x04
    21c6:	fc 01       	movw	r30, r24
    21c8:	e2 0f       	add	r30, r18
    21ca:	f3 1f       	adc	r31, r19
    21cc:	90 89       	ldd	r25, Z+16	; 0x10
    21ce:	86 2f       	mov	r24, r22
    21d0:	69 2f       	mov	r22, r25
    21d2:	40 e0       	ldi	r20, 0x00	; 0
    21d4:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>



			}

			Local_enuErrorState = ES_OK ;
    21d8:	81 e0       	ldi	r24, 0x01	; 1
    21da:	8a 83       	std	Y+2, r24	; 0x02
    21dc:	02 c0       	rjmp	.+4      	; 0x21e2 <Seven_Segment_enuInit+0xdd8>
		}

		else
		{
			Local_enuErrorState = ES_NULL_POINTER ;
    21de:	82 e0       	ldi	r24, 0x02	; 2
    21e0:	8a 83       	std	Y+2, r24	; 0x02
	// Make sure that the passed address is not equal NULL .
	if(Cpy_pstrSegCnfg !=NULL )
	{
		u8 Local_u8Iterator = 0 ;

		for( Local_u8Iterator = 0 ; Local_u8Iterator < SEG_NUM  ; Local_u8Iterator++)
    21e2:	89 81       	ldd	r24, Y+1	; 0x01
    21e4:	8f 5f       	subi	r24, 0xFF	; 255
    21e6:	89 83       	std	Y+1, r24	; 0x01
    21e8:	89 81       	ldd	r24, Y+1	; 0x01
    21ea:	88 23       	and	r24, r24
    21ec:	09 f4       	brne	.+2      	; 0x21f0 <Seven_Segment_enuInit+0xde6>
    21ee:	1f c9       	rjmp	.-3522   	; 0x142e <Seven_Segment_enuInit+0x24>




	}
	return Local_enuErrorState ;
    21f0:	8a 81       	ldd	r24, Y+2	; 0x02
}//End of
    21f2:	26 96       	adiw	r28, 0x06	; 6
    21f4:	0f b6       	in	r0, 0x3f	; 63
    21f6:	f8 94       	cli
    21f8:	de bf       	out	0x3e, r29	; 62
    21fa:	0f be       	out	0x3f, r0	; 63
    21fc:	cd bf       	out	0x3d, r28	; 61
    21fe:	cf 91       	pop	r28
    2200:	df 91       	pop	r29
    2202:	08 95       	ret

00002204 <Seven_Segment_enuDisplayNum>:

	/********************************************************************/
	/********************************************************************/
	/********************************************************************/
	ES_t Seven_Segment_enuDisplayNum(SEG_t*  Cpy_pstrSegCnfg , u8 Cpy_u8Num )
	{
    2204:	df 93       	push	r29
    2206:	cf 93       	push	r28
    2208:	cd b7       	in	r28, 0x3d	; 61
    220a:	de b7       	in	r29, 0x3e	; 62
    220c:	69 97       	sbiw	r28, 0x19	; 25
    220e:	0f b6       	in	r0, 0x3f	; 63
    2210:	f8 94       	cli
    2212:	de bf       	out	0x3e, r29	; 62
    2214:	0f be       	out	0x3f, r0	; 63
    2216:	cd bf       	out	0x3d, r28	; 61
    2218:	9b 83       	std	Y+3, r25	; 0x03
    221a:	8a 83       	std	Y+2, r24	; 0x02
    221c:	6c 83       	std	Y+4, r22	; 0x04
		ES_t  Local_enuErrorState   = ES_NOK ;
    221e:	19 82       	std	Y+1, r1	; 0x01

		if( Cpy_pstrSegCnfg != NULL )
    2220:	8a 81       	ldd	r24, Y+2	; 0x02
    2222:	9b 81       	ldd	r25, Y+3	; 0x03
    2224:	00 97       	sbiw	r24, 0x00	; 0
    2226:	09 f4       	brne	.+2      	; 0x222a <Seven_Segment_enuDisplayNum+0x26>
    2228:	67 c1       	rjmp	.+718    	; 0x24f8 <Seven_Segment_enuDisplayNum+0x2f4>
		{

			Cpy_u8Num=SEG_Au8NumDisplay[Cpy_u8Num];
    222a:	8c 81       	ldd	r24, Y+4	; 0x04
    222c:	88 2f       	mov	r24, r24
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	fc 01       	movw	r30, r24
    2232:	e5 58       	subi	r30, 0x85	; 133
    2234:	ff 4f       	sbci	r31, 0xFF	; 255
    2236:	80 81       	ld	r24, Z
    2238:	8c 83       	std	Y+4, r24	; 0x04
			(*(u8*)0x31)=Cpy_u8Num;
    223a:	e1 e3       	ldi	r30, 0x31	; 49
    223c:	f0 e0       	ldi	r31, 0x00	; 0
    223e:	8c 81       	ldd	r24, Y+4	; 0x04
    2240:	80 83       	st	Z, r24



			if( Cpy_pstrSegCnfg->SEG_u8Type == COMMON_ANODE )
    2242:	ea 81       	ldd	r30, Y+2	; 0x02
    2244:	fb 81       	ldd	r31, Y+3	; 0x03
    2246:	80 81       	ld	r24, Z
    2248:	81 30       	cpi	r24, 0x01	; 1
    224a:	09 f0       	breq	.+2      	; 0x224e <Seven_Segment_enuDisplayNum+0x4a>
    224c:	b1 c0       	rjmp	.+354    	; 0x23b0 <Seven_Segment_enuDisplayNum+0x1ac>
			{

				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegA_Port ,  Cpy_pstrSegCnfg->SEG_u8LegA_Pin ,~Bit0);
    224e:	ea 81       	ldd	r30, Y+2	; 0x02
    2250:	fb 81       	ldd	r31, Y+3	; 0x03
    2252:	81 81       	ldd	r24, Z+1	; 0x01
    2254:	89 8f       	std	Y+25, r24	; 0x19
    2256:	ea 81       	ldd	r30, Y+2	; 0x02
    2258:	fb 81       	ldd	r31, Y+3	; 0x03
    225a:	82 81       	ldd	r24, Z+2	; 0x02
    225c:	88 8f       	std	Y+24, r24	; 0x18
    225e:	8c 81       	ldd	r24, Y+4	; 0x04
    2260:	88 2f       	mov	r24, r24
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	81 70       	andi	r24, 0x01	; 1
    2266:	90 70       	andi	r25, 0x00	; 0
    2268:	1f 8a       	std	Y+23, r1	; 0x17
    226a:	00 97       	sbiw	r24, 0x00	; 0
    226c:	11 f4       	brne	.+4      	; 0x2272 <Seven_Segment_enuDisplayNum+0x6e>
    226e:	81 e0       	ldi	r24, 0x01	; 1
    2270:	8f 8b       	std	Y+23, r24	; 0x17
    2272:	89 8d       	ldd	r24, Y+25	; 0x19
    2274:	68 8d       	ldd	r22, Y+24	; 0x18
    2276:	4f 89       	ldd	r20, Y+23	; 0x17
    2278:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegB_Port ,  Cpy_pstrSegCnfg->SEG_u8LegB_Pin ,~Bit1);
    227c:	ea 81       	ldd	r30, Y+2	; 0x02
    227e:	fb 81       	ldd	r31, Y+3	; 0x03
    2280:	83 81       	ldd	r24, Z+3	; 0x03
    2282:	8e 8b       	std	Y+22, r24	; 0x16
    2284:	ea 81       	ldd	r30, Y+2	; 0x02
    2286:	fb 81       	ldd	r31, Y+3	; 0x03
    2288:	84 81       	ldd	r24, Z+4	; 0x04
    228a:	8d 8b       	std	Y+21, r24	; 0x15
    228c:	8c 81       	ldd	r24, Y+4	; 0x04
    228e:	86 95       	lsr	r24
    2290:	88 2f       	mov	r24, r24
    2292:	90 e0       	ldi	r25, 0x00	; 0
    2294:	81 70       	andi	r24, 0x01	; 1
    2296:	90 70       	andi	r25, 0x00	; 0
    2298:	1c 8a       	std	Y+20, r1	; 0x14
    229a:	00 97       	sbiw	r24, 0x00	; 0
    229c:	11 f4       	brne	.+4      	; 0x22a2 <Seven_Segment_enuDisplayNum+0x9e>
    229e:	81 e0       	ldi	r24, 0x01	; 1
    22a0:	8c 8b       	std	Y+20, r24	; 0x14
    22a2:	8e 89       	ldd	r24, Y+22	; 0x16
    22a4:	6d 89       	ldd	r22, Y+21	; 0x15
    22a6:	4c 89       	ldd	r20, Y+20	; 0x14
    22a8:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegC_Port ,  Cpy_pstrSegCnfg->SEG_u8LegC_Pin ,~Bit2);
    22ac:	ea 81       	ldd	r30, Y+2	; 0x02
    22ae:	fb 81       	ldd	r31, Y+3	; 0x03
    22b0:	85 81       	ldd	r24, Z+5	; 0x05
    22b2:	8b 8b       	std	Y+19, r24	; 0x13
    22b4:	ea 81       	ldd	r30, Y+2	; 0x02
    22b6:	fb 81       	ldd	r31, Y+3	; 0x03
    22b8:	86 81       	ldd	r24, Z+6	; 0x06
    22ba:	8a 8b       	std	Y+18, r24	; 0x12
    22bc:	8c 81       	ldd	r24, Y+4	; 0x04
    22be:	86 95       	lsr	r24
    22c0:	86 95       	lsr	r24
    22c2:	88 2f       	mov	r24, r24
    22c4:	90 e0       	ldi	r25, 0x00	; 0
    22c6:	81 70       	andi	r24, 0x01	; 1
    22c8:	90 70       	andi	r25, 0x00	; 0
    22ca:	19 8a       	std	Y+17, r1	; 0x11
    22cc:	00 97       	sbiw	r24, 0x00	; 0
    22ce:	11 f4       	brne	.+4      	; 0x22d4 <Seven_Segment_enuDisplayNum+0xd0>
    22d0:	81 e0       	ldi	r24, 0x01	; 1
    22d2:	89 8b       	std	Y+17, r24	; 0x11
    22d4:	8b 89       	ldd	r24, Y+19	; 0x13
    22d6:	6a 89       	ldd	r22, Y+18	; 0x12
    22d8:	49 89       	ldd	r20, Y+17	; 0x11
    22da:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegD_Port ,  Cpy_pstrSegCnfg->SEG_u8LegD_Pin ,~Bit3);
    22de:	ea 81       	ldd	r30, Y+2	; 0x02
    22e0:	fb 81       	ldd	r31, Y+3	; 0x03
    22e2:	87 81       	ldd	r24, Z+7	; 0x07
    22e4:	88 8b       	std	Y+16, r24	; 0x10
    22e6:	ea 81       	ldd	r30, Y+2	; 0x02
    22e8:	fb 81       	ldd	r31, Y+3	; 0x03
    22ea:	80 85       	ldd	r24, Z+8	; 0x08
    22ec:	8f 87       	std	Y+15, r24	; 0x0f
    22ee:	8c 81       	ldd	r24, Y+4	; 0x04
    22f0:	86 95       	lsr	r24
    22f2:	86 95       	lsr	r24
    22f4:	86 95       	lsr	r24
    22f6:	88 2f       	mov	r24, r24
    22f8:	90 e0       	ldi	r25, 0x00	; 0
    22fa:	81 70       	andi	r24, 0x01	; 1
    22fc:	90 70       	andi	r25, 0x00	; 0
    22fe:	1e 86       	std	Y+14, r1	; 0x0e
    2300:	00 97       	sbiw	r24, 0x00	; 0
    2302:	11 f4       	brne	.+4      	; 0x2308 <Seven_Segment_enuDisplayNum+0x104>
    2304:	81 e0       	ldi	r24, 0x01	; 1
    2306:	8e 87       	std	Y+14, r24	; 0x0e
    2308:	88 89       	ldd	r24, Y+16	; 0x10
    230a:	6f 85       	ldd	r22, Y+15	; 0x0f
    230c:	4e 85       	ldd	r20, Y+14	; 0x0e
    230e:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegE_Port ,  Cpy_pstrSegCnfg->SEG_u8LegE_Pin ,~Bit4);
    2312:	ea 81       	ldd	r30, Y+2	; 0x02
    2314:	fb 81       	ldd	r31, Y+3	; 0x03
    2316:	81 85       	ldd	r24, Z+9	; 0x09
    2318:	8d 87       	std	Y+13, r24	; 0x0d
    231a:	ea 81       	ldd	r30, Y+2	; 0x02
    231c:	fb 81       	ldd	r31, Y+3	; 0x03
    231e:	82 85       	ldd	r24, Z+10	; 0x0a
    2320:	8c 87       	std	Y+12, r24	; 0x0c
    2322:	8c 81       	ldd	r24, Y+4	; 0x04
    2324:	82 95       	swap	r24
    2326:	8f 70       	andi	r24, 0x0F	; 15
    2328:	88 2f       	mov	r24, r24
    232a:	90 e0       	ldi	r25, 0x00	; 0
    232c:	81 70       	andi	r24, 0x01	; 1
    232e:	90 70       	andi	r25, 0x00	; 0
    2330:	1b 86       	std	Y+11, r1	; 0x0b
    2332:	00 97       	sbiw	r24, 0x00	; 0
    2334:	11 f4       	brne	.+4      	; 0x233a <Seven_Segment_enuDisplayNum+0x136>
    2336:	81 e0       	ldi	r24, 0x01	; 1
    2338:	8b 87       	std	Y+11, r24	; 0x0b
    233a:	8d 85       	ldd	r24, Y+13	; 0x0d
    233c:	6c 85       	ldd	r22, Y+12	; 0x0c
    233e:	4b 85       	ldd	r20, Y+11	; 0x0b
    2340:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegF_Port ,  Cpy_pstrSegCnfg->SEG_u8LegF_Pin ,~Bit5);
    2344:	ea 81       	ldd	r30, Y+2	; 0x02
    2346:	fb 81       	ldd	r31, Y+3	; 0x03
    2348:	83 85       	ldd	r24, Z+11	; 0x0b
    234a:	8a 87       	std	Y+10, r24	; 0x0a
    234c:	ea 81       	ldd	r30, Y+2	; 0x02
    234e:	fb 81       	ldd	r31, Y+3	; 0x03
    2350:	84 85       	ldd	r24, Z+12	; 0x0c
    2352:	89 87       	std	Y+9, r24	; 0x09
    2354:	8c 81       	ldd	r24, Y+4	; 0x04
    2356:	82 95       	swap	r24
    2358:	86 95       	lsr	r24
    235a:	87 70       	andi	r24, 0x07	; 7
    235c:	88 2f       	mov	r24, r24
    235e:	90 e0       	ldi	r25, 0x00	; 0
    2360:	81 70       	andi	r24, 0x01	; 1
    2362:	90 70       	andi	r25, 0x00	; 0
    2364:	18 86       	std	Y+8, r1	; 0x08
    2366:	00 97       	sbiw	r24, 0x00	; 0
    2368:	11 f4       	brne	.+4      	; 0x236e <Seven_Segment_enuDisplayNum+0x16a>
    236a:	81 e0       	ldi	r24, 0x01	; 1
    236c:	88 87       	std	Y+8, r24	; 0x08
    236e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2370:	69 85       	ldd	r22, Y+9	; 0x09
    2372:	48 85       	ldd	r20, Y+8	; 0x08
    2374:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegG_Port ,  Cpy_pstrSegCnfg->SEG_u8LegG_Pin ,~Bit6);
    2378:	ea 81       	ldd	r30, Y+2	; 0x02
    237a:	fb 81       	ldd	r31, Y+3	; 0x03
    237c:	85 85       	ldd	r24, Z+13	; 0x0d
    237e:	8f 83       	std	Y+7, r24	; 0x07
    2380:	ea 81       	ldd	r30, Y+2	; 0x02
    2382:	fb 81       	ldd	r31, Y+3	; 0x03
    2384:	86 85       	ldd	r24, Z+14	; 0x0e
    2386:	8e 83       	std	Y+6, r24	; 0x06
    2388:	8c 81       	ldd	r24, Y+4	; 0x04
    238a:	82 95       	swap	r24
    238c:	86 95       	lsr	r24
    238e:	86 95       	lsr	r24
    2390:	83 70       	andi	r24, 0x03	; 3
    2392:	88 2f       	mov	r24, r24
    2394:	90 e0       	ldi	r25, 0x00	; 0
    2396:	81 70       	andi	r24, 0x01	; 1
    2398:	90 70       	andi	r25, 0x00	; 0
    239a:	1d 82       	std	Y+5, r1	; 0x05
    239c:	00 97       	sbiw	r24, 0x00	; 0
    239e:	11 f4       	brne	.+4      	; 0x23a4 <Seven_Segment_enuDisplayNum+0x1a0>
    23a0:	81 e0       	ldi	r24, 0x01	; 1
    23a2:	8d 83       	std	Y+5, r24	; 0x05
    23a4:	8f 81       	ldd	r24, Y+7	; 0x07
    23a6:	6e 81       	ldd	r22, Y+6	; 0x06
    23a8:	4d 81       	ldd	r20, Y+5	; 0x05
    23aa:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    23ae:	a1 c0       	rjmp	.+322    	; 0x24f2 <Seven_Segment_enuDisplayNum+0x2ee>

			}
			else if (Cpy_pstrSegCnfg->SEG_u8Type == COMMON_CATHOD)
    23b0:	ea 81       	ldd	r30, Y+2	; 0x02
    23b2:	fb 81       	ldd	r31, Y+3	; 0x03
    23b4:	80 81       	ld	r24, Z
    23b6:	88 23       	and	r24, r24
    23b8:	09 f0       	breq	.+2      	; 0x23bc <Seven_Segment_enuDisplayNum+0x1b8>
    23ba:	9b c0       	rjmp	.+310    	; 0x24f2 <Seven_Segment_enuDisplayNum+0x2ee>
			{

				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegA_Port ,  Cpy_pstrSegCnfg->SEG_u8LegA_Pin ,(SEG_Au8NumDisplay[Cpy_u8Num]>>0)&1 );
    23bc:	ea 81       	ldd	r30, Y+2	; 0x02
    23be:	fb 81       	ldd	r31, Y+3	; 0x03
    23c0:	21 81       	ldd	r18, Z+1	; 0x01
    23c2:	ea 81       	ldd	r30, Y+2	; 0x02
    23c4:	fb 81       	ldd	r31, Y+3	; 0x03
    23c6:	32 81       	ldd	r19, Z+2	; 0x02
    23c8:	8c 81       	ldd	r24, Y+4	; 0x04
    23ca:	88 2f       	mov	r24, r24
    23cc:	90 e0       	ldi	r25, 0x00	; 0
    23ce:	fc 01       	movw	r30, r24
    23d0:	e5 58       	subi	r30, 0x85	; 133
    23d2:	ff 4f       	sbci	r31, 0xFF	; 255
    23d4:	80 81       	ld	r24, Z
    23d6:	98 2f       	mov	r25, r24
    23d8:	91 70       	andi	r25, 0x01	; 1
    23da:	82 2f       	mov	r24, r18
    23dc:	63 2f       	mov	r22, r19
    23de:	49 2f       	mov	r20, r25
    23e0:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegB_Port ,  Cpy_pstrSegCnfg->SEG_u8LegB_Pin ,(SEG_Au8NumDisplay[Cpy_u8Num]>>1)&1 );
    23e4:	ea 81       	ldd	r30, Y+2	; 0x02
    23e6:	fb 81       	ldd	r31, Y+3	; 0x03
    23e8:	23 81       	ldd	r18, Z+3	; 0x03
    23ea:	ea 81       	ldd	r30, Y+2	; 0x02
    23ec:	fb 81       	ldd	r31, Y+3	; 0x03
    23ee:	34 81       	ldd	r19, Z+4	; 0x04
    23f0:	8c 81       	ldd	r24, Y+4	; 0x04
    23f2:	88 2f       	mov	r24, r24
    23f4:	90 e0       	ldi	r25, 0x00	; 0
    23f6:	fc 01       	movw	r30, r24
    23f8:	e5 58       	subi	r30, 0x85	; 133
    23fa:	ff 4f       	sbci	r31, 0xFF	; 255
    23fc:	80 81       	ld	r24, Z
    23fe:	86 95       	lsr	r24
    2400:	98 2f       	mov	r25, r24
    2402:	91 70       	andi	r25, 0x01	; 1
    2404:	82 2f       	mov	r24, r18
    2406:	63 2f       	mov	r22, r19
    2408:	49 2f       	mov	r20, r25
    240a:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegC_Port ,  Cpy_pstrSegCnfg->SEG_u8LegC_Pin ,(SEG_Au8NumDisplay[Cpy_u8Num]>>2)&1 );
    240e:	ea 81       	ldd	r30, Y+2	; 0x02
    2410:	fb 81       	ldd	r31, Y+3	; 0x03
    2412:	25 81       	ldd	r18, Z+5	; 0x05
    2414:	ea 81       	ldd	r30, Y+2	; 0x02
    2416:	fb 81       	ldd	r31, Y+3	; 0x03
    2418:	36 81       	ldd	r19, Z+6	; 0x06
    241a:	8c 81       	ldd	r24, Y+4	; 0x04
    241c:	88 2f       	mov	r24, r24
    241e:	90 e0       	ldi	r25, 0x00	; 0
    2420:	fc 01       	movw	r30, r24
    2422:	e5 58       	subi	r30, 0x85	; 133
    2424:	ff 4f       	sbci	r31, 0xFF	; 255
    2426:	80 81       	ld	r24, Z
    2428:	86 95       	lsr	r24
    242a:	86 95       	lsr	r24
    242c:	98 2f       	mov	r25, r24
    242e:	91 70       	andi	r25, 0x01	; 1
    2430:	82 2f       	mov	r24, r18
    2432:	63 2f       	mov	r22, r19
    2434:	49 2f       	mov	r20, r25
    2436:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegD_Port ,  Cpy_pstrSegCnfg->SEG_u8LegD_Pin ,(SEG_Au8NumDisplay[Cpy_u8Num]>>3)&1 );
    243a:	ea 81       	ldd	r30, Y+2	; 0x02
    243c:	fb 81       	ldd	r31, Y+3	; 0x03
    243e:	27 81       	ldd	r18, Z+7	; 0x07
    2440:	ea 81       	ldd	r30, Y+2	; 0x02
    2442:	fb 81       	ldd	r31, Y+3	; 0x03
    2444:	30 85       	ldd	r19, Z+8	; 0x08
    2446:	8c 81       	ldd	r24, Y+4	; 0x04
    2448:	88 2f       	mov	r24, r24
    244a:	90 e0       	ldi	r25, 0x00	; 0
    244c:	fc 01       	movw	r30, r24
    244e:	e5 58       	subi	r30, 0x85	; 133
    2450:	ff 4f       	sbci	r31, 0xFF	; 255
    2452:	80 81       	ld	r24, Z
    2454:	86 95       	lsr	r24
    2456:	86 95       	lsr	r24
    2458:	86 95       	lsr	r24
    245a:	98 2f       	mov	r25, r24
    245c:	91 70       	andi	r25, 0x01	; 1
    245e:	82 2f       	mov	r24, r18
    2460:	63 2f       	mov	r22, r19
    2462:	49 2f       	mov	r20, r25
    2464:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegE_Port ,  Cpy_pstrSegCnfg->SEG_u8LegE_Pin ,(SEG_Au8NumDisplay[Cpy_u8Num]>>4)&1 );
    2468:	ea 81       	ldd	r30, Y+2	; 0x02
    246a:	fb 81       	ldd	r31, Y+3	; 0x03
    246c:	21 85       	ldd	r18, Z+9	; 0x09
    246e:	ea 81       	ldd	r30, Y+2	; 0x02
    2470:	fb 81       	ldd	r31, Y+3	; 0x03
    2472:	32 85       	ldd	r19, Z+10	; 0x0a
    2474:	8c 81       	ldd	r24, Y+4	; 0x04
    2476:	88 2f       	mov	r24, r24
    2478:	90 e0       	ldi	r25, 0x00	; 0
    247a:	fc 01       	movw	r30, r24
    247c:	e5 58       	subi	r30, 0x85	; 133
    247e:	ff 4f       	sbci	r31, 0xFF	; 255
    2480:	80 81       	ld	r24, Z
    2482:	82 95       	swap	r24
    2484:	8f 70       	andi	r24, 0x0F	; 15
    2486:	98 2f       	mov	r25, r24
    2488:	91 70       	andi	r25, 0x01	; 1
    248a:	82 2f       	mov	r24, r18
    248c:	63 2f       	mov	r22, r19
    248e:	49 2f       	mov	r20, r25
    2490:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegF_Port ,  Cpy_pstrSegCnfg->SEG_u8LegF_Pin ,(SEG_Au8NumDisplay[Cpy_u8Num]>>5)&1 );
    2494:	ea 81       	ldd	r30, Y+2	; 0x02
    2496:	fb 81       	ldd	r31, Y+3	; 0x03
    2498:	23 85       	ldd	r18, Z+11	; 0x0b
    249a:	ea 81       	ldd	r30, Y+2	; 0x02
    249c:	fb 81       	ldd	r31, Y+3	; 0x03
    249e:	34 85       	ldd	r19, Z+12	; 0x0c
    24a0:	8c 81       	ldd	r24, Y+4	; 0x04
    24a2:	88 2f       	mov	r24, r24
    24a4:	90 e0       	ldi	r25, 0x00	; 0
    24a6:	fc 01       	movw	r30, r24
    24a8:	e5 58       	subi	r30, 0x85	; 133
    24aa:	ff 4f       	sbci	r31, 0xFF	; 255
    24ac:	80 81       	ld	r24, Z
    24ae:	82 95       	swap	r24
    24b0:	86 95       	lsr	r24
    24b2:	87 70       	andi	r24, 0x07	; 7
    24b4:	98 2f       	mov	r25, r24
    24b6:	91 70       	andi	r25, 0x01	; 1
    24b8:	82 2f       	mov	r24, r18
    24ba:	63 2f       	mov	r22, r19
    24bc:	49 2f       	mov	r20, r25
    24be:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegG_Port ,  Cpy_pstrSegCnfg->SEG_u8LegG_Pin ,(SEG_Au8NumDisplay[Cpy_u8Num]>>6)&1 );
    24c2:	ea 81       	ldd	r30, Y+2	; 0x02
    24c4:	fb 81       	ldd	r31, Y+3	; 0x03
    24c6:	25 85       	ldd	r18, Z+13	; 0x0d
    24c8:	ea 81       	ldd	r30, Y+2	; 0x02
    24ca:	fb 81       	ldd	r31, Y+3	; 0x03
    24cc:	36 85       	ldd	r19, Z+14	; 0x0e
    24ce:	8c 81       	ldd	r24, Y+4	; 0x04
    24d0:	88 2f       	mov	r24, r24
    24d2:	90 e0       	ldi	r25, 0x00	; 0
    24d4:	fc 01       	movw	r30, r24
    24d6:	e5 58       	subi	r30, 0x85	; 133
    24d8:	ff 4f       	sbci	r31, 0xFF	; 255
    24da:	80 81       	ld	r24, Z
    24dc:	82 95       	swap	r24
    24de:	86 95       	lsr	r24
    24e0:	86 95       	lsr	r24
    24e2:	83 70       	andi	r24, 0x03	; 3
    24e4:	98 2f       	mov	r25, r24
    24e6:	91 70       	andi	r25, 0x01	; 1
    24e8:	82 2f       	mov	r24, r18
    24ea:	63 2f       	mov	r22, r19
    24ec:	49 2f       	mov	r20, r25
    24ee:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
			else
			{

			}

			Local_enuErrorState = ES_OK ;
    24f2:	81 e0       	ldi	r24, 0x01	; 1
    24f4:	89 83       	std	Y+1, r24	; 0x01
    24f6:	02 c0       	rjmp	.+4      	; 0x24fc <Seven_Segment_enuDisplayNum+0x2f8>
		}
		else
		{
			Local_enuErrorState   = ES_NULL_POINTER ;
    24f8:	82 e0       	ldi	r24, 0x02	; 2
    24fa:	89 83       	std	Y+1, r24	; 0x01
		}

		return Local_enuErrorState ;
    24fc:	89 81       	ldd	r24, Y+1	; 0x01
	}//End of
    24fe:	69 96       	adiw	r28, 0x19	; 25
    2500:	0f b6       	in	r0, 0x3f	; 63
    2502:	f8 94       	cli
    2504:	de bf       	out	0x3e, r29	; 62
    2506:	0f be       	out	0x3f, r0	; 63
    2508:	cd bf       	out	0x3d, r28	; 61
    250a:	cf 91       	pop	r28
    250c:	df 91       	pop	r29
    250e:	08 95       	ret

00002510 <Seven_Segment_enuEnableCommon>:

	/********************************************************************/
	/********************************************************************/
	/********************************************************************/
	ES_t Seven_Segment_enuEnableCommon(SEG_t*  Cpy_pstrSegCnfg )
	{
    2510:	df 93       	push	r29
    2512:	cf 93       	push	r28
    2514:	00 d0       	rcall	.+0      	; 0x2516 <Seven_Segment_enuEnableCommon+0x6>
    2516:	00 d0       	rcall	.+0      	; 0x2518 <Seven_Segment_enuEnableCommon+0x8>
    2518:	0f 92       	push	r0
    251a:	cd b7       	in	r28, 0x3d	; 61
    251c:	de b7       	in	r29, 0x3e	; 62
    251e:	9b 83       	std	Y+3, r25	; 0x03
    2520:	8a 83       	std	Y+2, r24	; 0x02
		ES_t  Local_enuErrorState   = ES_NOK ;
    2522:	19 82       	std	Y+1, r1	; 0x01

		if(Cpy_pstrSegCnfg != NULL )
    2524:	8a 81       	ldd	r24, Y+2	; 0x02
    2526:	9b 81       	ldd	r25, Y+3	; 0x03
    2528:	00 97       	sbiw	r24, 0x00	; 0
    252a:	09 f4       	brne	.+2      	; 0x252e <Seven_Segment_enuEnableCommon+0x1e>
    252c:	3e c0       	rjmp	.+124    	; 0x25aa <Seven_Segment_enuEnableCommon+0x9a>
		{

			if(Cpy_pstrSegCnfg->SEG_u8Type == COMMON_ANODE )
    252e:	ea 81       	ldd	r30, Y+2	; 0x02
    2530:	fb 81       	ldd	r31, Y+3	; 0x03
    2532:	80 81       	ld	r24, Z
    2534:	81 30       	cpi	r24, 0x01	; 1
    2536:	c9 f4       	brne	.+50     	; 0x256a <Seven_Segment_enuEnableCommon+0x5a>


			{
				if((Cpy_pstrSegCnfg->SEG_u8LegCMN_Port <= DIO_PORTD) && (Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin <= DIO_PIN7) )
    2538:	ea 81       	ldd	r30, Y+2	; 0x02
    253a:	fb 81       	ldd	r31, Y+3	; 0x03
    253c:	87 85       	ldd	r24, Z+15	; 0x0f
    253e:	84 30       	cpi	r24, 0x04	; 4
    2540:	88 f5       	brcc	.+98     	; 0x25a4 <Seven_Segment_enuEnableCommon+0x94>
    2542:	ea 81       	ldd	r30, Y+2	; 0x02
    2544:	fb 81       	ldd	r31, Y+3	; 0x03
    2546:	80 89       	ldd	r24, Z+16	; 0x10
    2548:	88 30       	cpi	r24, 0x08	; 8
    254a:	58 f4       	brcc	.+22     	; 0x2562 <Seven_Segment_enuEnableCommon+0x52>
				{
					DIO_enuSetPinValue(Cpy_pstrSegCnfg->SEG_u8LegCMN_Port,Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin,DIO_LOW);
    254c:	ea 81       	ldd	r30, Y+2	; 0x02
    254e:	fb 81       	ldd	r31, Y+3	; 0x03
    2550:	87 85       	ldd	r24, Z+15	; 0x0f
    2552:	ea 81       	ldd	r30, Y+2	; 0x02
    2554:	fb 81       	ldd	r31, Y+3	; 0x03
    2556:	90 89       	ldd	r25, Z+16	; 0x10
    2558:	69 2f       	mov	r22, r25
    255a:	40 e0       	ldi	r20, 0x00	; 0
    255c:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    2560:	21 c0       	rjmp	.+66     	; 0x25a4 <Seven_Segment_enuEnableCommon+0x94>

				}
				else if((Cpy_pstrSegCnfg->SEG_u8LegCMN_Port == NOT_CONNECTED) || (Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin == NOT_CONNECTED))
    2562:	ea 81       	ldd	r30, Y+2	; 0x02
    2564:	fb 81       	ldd	r31, Y+3	; 0x03
    2566:	87 85       	ldd	r24, Z+15	; 0x0f
    2568:	1d c0       	rjmp	.+58     	; 0x25a4 <Seven_Segment_enuEnableCommon+0x94>
				}

			}


			else if (Cpy_pstrSegCnfg->SEG_u8Type == COMMON_CATHOD )
    256a:	ea 81       	ldd	r30, Y+2	; 0x02
    256c:	fb 81       	ldd	r31, Y+3	; 0x03
    256e:	80 81       	ld	r24, Z
    2570:	88 23       	and	r24, r24
    2572:	c1 f4       	brne	.+48     	; 0x25a4 <Seven_Segment_enuEnableCommon+0x94>
			{

				if((Cpy_pstrSegCnfg->SEG_u8LegCMN_Port <= DIO_PORTD) && (Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin <= DIO_PIN7) )
    2574:	ea 81       	ldd	r30, Y+2	; 0x02
    2576:	fb 81       	ldd	r31, Y+3	; 0x03
    2578:	87 85       	ldd	r24, Z+15	; 0x0f
    257a:	84 30       	cpi	r24, 0x04	; 4
    257c:	98 f4       	brcc	.+38     	; 0x25a4 <Seven_Segment_enuEnableCommon+0x94>
    257e:	ea 81       	ldd	r30, Y+2	; 0x02
    2580:	fb 81       	ldd	r31, Y+3	; 0x03
    2582:	80 89       	ldd	r24, Z+16	; 0x10
    2584:	88 30       	cpi	r24, 0x08	; 8
    2586:	58 f4       	brcc	.+22     	; 0x259e <Seven_Segment_enuEnableCommon+0x8e>
				{
					DIO_enuSetPinValue(Cpy_pstrSegCnfg->SEG_u8LegCMN_Port,Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin,DIO_HIGH);
    2588:	ea 81       	ldd	r30, Y+2	; 0x02
    258a:	fb 81       	ldd	r31, Y+3	; 0x03
    258c:	87 85       	ldd	r24, Z+15	; 0x0f
    258e:	ea 81       	ldd	r30, Y+2	; 0x02
    2590:	fb 81       	ldd	r31, Y+3	; 0x03
    2592:	90 89       	ldd	r25, Z+16	; 0x10
    2594:	69 2f       	mov	r22, r25
    2596:	41 e0       	ldi	r20, 0x01	; 1
    2598:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    259c:	03 c0       	rjmp	.+6      	; 0x25a4 <Seven_Segment_enuEnableCommon+0x94>

				}
				else if((Cpy_pstrSegCnfg->SEG_u8LegCMN_Port == NOT_CONNECTED) || (Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin == NOT_CONNECTED))
    259e:	ea 81       	ldd	r30, Y+2	; 0x02
    25a0:	fb 81       	ldd	r31, Y+3	; 0x03
    25a2:	87 85       	ldd	r24, Z+15	; 0x0f

			}



			Local_enuErrorState   = ES_OK ;
    25a4:	81 e0       	ldi	r24, 0x01	; 1
    25a6:	89 83       	std	Y+1, r24	; 0x01
    25a8:	02 c0       	rjmp	.+4      	; 0x25ae <Seven_Segment_enuEnableCommon+0x9e>
		}
		else
		{
			Local_enuErrorState   = ES_NULL_POINTER;
    25aa:	82 e0       	ldi	r24, 0x02	; 2
    25ac:	89 83       	std	Y+1, r24	; 0x01
		}



		return Local_enuErrorState ;
    25ae:	89 81       	ldd	r24, Y+1	; 0x01
	}//End of
    25b0:	0f 90       	pop	r0
    25b2:	0f 90       	pop	r0
    25b4:	0f 90       	pop	r0
    25b6:	0f 90       	pop	r0
    25b8:	0f 90       	pop	r0
    25ba:	cf 91       	pop	r28
    25bc:	df 91       	pop	r29
    25be:	08 95       	ret

000025c0 <Seven_Segment_enuDisableCommon>:

	/********************************************************************/
	/*************************** *****************************************/
	/********************************************************************/
	ES_t Seven_Segment_enuDisableCommon(SEG_t*  Cpy_pstrSegCnfg )
	{
    25c0:	df 93       	push	r29
    25c2:	cf 93       	push	r28
    25c4:	00 d0       	rcall	.+0      	; 0x25c6 <Seven_Segment_enuDisableCommon+0x6>
    25c6:	00 d0       	rcall	.+0      	; 0x25c8 <Seven_Segment_enuDisableCommon+0x8>
    25c8:	0f 92       	push	r0
    25ca:	cd b7       	in	r28, 0x3d	; 61
    25cc:	de b7       	in	r29, 0x3e	; 62
    25ce:	9b 83       	std	Y+3, r25	; 0x03
    25d0:	8a 83       	std	Y+2, r24	; 0x02
		ES_t  Local_enuErrorState   = ES_NOK ;
    25d2:	19 82       	std	Y+1, r1	; 0x01

		if(Cpy_pstrSegCnfg != NULL )
    25d4:	8a 81       	ldd	r24, Y+2	; 0x02
    25d6:	9b 81       	ldd	r25, Y+3	; 0x03
    25d8:	00 97       	sbiw	r24, 0x00	; 0
    25da:	09 f4       	brne	.+2      	; 0x25de <Seven_Segment_enuDisableCommon+0x1e>
    25dc:	3e c0       	rjmp	.+124    	; 0x265a <Seven_Segment_enuDisableCommon+0x9a>
		{

			if(Cpy_pstrSegCnfg->SEG_u8Type == COMMON_ANODE )
    25de:	ea 81       	ldd	r30, Y+2	; 0x02
    25e0:	fb 81       	ldd	r31, Y+3	; 0x03
    25e2:	80 81       	ld	r24, Z
    25e4:	81 30       	cpi	r24, 0x01	; 1
    25e6:	c9 f4       	brne	.+50     	; 0x261a <Seven_Segment_enuDisableCommon+0x5a>
			{
				if((Cpy_pstrSegCnfg->SEG_u8LegCMN_Port <= DIO_PORTD) && (Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin <= DIO_PIN7) )
    25e8:	ea 81       	ldd	r30, Y+2	; 0x02
    25ea:	fb 81       	ldd	r31, Y+3	; 0x03
    25ec:	87 85       	ldd	r24, Z+15	; 0x0f
    25ee:	84 30       	cpi	r24, 0x04	; 4
    25f0:	88 f5       	brcc	.+98     	; 0x2654 <Seven_Segment_enuDisableCommon+0x94>
    25f2:	ea 81       	ldd	r30, Y+2	; 0x02
    25f4:	fb 81       	ldd	r31, Y+3	; 0x03
    25f6:	80 89       	ldd	r24, Z+16	; 0x10
    25f8:	88 30       	cpi	r24, 0x08	; 8
    25fa:	58 f4       	brcc	.+22     	; 0x2612 <Seven_Segment_enuDisableCommon+0x52>
				{
					DIO_enuSetPinValue(Cpy_pstrSegCnfg->SEG_u8LegCMN_Port,Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin,DIO_HIGH);
    25fc:	ea 81       	ldd	r30, Y+2	; 0x02
    25fe:	fb 81       	ldd	r31, Y+3	; 0x03
    2600:	87 85       	ldd	r24, Z+15	; 0x0f
    2602:	ea 81       	ldd	r30, Y+2	; 0x02
    2604:	fb 81       	ldd	r31, Y+3	; 0x03
    2606:	90 89       	ldd	r25, Z+16	; 0x10
    2608:	69 2f       	mov	r22, r25
    260a:	41 e0       	ldi	r20, 0x01	; 1
    260c:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    2610:	21 c0       	rjmp	.+66     	; 0x2654 <Seven_Segment_enuDisableCommon+0x94>

				}
				else if((Cpy_pstrSegCnfg->SEG_u8LegCMN_Port == NOT_CONNECTED) || (Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin == NOT_CONNECTED))
    2612:	ea 81       	ldd	r30, Y+2	; 0x02
    2614:	fb 81       	ldd	r31, Y+3	; 0x03
    2616:	87 85       	ldd	r24, Z+15	; 0x0f
    2618:	1d c0       	rjmp	.+58     	; 0x2654 <Seven_Segment_enuDisableCommon+0x94>
				{

				}

			}
			else if (Cpy_pstrSegCnfg->SEG_u8Type == COMMON_CATHOD )
    261a:	ea 81       	ldd	r30, Y+2	; 0x02
    261c:	fb 81       	ldd	r31, Y+3	; 0x03
    261e:	80 81       	ld	r24, Z
    2620:	88 23       	and	r24, r24
    2622:	c1 f4       	brne	.+48     	; 0x2654 <Seven_Segment_enuDisableCommon+0x94>
			{

				if((Cpy_pstrSegCnfg->SEG_u8LegCMN_Port <= DIO_PORTD) && (Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin <= DIO_PIN7) )
    2624:	ea 81       	ldd	r30, Y+2	; 0x02
    2626:	fb 81       	ldd	r31, Y+3	; 0x03
    2628:	87 85       	ldd	r24, Z+15	; 0x0f
    262a:	84 30       	cpi	r24, 0x04	; 4
    262c:	98 f4       	brcc	.+38     	; 0x2654 <Seven_Segment_enuDisableCommon+0x94>
    262e:	ea 81       	ldd	r30, Y+2	; 0x02
    2630:	fb 81       	ldd	r31, Y+3	; 0x03
    2632:	80 89       	ldd	r24, Z+16	; 0x10
    2634:	88 30       	cpi	r24, 0x08	; 8
    2636:	58 f4       	brcc	.+22     	; 0x264e <Seven_Segment_enuDisableCommon+0x8e>
				{
					DIO_enuSetPinValue(Cpy_pstrSegCnfg->SEG_u8LegCMN_Port,Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin,DIO_LOW);
    2638:	ea 81       	ldd	r30, Y+2	; 0x02
    263a:	fb 81       	ldd	r31, Y+3	; 0x03
    263c:	87 85       	ldd	r24, Z+15	; 0x0f
    263e:	ea 81       	ldd	r30, Y+2	; 0x02
    2640:	fb 81       	ldd	r31, Y+3	; 0x03
    2642:	90 89       	ldd	r25, Z+16	; 0x10
    2644:	69 2f       	mov	r22, r25
    2646:	40 e0       	ldi	r20, 0x00	; 0
    2648:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    264c:	03 c0       	rjmp	.+6      	; 0x2654 <Seven_Segment_enuDisableCommon+0x94>

				}
				else if((Cpy_pstrSegCnfg->SEG_u8LegCMN_Port == NOT_CONNECTED) || (Cpy_pstrSegCnfg->SEG_u8LegCMN_Pin == NOT_CONNECTED))
    264e:	ea 81       	ldd	r30, Y+2	; 0x02
    2650:	fb 81       	ldd	r31, Y+3	; 0x03
    2652:	87 85       	ldd	r24, Z+15	; 0x0f

			}



			Local_enuErrorState   = ES_OK ;
    2654:	81 e0       	ldi	r24, 0x01	; 1
    2656:	89 83       	std	Y+1, r24	; 0x01
    2658:	02 c0       	rjmp	.+4      	; 0x265e <Seven_Segment_enuDisableCommon+0x9e>
		}
		else
		{
			Local_enuErrorState   = ES_NULL_POINTER;
    265a:	82 e0       	ldi	r24, 0x02	; 2
    265c:	89 83       	std	Y+1, r24	; 0x01





		return Local_enuErrorState ;
    265e:	89 81       	ldd	r24, Y+1	; 0x01
	}//End of
    2660:	0f 90       	pop	r0
    2662:	0f 90       	pop	r0
    2664:	0f 90       	pop	r0
    2666:	0f 90       	pop	r0
    2668:	0f 90       	pop	r0
    266a:	cf 91       	pop	r28
    266c:	df 91       	pop	r29
    266e:	08 95       	ret

00002670 <Seven_Segment_enuEnableDot>:

	/********************************************************************/
	/********************************************************************/
	/********************************************************************/
	ES_t Seven_Segment_enuEnableDot(SEG_t*  Cpy_pstrSegCnfg )
	{
    2670:	df 93       	push	r29
    2672:	cf 93       	push	r28
    2674:	00 d0       	rcall	.+0      	; 0x2676 <Seven_Segment_enuEnableDot+0x6>
    2676:	00 d0       	rcall	.+0      	; 0x2678 <Seven_Segment_enuEnableDot+0x8>
    2678:	cd b7       	in	r28, 0x3d	; 61
    267a:	de b7       	in	r29, 0x3e	; 62
    267c:	9b 83       	std	Y+3, r25	; 0x03
    267e:	8a 83       	std	Y+2, r24	; 0x02
		ES_t  Local_enuErrorState   = ES_NOK ;
    2680:	19 82       	std	Y+1, r1	; 0x01

		if(Cpy_pstrSegCnfg != NULL )
    2682:	8a 81       	ldd	r24, Y+2	; 0x02
    2684:	9b 81       	ldd	r25, Y+3	; 0x03
    2686:	00 97       	sbiw	r24, 0x00	; 0
    2688:	71 f1       	breq	.+92     	; 0x26e6 <Seven_Segment_enuEnableDot+0x76>
		{

			if((Cpy_pstrSegCnfg->SEG_u8LegDot_Port <= DIO_PORTD) && (Cpy_pstrSegCnfg->SEG_u8LegDot_Pin <= DIO_PIN7) )
    268a:	ea 81       	ldd	r30, Y+2	; 0x02
    268c:	fb 81       	ldd	r31, Y+3	; 0x03
    268e:	81 89       	ldd	r24, Z+17	; 0x11
    2690:	84 30       	cpi	r24, 0x04	; 4
    2692:	58 f5       	brcc	.+86     	; 0x26ea <Seven_Segment_enuEnableDot+0x7a>
    2694:	ea 81       	ldd	r30, Y+2	; 0x02
    2696:	fb 81       	ldd	r31, Y+3	; 0x03
    2698:	82 89       	ldd	r24, Z+18	; 0x12
    269a:	88 30       	cpi	r24, 0x08	; 8
    269c:	00 f5       	brcc	.+64     	; 0x26de <Seven_Segment_enuEnableDot+0x6e>
			{

				if(Cpy_pstrSegCnfg->SEG_u8Type == COMMON_ANODE )
    269e:	ea 81       	ldd	r30, Y+2	; 0x02
    26a0:	fb 81       	ldd	r31, Y+3	; 0x03
    26a2:	80 81       	ld	r24, Z
    26a4:	81 30       	cpi	r24, 0x01	; 1
    26a6:	59 f4       	brne	.+22     	; 0x26be <Seven_Segment_enuEnableDot+0x4e>
				{
					DIO_enuSetPinValue(Cpy_pstrSegCnfg->SEG_u8LegDot_Port,Cpy_pstrSegCnfg->SEG_u8LegDot_Pin,DIO_LOW);
    26a8:	ea 81       	ldd	r30, Y+2	; 0x02
    26aa:	fb 81       	ldd	r31, Y+3	; 0x03
    26ac:	81 89       	ldd	r24, Z+17	; 0x11
    26ae:	ea 81       	ldd	r30, Y+2	; 0x02
    26b0:	fb 81       	ldd	r31, Y+3	; 0x03
    26b2:	92 89       	ldd	r25, Z+18	; 0x12
    26b4:	69 2f       	mov	r22, r25
    26b6:	40 e0       	ldi	r20, 0x00	; 0
    26b8:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    26bc:	16 c0       	rjmp	.+44     	; 0x26ea <Seven_Segment_enuEnableDot+0x7a>

				}
				else if (Cpy_pstrSegCnfg->SEG_u8Type == COMMON_CATHOD )
    26be:	ea 81       	ldd	r30, Y+2	; 0x02
    26c0:	fb 81       	ldd	r31, Y+3	; 0x03
    26c2:	80 81       	ld	r24, Z
    26c4:	88 23       	and	r24, r24
    26c6:	89 f4       	brne	.+34     	; 0x26ea <Seven_Segment_enuEnableDot+0x7a>
				{
					DIO_enuSetPinValue(Cpy_pstrSegCnfg->SEG_u8LegDot_Port,Cpy_pstrSegCnfg->SEG_u8LegDot_Pin,DIO_HIGH);
    26c8:	ea 81       	ldd	r30, Y+2	; 0x02
    26ca:	fb 81       	ldd	r31, Y+3	; 0x03
    26cc:	81 89       	ldd	r24, Z+17	; 0x11
    26ce:	ea 81       	ldd	r30, Y+2	; 0x02
    26d0:	fb 81       	ldd	r31, Y+3	; 0x03
    26d2:	92 89       	ldd	r25, Z+18	; 0x12
    26d4:	69 2f       	mov	r22, r25
    26d6:	41 e0       	ldi	r20, 0x01	; 1
    26d8:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    26dc:	06 c0       	rjmp	.+12     	; 0x26ea <Seven_Segment_enuEnableDot+0x7a>

				}


			}
			else if( (Cpy_pstrSegCnfg->SEG_u8LegDot_Port == NOT_CONNECTED) || (Cpy_pstrSegCnfg->SEG_u8LegDot_Pin == NOT_CONNECTED ))
    26de:	ea 81       	ldd	r30, Y+2	; 0x02
    26e0:	fb 81       	ldd	r31, Y+3	; 0x03
    26e2:	81 89       	ldd	r24, Z+17	; 0x11
    26e4:	02 c0       	rjmp	.+4      	; 0x26ea <Seven_Segment_enuEnableDot+0x7a>


		}
		else
		{
			Local_enuErrorState   = ES_NULL_POINTER;
    26e6:	82 e0       	ldi	r24, 0x02	; 2
    26e8:	89 83       	std	Y+1, r24	; 0x01
		}


		return Local_enuErrorState ;
    26ea:	89 81       	ldd	r24, Y+1	; 0x01
	}//End of
    26ec:	0f 90       	pop	r0
    26ee:	0f 90       	pop	r0
    26f0:	0f 90       	pop	r0
    26f2:	0f 90       	pop	r0
    26f4:	cf 91       	pop	r28
    26f6:	df 91       	pop	r29
    26f8:	08 95       	ret

000026fa <Seven_Segment_enuDisableDot>:

	/********************************************************************/
	/********************************************************************/
	/********************************************************************/
	ES_t Seven_Segment_enuDisableDot(SEG_t*  Cpy_pstrSegCnfg )
	{
    26fa:	df 93       	push	r29
    26fc:	cf 93       	push	r28
    26fe:	00 d0       	rcall	.+0      	; 0x2700 <Seven_Segment_enuDisableDot+0x6>
    2700:	00 d0       	rcall	.+0      	; 0x2702 <Seven_Segment_enuDisableDot+0x8>
    2702:	cd b7       	in	r28, 0x3d	; 61
    2704:	de b7       	in	r29, 0x3e	; 62
    2706:	9b 83       	std	Y+3, r25	; 0x03
    2708:	8a 83       	std	Y+2, r24	; 0x02
		ES_t  Local_enuErrorState   = ES_NOK ;
    270a:	19 82       	std	Y+1, r1	; 0x01



		if(Cpy_pstrSegCnfg != NULL )
    270c:	8a 81       	ldd	r24, Y+2	; 0x02
    270e:	9b 81       	ldd	r25, Y+3	; 0x03
    2710:	00 97       	sbiw	r24, 0x00	; 0
    2712:	71 f1       	breq	.+92     	; 0x2770 <Seven_Segment_enuDisableDot+0x76>
		{
			if((Cpy_pstrSegCnfg->SEG_u8LegDot_Port <= DIO_PORTD) && (Cpy_pstrSegCnfg->SEG_u8LegDot_Pin <= DIO_PIN7) )
    2714:	ea 81       	ldd	r30, Y+2	; 0x02
    2716:	fb 81       	ldd	r31, Y+3	; 0x03
    2718:	81 89       	ldd	r24, Z+17	; 0x11
    271a:	84 30       	cpi	r24, 0x04	; 4
    271c:	58 f5       	brcc	.+86     	; 0x2774 <Seven_Segment_enuDisableDot+0x7a>
    271e:	ea 81       	ldd	r30, Y+2	; 0x02
    2720:	fb 81       	ldd	r31, Y+3	; 0x03
    2722:	82 89       	ldd	r24, Z+18	; 0x12
    2724:	88 30       	cpi	r24, 0x08	; 8
    2726:	00 f5       	brcc	.+64     	; 0x2768 <Seven_Segment_enuDisableDot+0x6e>
			{

				if(Cpy_pstrSegCnfg->SEG_u8Type == COMMON_ANODE )
    2728:	ea 81       	ldd	r30, Y+2	; 0x02
    272a:	fb 81       	ldd	r31, Y+3	; 0x03
    272c:	80 81       	ld	r24, Z
    272e:	81 30       	cpi	r24, 0x01	; 1
    2730:	59 f4       	brne	.+22     	; 0x2748 <Seven_Segment_enuDisableDot+0x4e>
				{
					DIO_enuSetPinValue(Cpy_pstrSegCnfg->SEG_u8LegDot_Port,Cpy_pstrSegCnfg->SEG_u8LegDot_Pin,DIO_HIGH);
    2732:	ea 81       	ldd	r30, Y+2	; 0x02
    2734:	fb 81       	ldd	r31, Y+3	; 0x03
    2736:	81 89       	ldd	r24, Z+17	; 0x11
    2738:	ea 81       	ldd	r30, Y+2	; 0x02
    273a:	fb 81       	ldd	r31, Y+3	; 0x03
    273c:	92 89       	ldd	r25, Z+18	; 0x12
    273e:	69 2f       	mov	r22, r25
    2740:	41 e0       	ldi	r20, 0x01	; 1
    2742:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    2746:	16 c0       	rjmp	.+44     	; 0x2774 <Seven_Segment_enuDisableDot+0x7a>

				}
				else if (Cpy_pstrSegCnfg->SEG_u8Type == COMMON_CATHOD )
    2748:	ea 81       	ldd	r30, Y+2	; 0x02
    274a:	fb 81       	ldd	r31, Y+3	; 0x03
    274c:	80 81       	ld	r24, Z
    274e:	88 23       	and	r24, r24
    2750:	89 f4       	brne	.+34     	; 0x2774 <Seven_Segment_enuDisableDot+0x7a>
				{
					DIO_enuSetPinValue(Cpy_pstrSegCnfg->SEG_u8LegDot_Port,Cpy_pstrSegCnfg->SEG_u8LegDot_Pin,DIO_LOW);
    2752:	ea 81       	ldd	r30, Y+2	; 0x02
    2754:	fb 81       	ldd	r31, Y+3	; 0x03
    2756:	81 89       	ldd	r24, Z+17	; 0x11
    2758:	ea 81       	ldd	r30, Y+2	; 0x02
    275a:	fb 81       	ldd	r31, Y+3	; 0x03
    275c:	92 89       	ldd	r25, Z+18	; 0x12
    275e:	69 2f       	mov	r22, r25
    2760:	40 e0       	ldi	r20, 0x00	; 0
    2762:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    2766:	06 c0       	rjmp	.+12     	; 0x2774 <Seven_Segment_enuDisableDot+0x7a>

				}


			}
			else if( (Cpy_pstrSegCnfg->SEG_u8LegDot_Port == NOT_CONNECTED) || (Cpy_pstrSegCnfg->SEG_u8LegDot_Pin == NOT_CONNECTED ))
    2768:	ea 81       	ldd	r30, Y+2	; 0x02
    276a:	fb 81       	ldd	r31, Y+3	; 0x03
    276c:	81 89       	ldd	r24, Z+17	; 0x11
    276e:	02 c0       	rjmp	.+4      	; 0x2774 <Seven_Segment_enuDisableDot+0x7a>


		}
		else
		{
			Local_enuErrorState   = ES_NULL_POINTER;
    2770:	82 e0       	ldi	r24, 0x02	; 2
    2772:	89 83       	std	Y+1, r24	; 0x01
		}



		return Local_enuErrorState ;
    2774:	89 81       	ldd	r24, Y+1	; 0x01
	}//End of
    2776:	0f 90       	pop	r0
    2778:	0f 90       	pop	r0
    277a:	0f 90       	pop	r0
    277c:	0f 90       	pop	r0
    277e:	cf 91       	pop	r28
    2780:	df 91       	pop	r29
    2782:	08 95       	ret

00002784 <Seven_Segment_enuClearDisplay>:

	/********************************************************************/
	/********************************************************************/
	/********************************************************************/
	ES_t Seven_Segment_enuClearDisplay(SEG_t*  Cpy_pstrSegCnfg )
	{
    2784:	df 93       	push	r29
    2786:	cf 93       	push	r28
    2788:	00 d0       	rcall	.+0      	; 0x278a <Seven_Segment_enuClearDisplay+0x6>
    278a:	00 d0       	rcall	.+0      	; 0x278c <Seven_Segment_enuClearDisplay+0x8>
    278c:	cd b7       	in	r28, 0x3d	; 61
    278e:	de b7       	in	r29, 0x3e	; 62
    2790:	9c 83       	std	Y+4, r25	; 0x04
    2792:	8b 83       	std	Y+3, r24	; 0x03
		ES_t  Local_enuErrorState   = ES_NOK ;
    2794:	1a 82       	std	Y+2, r1	; 0x02


		if(Cpy_pstrSegCnfg != NULL )
    2796:	8b 81       	ldd	r24, Y+3	; 0x03
    2798:	9c 81       	ldd	r25, Y+4	; 0x04
    279a:	00 97       	sbiw	r24, 0x00	; 0
    279c:	09 f4       	brne	.+2      	; 0x27a0 <Seven_Segment_enuClearDisplay+0x1c>
    279e:	f1 c0       	rjmp	.+482    	; 0x2982 <Seven_Segment_enuClearDisplay+0x1fe>
		{
			u8 Cpy_u8Num =  0 ;
    27a0:	19 82       	std	Y+1, r1	; 0x01

			if(Cpy_pstrSegCnfg->SEG_u8Type == COMMON_ANODE )
    27a2:	eb 81       	ldd	r30, Y+3	; 0x03
    27a4:	fc 81       	ldd	r31, Y+4	; 0x04
    27a6:	80 81       	ld	r24, Z
    27a8:	81 30       	cpi	r24, 0x01	; 1
    27aa:	09 f0       	breq	.+2      	; 0x27ae <Seven_Segment_enuClearDisplay+0x2a>
    27ac:	72 c0       	rjmp	.+228    	; 0x2892 <Seven_Segment_enuClearDisplay+0x10e>
			{
				// Cpy_u8Num = SEG_Au8NumDisplay[Cpy_u8Num];  // (SEG_Au8NumDisplay[Cpy_u8Num]>>0)&1

				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegA_Port ,  Cpy_pstrSegCnfg->SEG_u8LegA_Pin ,Bit0);
    27ae:	eb 81       	ldd	r30, Y+3	; 0x03
    27b0:	fc 81       	ldd	r31, Y+4	; 0x04
    27b2:	21 81       	ldd	r18, Z+1	; 0x01
    27b4:	eb 81       	ldd	r30, Y+3	; 0x03
    27b6:	fc 81       	ldd	r31, Y+4	; 0x04
    27b8:	32 81       	ldd	r19, Z+2	; 0x02
    27ba:	89 81       	ldd	r24, Y+1	; 0x01
    27bc:	98 2f       	mov	r25, r24
    27be:	91 70       	andi	r25, 0x01	; 1
    27c0:	82 2f       	mov	r24, r18
    27c2:	63 2f       	mov	r22, r19
    27c4:	49 2f       	mov	r20, r25
    27c6:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegB_Port ,  Cpy_pstrSegCnfg->SEG_u8LegB_Pin ,Bit1);
    27ca:	eb 81       	ldd	r30, Y+3	; 0x03
    27cc:	fc 81       	ldd	r31, Y+4	; 0x04
    27ce:	33 81       	ldd	r19, Z+3	; 0x03
    27d0:	eb 81       	ldd	r30, Y+3	; 0x03
    27d2:	fc 81       	ldd	r31, Y+4	; 0x04
    27d4:	24 81       	ldd	r18, Z+4	; 0x04
    27d6:	89 81       	ldd	r24, Y+1	; 0x01
    27d8:	86 95       	lsr	r24
    27da:	98 2f       	mov	r25, r24
    27dc:	91 70       	andi	r25, 0x01	; 1
    27de:	83 2f       	mov	r24, r19
    27e0:	62 2f       	mov	r22, r18
    27e2:	49 2f       	mov	r20, r25
    27e4:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegC_Port ,  Cpy_pstrSegCnfg->SEG_u8LegC_Pin ,Bit2);
    27e8:	eb 81       	ldd	r30, Y+3	; 0x03
    27ea:	fc 81       	ldd	r31, Y+4	; 0x04
    27ec:	35 81       	ldd	r19, Z+5	; 0x05
    27ee:	eb 81       	ldd	r30, Y+3	; 0x03
    27f0:	fc 81       	ldd	r31, Y+4	; 0x04
    27f2:	26 81       	ldd	r18, Z+6	; 0x06
    27f4:	89 81       	ldd	r24, Y+1	; 0x01
    27f6:	86 95       	lsr	r24
    27f8:	86 95       	lsr	r24
    27fa:	98 2f       	mov	r25, r24
    27fc:	91 70       	andi	r25, 0x01	; 1
    27fe:	83 2f       	mov	r24, r19
    2800:	62 2f       	mov	r22, r18
    2802:	49 2f       	mov	r20, r25
    2804:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegD_Port ,  Cpy_pstrSegCnfg->SEG_u8LegD_Pin ,Bit3);
    2808:	eb 81       	ldd	r30, Y+3	; 0x03
    280a:	fc 81       	ldd	r31, Y+4	; 0x04
    280c:	37 81       	ldd	r19, Z+7	; 0x07
    280e:	eb 81       	ldd	r30, Y+3	; 0x03
    2810:	fc 81       	ldd	r31, Y+4	; 0x04
    2812:	20 85       	ldd	r18, Z+8	; 0x08
    2814:	89 81       	ldd	r24, Y+1	; 0x01
    2816:	86 95       	lsr	r24
    2818:	86 95       	lsr	r24
    281a:	86 95       	lsr	r24
    281c:	98 2f       	mov	r25, r24
    281e:	91 70       	andi	r25, 0x01	; 1
    2820:	83 2f       	mov	r24, r19
    2822:	62 2f       	mov	r22, r18
    2824:	49 2f       	mov	r20, r25
    2826:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegE_Port ,  Cpy_pstrSegCnfg->SEG_u8LegE_Pin ,Bit4);
    282a:	eb 81       	ldd	r30, Y+3	; 0x03
    282c:	fc 81       	ldd	r31, Y+4	; 0x04
    282e:	31 85       	ldd	r19, Z+9	; 0x09
    2830:	eb 81       	ldd	r30, Y+3	; 0x03
    2832:	fc 81       	ldd	r31, Y+4	; 0x04
    2834:	22 85       	ldd	r18, Z+10	; 0x0a
    2836:	89 81       	ldd	r24, Y+1	; 0x01
    2838:	82 95       	swap	r24
    283a:	8f 70       	andi	r24, 0x0F	; 15
    283c:	98 2f       	mov	r25, r24
    283e:	91 70       	andi	r25, 0x01	; 1
    2840:	83 2f       	mov	r24, r19
    2842:	62 2f       	mov	r22, r18
    2844:	49 2f       	mov	r20, r25
    2846:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegF_Port ,  Cpy_pstrSegCnfg->SEG_u8LegF_Pin ,Bit5);
    284a:	eb 81       	ldd	r30, Y+3	; 0x03
    284c:	fc 81       	ldd	r31, Y+4	; 0x04
    284e:	33 85       	ldd	r19, Z+11	; 0x0b
    2850:	eb 81       	ldd	r30, Y+3	; 0x03
    2852:	fc 81       	ldd	r31, Y+4	; 0x04
    2854:	24 85       	ldd	r18, Z+12	; 0x0c
    2856:	89 81       	ldd	r24, Y+1	; 0x01
    2858:	82 95       	swap	r24
    285a:	86 95       	lsr	r24
    285c:	87 70       	andi	r24, 0x07	; 7
    285e:	98 2f       	mov	r25, r24
    2860:	91 70       	andi	r25, 0x01	; 1
    2862:	83 2f       	mov	r24, r19
    2864:	62 2f       	mov	r22, r18
    2866:	49 2f       	mov	r20, r25
    2868:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegG_Port ,  Cpy_pstrSegCnfg->SEG_u8LegG_Pin ,Bit6);
    286c:	eb 81       	ldd	r30, Y+3	; 0x03
    286e:	fc 81       	ldd	r31, Y+4	; 0x04
    2870:	35 85       	ldd	r19, Z+13	; 0x0d
    2872:	eb 81       	ldd	r30, Y+3	; 0x03
    2874:	fc 81       	ldd	r31, Y+4	; 0x04
    2876:	26 85       	ldd	r18, Z+14	; 0x0e
    2878:	89 81       	ldd	r24, Y+1	; 0x01
    287a:	82 95       	swap	r24
    287c:	86 95       	lsr	r24
    287e:	86 95       	lsr	r24
    2880:	83 70       	andi	r24, 0x03	; 3
    2882:	98 2f       	mov	r25, r24
    2884:	91 70       	andi	r25, 0x01	; 1
    2886:	83 2f       	mov	r24, r19
    2888:	62 2f       	mov	r22, r18
    288a:	49 2f       	mov	r20, r25
    288c:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    2890:	7a c0       	rjmp	.+244    	; 0x2986 <Seven_Segment_enuClearDisplay+0x202>



			}
			else if (Cpy_pstrSegCnfg->SEG_u8Type == COMMON_CATHOD )
    2892:	eb 81       	ldd	r30, Y+3	; 0x03
    2894:	fc 81       	ldd	r31, Y+4	; 0x04
    2896:	80 81       	ld	r24, Z
    2898:	88 23       	and	r24, r24
    289a:	09 f0       	breq	.+2      	; 0x289e <Seven_Segment_enuClearDisplay+0x11a>
    289c:	74 c0       	rjmp	.+232    	; 0x2986 <Seven_Segment_enuClearDisplay+0x202>
			{
				//Cpy_u8Num = !SEG_Au8NumDisplay[0];


				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegA_Port ,  Cpy_pstrSegCnfg->SEG_u8LegA_Pin ,Bit0);
    289e:	eb 81       	ldd	r30, Y+3	; 0x03
    28a0:	fc 81       	ldd	r31, Y+4	; 0x04
    28a2:	21 81       	ldd	r18, Z+1	; 0x01
    28a4:	eb 81       	ldd	r30, Y+3	; 0x03
    28a6:	fc 81       	ldd	r31, Y+4	; 0x04
    28a8:	32 81       	ldd	r19, Z+2	; 0x02
    28aa:	89 81       	ldd	r24, Y+1	; 0x01
    28ac:	98 2f       	mov	r25, r24
    28ae:	91 70       	andi	r25, 0x01	; 1
    28b0:	82 2f       	mov	r24, r18
    28b2:	63 2f       	mov	r22, r19
    28b4:	49 2f       	mov	r20, r25
    28b6:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegB_Port ,  Cpy_pstrSegCnfg->SEG_u8LegB_Pin ,Bit1);
    28ba:	eb 81       	ldd	r30, Y+3	; 0x03
    28bc:	fc 81       	ldd	r31, Y+4	; 0x04
    28be:	33 81       	ldd	r19, Z+3	; 0x03
    28c0:	eb 81       	ldd	r30, Y+3	; 0x03
    28c2:	fc 81       	ldd	r31, Y+4	; 0x04
    28c4:	24 81       	ldd	r18, Z+4	; 0x04
    28c6:	89 81       	ldd	r24, Y+1	; 0x01
    28c8:	86 95       	lsr	r24
    28ca:	98 2f       	mov	r25, r24
    28cc:	91 70       	andi	r25, 0x01	; 1
    28ce:	83 2f       	mov	r24, r19
    28d0:	62 2f       	mov	r22, r18
    28d2:	49 2f       	mov	r20, r25
    28d4:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegC_Port ,  Cpy_pstrSegCnfg->SEG_u8LegC_Pin ,Bit2);
    28d8:	eb 81       	ldd	r30, Y+3	; 0x03
    28da:	fc 81       	ldd	r31, Y+4	; 0x04
    28dc:	35 81       	ldd	r19, Z+5	; 0x05
    28de:	eb 81       	ldd	r30, Y+3	; 0x03
    28e0:	fc 81       	ldd	r31, Y+4	; 0x04
    28e2:	26 81       	ldd	r18, Z+6	; 0x06
    28e4:	89 81       	ldd	r24, Y+1	; 0x01
    28e6:	86 95       	lsr	r24
    28e8:	86 95       	lsr	r24
    28ea:	98 2f       	mov	r25, r24
    28ec:	91 70       	andi	r25, 0x01	; 1
    28ee:	83 2f       	mov	r24, r19
    28f0:	62 2f       	mov	r22, r18
    28f2:	49 2f       	mov	r20, r25
    28f4:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegD_Port ,  Cpy_pstrSegCnfg->SEG_u8LegD_Pin ,Bit3);
    28f8:	eb 81       	ldd	r30, Y+3	; 0x03
    28fa:	fc 81       	ldd	r31, Y+4	; 0x04
    28fc:	37 81       	ldd	r19, Z+7	; 0x07
    28fe:	eb 81       	ldd	r30, Y+3	; 0x03
    2900:	fc 81       	ldd	r31, Y+4	; 0x04
    2902:	20 85       	ldd	r18, Z+8	; 0x08
    2904:	89 81       	ldd	r24, Y+1	; 0x01
    2906:	86 95       	lsr	r24
    2908:	86 95       	lsr	r24
    290a:	86 95       	lsr	r24
    290c:	98 2f       	mov	r25, r24
    290e:	91 70       	andi	r25, 0x01	; 1
    2910:	83 2f       	mov	r24, r19
    2912:	62 2f       	mov	r22, r18
    2914:	49 2f       	mov	r20, r25
    2916:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegE_Port ,  Cpy_pstrSegCnfg->SEG_u8LegE_Pin ,Bit4);
    291a:	eb 81       	ldd	r30, Y+3	; 0x03
    291c:	fc 81       	ldd	r31, Y+4	; 0x04
    291e:	31 85       	ldd	r19, Z+9	; 0x09
    2920:	eb 81       	ldd	r30, Y+3	; 0x03
    2922:	fc 81       	ldd	r31, Y+4	; 0x04
    2924:	22 85       	ldd	r18, Z+10	; 0x0a
    2926:	89 81       	ldd	r24, Y+1	; 0x01
    2928:	82 95       	swap	r24
    292a:	8f 70       	andi	r24, 0x0F	; 15
    292c:	98 2f       	mov	r25, r24
    292e:	91 70       	andi	r25, 0x01	; 1
    2930:	83 2f       	mov	r24, r19
    2932:	62 2f       	mov	r22, r18
    2934:	49 2f       	mov	r20, r25
    2936:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegF_Port ,  Cpy_pstrSegCnfg->SEG_u8LegF_Pin ,Bit5);
    293a:	eb 81       	ldd	r30, Y+3	; 0x03
    293c:	fc 81       	ldd	r31, Y+4	; 0x04
    293e:	33 85       	ldd	r19, Z+11	; 0x0b
    2940:	eb 81       	ldd	r30, Y+3	; 0x03
    2942:	fc 81       	ldd	r31, Y+4	; 0x04
    2944:	24 85       	ldd	r18, Z+12	; 0x0c
    2946:	89 81       	ldd	r24, Y+1	; 0x01
    2948:	82 95       	swap	r24
    294a:	86 95       	lsr	r24
    294c:	87 70       	andi	r24, 0x07	; 7
    294e:	98 2f       	mov	r25, r24
    2950:	91 70       	andi	r25, 0x01	; 1
    2952:	83 2f       	mov	r24, r19
    2954:	62 2f       	mov	r22, r18
    2956:	49 2f       	mov	r20, r25
    2958:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
				DIO_enuSetPinValue( Cpy_pstrSegCnfg->SEG_u8LegG_Port ,  Cpy_pstrSegCnfg->SEG_u8LegG_Pin ,Bit6);
    295c:	eb 81       	ldd	r30, Y+3	; 0x03
    295e:	fc 81       	ldd	r31, Y+4	; 0x04
    2960:	35 85       	ldd	r19, Z+13	; 0x0d
    2962:	eb 81       	ldd	r30, Y+3	; 0x03
    2964:	fc 81       	ldd	r31, Y+4	; 0x04
    2966:	26 85       	ldd	r18, Z+14	; 0x0e
    2968:	89 81       	ldd	r24, Y+1	; 0x01
    296a:	82 95       	swap	r24
    296c:	86 95       	lsr	r24
    296e:	86 95       	lsr	r24
    2970:	83 70       	andi	r24, 0x03	; 3
    2972:	98 2f       	mov	r25, r24
    2974:	91 70       	andi	r25, 0x01	; 1
    2976:	83 2f       	mov	r24, r19
    2978:	62 2f       	mov	r22, r18
    297a:	49 2f       	mov	r20, r25
    297c:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <DIO_enuSetPinValue>
    2980:	02 c0       	rjmp	.+4      	; 0x2986 <Seven_Segment_enuClearDisplay+0x202>


		}
		else
		{
			Local_enuErrorState   = ES_NULL_POINTER;
    2982:	82 e0       	ldi	r24, 0x02	; 2
    2984:	8a 83       	std	Y+2, r24	; 0x02
		}


		return Local_enuErrorState ;
    2986:	8a 81       	ldd	r24, Y+2	; 0x02

	}
    2988:	0f 90       	pop	r0
    298a:	0f 90       	pop	r0
    298c:	0f 90       	pop	r0
    298e:	0f 90       	pop	r0
    2990:	cf 91       	pop	r28
    2992:	df 91       	pop	r29
    2994:	08 95       	ret

00002996 <main>:
#include "SEV_SEG_Cnfg.h"
#include "SEV_SEG_Interface.h"

#include<util/delay.h>
int main(void)
{
    2996:	df 93       	push	r29
    2998:	cf 93       	push	r28
    299a:	cd b7       	in	r28, 0x3d	; 61
    299c:	de b7       	in	r29, 0x3e	; 62
    299e:	a0 97       	sbiw	r28, 0x20	; 32
    29a0:	0f b6       	in	r0, 0x3f	; 63
    29a2:	f8 94       	cli
    29a4:	de bf       	out	0x3e, r29	; 62
    29a6:	0f be       	out	0x3f, r0	; 63
    29a8:	cd bf       	out	0x3d, r28	; 61
	Seven_Segment_enuInit(SevenSegment_AstrSegCnfg);
    29aa:	88 e6       	ldi	r24, 0x68	; 104
    29ac:	90 e0       	ldi	r25, 0x00	; 0
    29ae:	0e 94 05 0a 	call	0x140a	; 0x140a <Seven_Segment_enuInit>
	{


		//Seven_Segment_enuDisplayNum(&SevenSegment_AstrSegCnfg[0],9);

		for(int i = 0 ; i <10  ; i++ )
    29b2:	18 a2       	std	Y+32, r1	; 0x20
    29b4:	1f 8e       	std	Y+31, r1	; 0x1f
    29b6:	0a c1       	rjmp	.+532    	; 0x2bcc <main+0x236>
    29b8:	80 e0       	ldi	r24, 0x00	; 0
    29ba:	90 e0       	ldi	r25, 0x00	; 0
    29bc:	aa e7       	ldi	r26, 0x7A	; 122
    29be:	b4 e4       	ldi	r27, 0x44	; 68
    29c0:	89 8f       	std	Y+25, r24	; 0x19
    29c2:	9a 8f       	std	Y+26, r25	; 0x1a
    29c4:	ab 8f       	std	Y+27, r26	; 0x1b
    29c6:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29c8:	69 8d       	ldd	r22, Y+25	; 0x19
    29ca:	7a 8d       	ldd	r23, Y+26	; 0x1a
    29cc:	8b 8d       	ldd	r24, Y+27	; 0x1b
    29ce:	9c 8d       	ldd	r25, Y+28	; 0x1c
    29d0:	20 e0       	ldi	r18, 0x00	; 0
    29d2:	30 e0       	ldi	r19, 0x00	; 0
    29d4:	4a e7       	ldi	r20, 0x7A	; 122
    29d6:	53 e4       	ldi	r21, 0x43	; 67
    29d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29dc:	dc 01       	movw	r26, r24
    29de:	cb 01       	movw	r24, r22
    29e0:	8d 8b       	std	Y+21, r24	; 0x15
    29e2:	9e 8b       	std	Y+22, r25	; 0x16
    29e4:	af 8b       	std	Y+23, r26	; 0x17
    29e6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    29e8:	6d 89       	ldd	r22, Y+21	; 0x15
    29ea:	7e 89       	ldd	r23, Y+22	; 0x16
    29ec:	8f 89       	ldd	r24, Y+23	; 0x17
    29ee:	98 8d       	ldd	r25, Y+24	; 0x18
    29f0:	20 e0       	ldi	r18, 0x00	; 0
    29f2:	30 e0       	ldi	r19, 0x00	; 0
    29f4:	40 e8       	ldi	r20, 0x80	; 128
    29f6:	5f e3       	ldi	r21, 0x3F	; 63
    29f8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    29fc:	88 23       	and	r24, r24
    29fe:	2c f4       	brge	.+10     	; 0x2a0a <main+0x74>
		__ticks = 1;
    2a00:	81 e0       	ldi	r24, 0x01	; 1
    2a02:	90 e0       	ldi	r25, 0x00	; 0
    2a04:	9c 8b       	std	Y+20, r25	; 0x14
    2a06:	8b 8b       	std	Y+19, r24	; 0x13
    2a08:	3f c0       	rjmp	.+126    	; 0x2a88 <main+0xf2>
	else if (__tmp > 65535)
    2a0a:	6d 89       	ldd	r22, Y+21	; 0x15
    2a0c:	7e 89       	ldd	r23, Y+22	; 0x16
    2a0e:	8f 89       	ldd	r24, Y+23	; 0x17
    2a10:	98 8d       	ldd	r25, Y+24	; 0x18
    2a12:	20 e0       	ldi	r18, 0x00	; 0
    2a14:	3f ef       	ldi	r19, 0xFF	; 255
    2a16:	4f e7       	ldi	r20, 0x7F	; 127
    2a18:	57 e4       	ldi	r21, 0x47	; 71
    2a1a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a1e:	18 16       	cp	r1, r24
    2a20:	4c f5       	brge	.+82     	; 0x2a74 <main+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a22:	69 8d       	ldd	r22, Y+25	; 0x19
    2a24:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2a26:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2a28:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2a2a:	20 e0       	ldi	r18, 0x00	; 0
    2a2c:	30 e0       	ldi	r19, 0x00	; 0
    2a2e:	40 e2       	ldi	r20, 0x20	; 32
    2a30:	51 e4       	ldi	r21, 0x41	; 65
    2a32:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a36:	dc 01       	movw	r26, r24
    2a38:	cb 01       	movw	r24, r22
    2a3a:	bc 01       	movw	r22, r24
    2a3c:	cd 01       	movw	r24, r26
    2a3e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a42:	dc 01       	movw	r26, r24
    2a44:	cb 01       	movw	r24, r22
    2a46:	9c 8b       	std	Y+20, r25	; 0x14
    2a48:	8b 8b       	std	Y+19, r24	; 0x13
    2a4a:	0f c0       	rjmp	.+30     	; 0x2a6a <main+0xd4>
    2a4c:	89 e1       	ldi	r24, 0x19	; 25
    2a4e:	90 e0       	ldi	r25, 0x00	; 0
    2a50:	9a 8b       	std	Y+18, r25	; 0x12
    2a52:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2a54:	89 89       	ldd	r24, Y+17	; 0x11
    2a56:	9a 89       	ldd	r25, Y+18	; 0x12
    2a58:	01 97       	sbiw	r24, 0x01	; 1
    2a5a:	f1 f7       	brne	.-4      	; 0x2a58 <main+0xc2>
    2a5c:	9a 8b       	std	Y+18, r25	; 0x12
    2a5e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a60:	8b 89       	ldd	r24, Y+19	; 0x13
    2a62:	9c 89       	ldd	r25, Y+20	; 0x14
    2a64:	01 97       	sbiw	r24, 0x01	; 1
    2a66:	9c 8b       	std	Y+20, r25	; 0x14
    2a68:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a6a:	8b 89       	ldd	r24, Y+19	; 0x13
    2a6c:	9c 89       	ldd	r25, Y+20	; 0x14
    2a6e:	00 97       	sbiw	r24, 0x00	; 0
    2a70:	69 f7       	brne	.-38     	; 0x2a4c <main+0xb6>
    2a72:	14 c0       	rjmp	.+40     	; 0x2a9c <main+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a74:	6d 89       	ldd	r22, Y+21	; 0x15
    2a76:	7e 89       	ldd	r23, Y+22	; 0x16
    2a78:	8f 89       	ldd	r24, Y+23	; 0x17
    2a7a:	98 8d       	ldd	r25, Y+24	; 0x18
    2a7c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a80:	dc 01       	movw	r26, r24
    2a82:	cb 01       	movw	r24, r22
    2a84:	9c 8b       	std	Y+20, r25	; 0x14
    2a86:	8b 8b       	std	Y+19, r24	; 0x13
    2a88:	8b 89       	ldd	r24, Y+19	; 0x13
    2a8a:	9c 89       	ldd	r25, Y+20	; 0x14
    2a8c:	98 8b       	std	Y+16, r25	; 0x10
    2a8e:	8f 87       	std	Y+15, r24	; 0x0f
    2a90:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a92:	98 89       	ldd	r25, Y+16	; 0x10
    2a94:	01 97       	sbiw	r24, 0x01	; 1
    2a96:	f1 f7       	brne	.-4      	; 0x2a94 <main+0xfe>
    2a98:	98 8b       	std	Y+16, r25	; 0x10
    2a9a:	8f 87       	std	Y+15, r24	; 0x0f
		{
			_delay_ms(1000);
			Seven_Segment_enuDisplayNum(&SevenSegment_AstrSegCnfg[0] , i);
    2a9c:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2a9e:	88 e6       	ldi	r24, 0x68	; 104
    2aa0:	90 e0       	ldi	r25, 0x00	; 0
    2aa2:	62 2f       	mov	r22, r18
    2aa4:	0e 94 02 11 	call	0x2204	; 0x2204 <Seven_Segment_enuDisplayNum>
			if(i == 9 )
    2aa8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2aaa:	98 a1       	ldd	r25, Y+32	; 0x20
    2aac:	89 30       	cpi	r24, 0x09	; 9
    2aae:	91 05       	cpc	r25, r1
    2ab0:	09 f0       	breq	.+2      	; 0x2ab4 <main+0x11e>
    2ab2:	87 c0       	rjmp	.+270    	; 0x2bc2 <main+0x22c>
			{
				for(int j = 9 ;j>=0 ; j--)
    2ab4:	89 e0       	ldi	r24, 0x09	; 9
    2ab6:	90 e0       	ldi	r25, 0x00	; 0
    2ab8:	9e 8f       	std	Y+30, r25	; 0x1e
    2aba:	8d 8f       	std	Y+29, r24	; 0x1d
    2abc:	7d c0       	rjmp	.+250    	; 0x2bb8 <main+0x222>
    2abe:	80 e0       	ldi	r24, 0x00	; 0
    2ac0:	90 e0       	ldi	r25, 0x00	; 0
    2ac2:	aa e7       	ldi	r26, 0x7A	; 122
    2ac4:	b4 e4       	ldi	r27, 0x44	; 68
    2ac6:	8b 87       	std	Y+11, r24	; 0x0b
    2ac8:	9c 87       	std	Y+12, r25	; 0x0c
    2aca:	ad 87       	std	Y+13, r26	; 0x0d
    2acc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ace:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ad0:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ad2:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ad4:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ad6:	20 e0       	ldi	r18, 0x00	; 0
    2ad8:	30 e0       	ldi	r19, 0x00	; 0
    2ada:	4a e7       	ldi	r20, 0x7A	; 122
    2adc:	53 e4       	ldi	r21, 0x43	; 67
    2ade:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ae2:	dc 01       	movw	r26, r24
    2ae4:	cb 01       	movw	r24, r22
    2ae6:	8f 83       	std	Y+7, r24	; 0x07
    2ae8:	98 87       	std	Y+8, r25	; 0x08
    2aea:	a9 87       	std	Y+9, r26	; 0x09
    2aec:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2aee:	6f 81       	ldd	r22, Y+7	; 0x07
    2af0:	78 85       	ldd	r23, Y+8	; 0x08
    2af2:	89 85       	ldd	r24, Y+9	; 0x09
    2af4:	9a 85       	ldd	r25, Y+10	; 0x0a
    2af6:	20 e0       	ldi	r18, 0x00	; 0
    2af8:	30 e0       	ldi	r19, 0x00	; 0
    2afa:	40 e8       	ldi	r20, 0x80	; 128
    2afc:	5f e3       	ldi	r21, 0x3F	; 63
    2afe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b02:	88 23       	and	r24, r24
    2b04:	2c f4       	brge	.+10     	; 0x2b10 <main+0x17a>
		__ticks = 1;
    2b06:	81 e0       	ldi	r24, 0x01	; 1
    2b08:	90 e0       	ldi	r25, 0x00	; 0
    2b0a:	9e 83       	std	Y+6, r25	; 0x06
    2b0c:	8d 83       	std	Y+5, r24	; 0x05
    2b0e:	3f c0       	rjmp	.+126    	; 0x2b8e <main+0x1f8>
	else if (__tmp > 65535)
    2b10:	6f 81       	ldd	r22, Y+7	; 0x07
    2b12:	78 85       	ldd	r23, Y+8	; 0x08
    2b14:	89 85       	ldd	r24, Y+9	; 0x09
    2b16:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b18:	20 e0       	ldi	r18, 0x00	; 0
    2b1a:	3f ef       	ldi	r19, 0xFF	; 255
    2b1c:	4f e7       	ldi	r20, 0x7F	; 127
    2b1e:	57 e4       	ldi	r21, 0x47	; 71
    2b20:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b24:	18 16       	cp	r1, r24
    2b26:	4c f5       	brge	.+82     	; 0x2b7a <main+0x1e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b28:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b2a:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b2c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b2e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b30:	20 e0       	ldi	r18, 0x00	; 0
    2b32:	30 e0       	ldi	r19, 0x00	; 0
    2b34:	40 e2       	ldi	r20, 0x20	; 32
    2b36:	51 e4       	ldi	r21, 0x41	; 65
    2b38:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b3c:	dc 01       	movw	r26, r24
    2b3e:	cb 01       	movw	r24, r22
    2b40:	bc 01       	movw	r22, r24
    2b42:	cd 01       	movw	r24, r26
    2b44:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b48:	dc 01       	movw	r26, r24
    2b4a:	cb 01       	movw	r24, r22
    2b4c:	9e 83       	std	Y+6, r25	; 0x06
    2b4e:	8d 83       	std	Y+5, r24	; 0x05
    2b50:	0f c0       	rjmp	.+30     	; 0x2b70 <main+0x1da>
    2b52:	89 e1       	ldi	r24, 0x19	; 25
    2b54:	90 e0       	ldi	r25, 0x00	; 0
    2b56:	9c 83       	std	Y+4, r25	; 0x04
    2b58:	8b 83       	std	Y+3, r24	; 0x03
    2b5a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b5c:	9c 81       	ldd	r25, Y+4	; 0x04
    2b5e:	01 97       	sbiw	r24, 0x01	; 1
    2b60:	f1 f7       	brne	.-4      	; 0x2b5e <main+0x1c8>
    2b62:	9c 83       	std	Y+4, r25	; 0x04
    2b64:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b66:	8d 81       	ldd	r24, Y+5	; 0x05
    2b68:	9e 81       	ldd	r25, Y+6	; 0x06
    2b6a:	01 97       	sbiw	r24, 0x01	; 1
    2b6c:	9e 83       	std	Y+6, r25	; 0x06
    2b6e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b70:	8d 81       	ldd	r24, Y+5	; 0x05
    2b72:	9e 81       	ldd	r25, Y+6	; 0x06
    2b74:	00 97       	sbiw	r24, 0x00	; 0
    2b76:	69 f7       	brne	.-38     	; 0x2b52 <main+0x1bc>
    2b78:	14 c0       	rjmp	.+40     	; 0x2ba2 <main+0x20c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b7a:	6f 81       	ldd	r22, Y+7	; 0x07
    2b7c:	78 85       	ldd	r23, Y+8	; 0x08
    2b7e:	89 85       	ldd	r24, Y+9	; 0x09
    2b80:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b86:	dc 01       	movw	r26, r24
    2b88:	cb 01       	movw	r24, r22
    2b8a:	9e 83       	std	Y+6, r25	; 0x06
    2b8c:	8d 83       	std	Y+5, r24	; 0x05
    2b8e:	8d 81       	ldd	r24, Y+5	; 0x05
    2b90:	9e 81       	ldd	r25, Y+6	; 0x06
    2b92:	9a 83       	std	Y+2, r25	; 0x02
    2b94:	89 83       	std	Y+1, r24	; 0x01
    2b96:	89 81       	ldd	r24, Y+1	; 0x01
    2b98:	9a 81       	ldd	r25, Y+2	; 0x02
    2b9a:	01 97       	sbiw	r24, 0x01	; 1
    2b9c:	f1 f7       	brne	.-4      	; 0x2b9a <main+0x204>
    2b9e:	9a 83       	std	Y+2, r25	; 0x02
    2ba0:	89 83       	std	Y+1, r24	; 0x01
				{
					_delay_ms(1000);
					Seven_Segment_enuDisplayNum(&SevenSegment_AstrSegCnfg[0] , j);
    2ba2:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2ba4:	88 e6       	ldi	r24, 0x68	; 104
    2ba6:	90 e0       	ldi	r25, 0x00	; 0
    2ba8:	62 2f       	mov	r22, r18
    2baa:	0e 94 02 11 	call	0x2204	; 0x2204 <Seven_Segment_enuDisplayNum>
		{
			_delay_ms(1000);
			Seven_Segment_enuDisplayNum(&SevenSegment_AstrSegCnfg[0] , i);
			if(i == 9 )
			{
				for(int j = 9 ;j>=0 ; j--)
    2bae:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2bb0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2bb2:	01 97       	sbiw	r24, 0x01	; 1
    2bb4:	9e 8f       	std	Y+30, r25	; 0x1e
    2bb6:	8d 8f       	std	Y+29, r24	; 0x1d
    2bb8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2bba:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2bbc:	99 23       	and	r25, r25
    2bbe:	0c f0       	brlt	.+2      	; 0x2bc2 <main+0x22c>
    2bc0:	7e cf       	rjmp	.-260    	; 0x2abe <main+0x128>
	{


		//Seven_Segment_enuDisplayNum(&SevenSegment_AstrSegCnfg[0],9);

		for(int i = 0 ; i <10  ; i++ )
    2bc2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2bc4:	98 a1       	ldd	r25, Y+32	; 0x20
    2bc6:	01 96       	adiw	r24, 0x01	; 1
    2bc8:	98 a3       	std	Y+32, r25	; 0x20
    2bca:	8f 8f       	std	Y+31, r24	; 0x1f
    2bcc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2bce:	98 a1       	ldd	r25, Y+32	; 0x20
    2bd0:	8a 30       	cpi	r24, 0x0A	; 10
    2bd2:	91 05       	cpc	r25, r1
    2bd4:	0c f4       	brge	.+2      	; 0x2bd8 <main+0x242>
    2bd6:	f0 ce       	rjmp	.-544    	; 0x29b8 <main+0x22>
    2bd8:	ec ce       	rjmp	.-552    	; 0x29b2 <main+0x1c>

00002bda <__prologue_saves__>:
    2bda:	2f 92       	push	r2
    2bdc:	3f 92       	push	r3
    2bde:	4f 92       	push	r4
    2be0:	5f 92       	push	r5
    2be2:	6f 92       	push	r6
    2be4:	7f 92       	push	r7
    2be6:	8f 92       	push	r8
    2be8:	9f 92       	push	r9
    2bea:	af 92       	push	r10
    2bec:	bf 92       	push	r11
    2bee:	cf 92       	push	r12
    2bf0:	df 92       	push	r13
    2bf2:	ef 92       	push	r14
    2bf4:	ff 92       	push	r15
    2bf6:	0f 93       	push	r16
    2bf8:	1f 93       	push	r17
    2bfa:	cf 93       	push	r28
    2bfc:	df 93       	push	r29
    2bfe:	cd b7       	in	r28, 0x3d	; 61
    2c00:	de b7       	in	r29, 0x3e	; 62
    2c02:	ca 1b       	sub	r28, r26
    2c04:	db 0b       	sbc	r29, r27
    2c06:	0f b6       	in	r0, 0x3f	; 63
    2c08:	f8 94       	cli
    2c0a:	de bf       	out	0x3e, r29	; 62
    2c0c:	0f be       	out	0x3f, r0	; 63
    2c0e:	cd bf       	out	0x3d, r28	; 61
    2c10:	09 94       	ijmp

00002c12 <__epilogue_restores__>:
    2c12:	2a 88       	ldd	r2, Y+18	; 0x12
    2c14:	39 88       	ldd	r3, Y+17	; 0x11
    2c16:	48 88       	ldd	r4, Y+16	; 0x10
    2c18:	5f 84       	ldd	r5, Y+15	; 0x0f
    2c1a:	6e 84       	ldd	r6, Y+14	; 0x0e
    2c1c:	7d 84       	ldd	r7, Y+13	; 0x0d
    2c1e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2c20:	9b 84       	ldd	r9, Y+11	; 0x0b
    2c22:	aa 84       	ldd	r10, Y+10	; 0x0a
    2c24:	b9 84       	ldd	r11, Y+9	; 0x09
    2c26:	c8 84       	ldd	r12, Y+8	; 0x08
    2c28:	df 80       	ldd	r13, Y+7	; 0x07
    2c2a:	ee 80       	ldd	r14, Y+6	; 0x06
    2c2c:	fd 80       	ldd	r15, Y+5	; 0x05
    2c2e:	0c 81       	ldd	r16, Y+4	; 0x04
    2c30:	1b 81       	ldd	r17, Y+3	; 0x03
    2c32:	aa 81       	ldd	r26, Y+2	; 0x02
    2c34:	b9 81       	ldd	r27, Y+1	; 0x01
    2c36:	ce 0f       	add	r28, r30
    2c38:	d1 1d       	adc	r29, r1
    2c3a:	0f b6       	in	r0, 0x3f	; 63
    2c3c:	f8 94       	cli
    2c3e:	de bf       	out	0x3e, r29	; 62
    2c40:	0f be       	out	0x3f, r0	; 63
    2c42:	cd bf       	out	0x3d, r28	; 61
    2c44:	ed 01       	movw	r28, r26
    2c46:	08 95       	ret

00002c48 <_exit>:
    2c48:	f8 94       	cli

00002c4a <__stop_program>:
    2c4a:	ff cf       	rjmp	.-2      	; 0x2c4a <__stop_program>
